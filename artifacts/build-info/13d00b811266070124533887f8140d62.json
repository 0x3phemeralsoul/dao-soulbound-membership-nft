{"id":"13d00b811266070124533887f8140d62","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Counters.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/cryptography/EIP712.sol\";\nimport \"./IVotes.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n *\n * _Available since v4.5._\n */\nabstract contract Votes is IVotes, Context, EIP712 {\n    using Checkpoints for Checkpoints.History;\n    using Counters for Counters.Counter;\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegation;\n    mapping(address => Checkpoints.History) private _delegateCheckpoints;\n    Checkpoints.History private _totalCheckpoints;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return _delegateCheckpoints[account].getAtProbablyRecentBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"Votes: block not yet mined\");\n        return _totalCheckpoints.getAtProbablyRecentBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegation[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegation[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        if (from == address(0)) {\n            _totalCheckpoints.push(_add, amount);\n        }\n        if (to == address(0)) {\n            _totalCheckpoints.push(_subtract, amount);\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(\n        address from,\n        address to,\n        uint256 amount\n    ) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _delegateCheckpoints[from].push(_subtract, amount);\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _delegateCheckpoints[to].push(_add, amount);\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev Returns an address nonce.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev Returns the contract's {EIP712} domain separator.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _burn(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        if (batchSize > 1) {\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\n            revert(\"ERC721Enumerable: consecutive transfers not supported\");\n        }\n\n        uint256 tokenId = firstTokenId;\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../governance/utils/Votes.sol\";\n\n/**\n * @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n * as 1 vote unit.\n *\n * Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n * on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n * the votes in governance decisions, or they can delegate to themselves to be their own representative.\n *\n * _Available since v4.5._\n */\nabstract contract ERC721Votes is ERC721, Votes {\n    /**\n     * @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        _transferVotingUnits(from, to, batchSize);\n        super._afterTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n    /**\n     * @dev Returns the balance of `account`.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n     * checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n     * checkpoints.\n     */\n    function getAtProbablyRecentBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        return _insert(self._checkpoints, SafeCast.toUint32(block.number), SafeCast.toUint224(value));\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(History storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _blockNumber,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._blockNumber, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(History storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._blockNumber <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._blockNumber == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint({_blockNumber: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint({_blockNumber: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    function _unsafeAccess(Checkpoint[] storage self, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _key,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    function _unsafeAccess(Checkpoint224[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint224 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint96 _key,\n            uint160 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    function _unsafeAccess(Checkpoint160[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint160 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/NFT.sol":{"content":"//Contract based on [https://docs.openzeppelin.com/contracts/4.x/erc721](https://docs.openzeppelin.com/contracts/4.x/erc721)\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\";\n\n/**\n * @author  0x3pehemeralsoul\n * @title   DAO Soulbound NFT contract\n * @dev     Soubound token. Only burner and owner can burn token. Only 1 token allowed per address. Uri role can update tokenURI. Only minter can mint.\n */\n\ncontract NFT is \n    ERC721Enumerable,\n    ERC721Burnable, \n    AccessControlEnumerable,\n    ERC721Votes\n{\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    string baseTokenURI;\n    \n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"DEFAULT_ADMIN_ROLE\");    \n\n    constructor(address minter, address admin, string memory _baseTokenURI) ERC721(\"TEST1PCC DAO Membership\", \"T1PCC\") EIP712(\"PCC DAO\", \"1.0\") {\n        _setupRole(MINTER_ROLE, minter);\n        _setupRole(DEFAULT_ADMIN_ROLE, admin);\n        baseTokenURI = _baseTokenURI;\n\n\n    }\n\n    /**\n     * @notice  Mints only 1 token to recipient. \n     * @dev     Reverts if receipient owns already 1 token\n     * @param   recipient  token holder\n     * @return  uint256  tokenId assigned to holder\n     */\n    function mintNFT(address recipient)\n        public onlyRole(MINTER_ROLE)\n        returns (uint256)\n        \n    {\n        \n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _safeMint(recipient, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n     * @dev     Here is where we enforce the soulbound. The 2 require stataments allow for burning by owner or by BURNER_ROLE\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual override(ERC721, ERC721Enumerable)  {\n        require(from == address(0) || to == address(0), \"Transfer is BLOCKED\");  \n        require(to == address(0) || balanceOf(to) == 0, \"You own a token\"); \n        super._beforeTokenTransfer(from, to, tokenId, batchSize);  \n    }\n\n    /**\n     * @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override(ERC721, ERC721Votes) {\n        _transferVotingUnits(from, to, batchSize);\n        super._afterTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n\n    /**\n     * @notice  Owner can burn token in order to enforce the right to be forgotten. Also BURNER_ROLE can burn in order to kick out a member from a DAO.\n     * @dev     Override to include BURNER_ROLE, the _beforeTokenTransfer function is overriden to comply also with BURNER_ROLE. These 2 functions go hand in hand.\n     * @param   tokenId  tokenID to be burned\n     */\n    function burn(uint256 tokenId) public virtual override {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) || _isApprovedOrOwner(_msgSender(), tokenId), \"Caller cannot burn\");\n        super._burn(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}. the baseTokenURI is the same for all tokens.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        return baseTokenURI;\n    }\n\n    /**\n     * @dev setter for the NFT token URI.\n     */\n    function _setTokenURI(string memory _baseTokenUri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        baseTokenURI = _baseTokenUri;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n    */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(AccessControlEnumerable, ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> contracts/NFT.sol:18:1:\n   |\n18 | contract NFT is \n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":4360,"file":"contracts/NFT.sol","start":765},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[4364],"ERC165":[5152],"IAccessControl":[513],"IERC165":[5164],"Math":[6029],"Strings":[4613]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":514,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":4365,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":4614,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":5153,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5152,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,5152,5164,513,4364],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":315,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[5151],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$513","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5151,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":315,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":315,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":315,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3791:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3801:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3830:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4613_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4613_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":4592,"src":"4088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4088:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3844:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3844:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":315,"src":"3718:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[488],"body":{"id":145,"nodeType":"Block","src":"4461:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4478:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4478:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4471:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4203:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4408:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4400:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4452:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:0"},"scope":315,"src":"4378:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":165,"nodeType":"Block","src":"4906:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4927:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4916:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4916:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4513:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4886:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4877:8:0"},"nodeType":"ModifierInvocation","src":"4877:28:0"}],"name":"grantRole","nameLocation":"4812:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4830:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4822:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4844:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4906:0:0"},"scope":315,"src":"4803:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":185,"nodeType":"Block","src":"5332:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5354:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5360:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5342:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5342:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5342:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4954:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5325:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5312:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5312:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5303:8:0"},"nodeType":"ModifierInvocation","src":"5303:28:0"}],"name":"revokeRole","nameLocation":"5237:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5256:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5270:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5332:0:0"},"scope":315,"src":"5228:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":208,"nodeType":"Block","src":"5989:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"6018:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5999:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5999:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6093:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6093:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5381:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5942:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5934:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5956:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5989:0:0"},"scope":315,"src":"5912:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6879:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6906:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6889:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6889:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6889:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6132:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6839:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6853:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6845:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6879:0:0"},"scope":315,"src":"6811:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7119:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7129:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7170:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7157:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7157:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7185:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7185:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7210:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7185:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7251:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7257:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7276:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7234:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7234:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7229:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6927:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7077:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7069:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7083:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7119:0:0"},"scope":315,"src":"7046:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7529:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7558:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7539:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7568:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7582:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7589:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7582:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7582:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7649:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"7664:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7664:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7637:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7637:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7632:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7299:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7489:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7503:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7495:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7529:0:0"},"scope":315,"src":"7461:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7934:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7962:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7948:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7948:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7944:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7972:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7986:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7993:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"7986:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8054:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"8069:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8069:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8042:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8042:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8037:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7700:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7894:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7908:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7900:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7934:0:0"},"scope":315,"src":"7865:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1806:6295:0","usedErrors":[]}],"src":"108:7994:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[4364],"ERC165":[5152],"EnumerableSet":[8183],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[5164],"Math":[6029],"Strings":[4613]},"id":441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":539,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":316,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":8184,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":322,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":538,"src":"400:24:1"},"id":323,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":324,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"426:13:1"},"id":325,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":440,"linearizedBaseContracts":[440,315,5152,5164,538,513,4364],"name":"AccessControlEnumerable","nameLocation":"373:23:1","nodeType":"ContractDefinition","nodes":[{"id":329,"libraryName":{"id":326,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":8183,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"470:24:1"},"referencedDeclaration":7896,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":334,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:1","nodeType":"VariableDeclaration","scope":440,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":333,"keyType":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"520:24:1"},"referencedDeclaration":7896,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":355,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":345,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$538","typeString":"type(contract IAccessControlEnumerable)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":351,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":349,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":354,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:1","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:1","nodeType":"VariableDeclaration","scope":356,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":440,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[529],"body":{"id":374,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":367,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":369,"indexExpression":{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8019,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7896_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$7896_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:1","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"role","nameLocation":"1462:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"index","nameLocation":"1476:5:1","nodeType":"VariableDeclaration","scope":375,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":440,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":390,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":384,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7992,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7896_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$7896_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":383,"id":389,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":391,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1786:4:1","nodeType":"VariableDeclaration","scope":391,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":440,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[283],"body":{"id":414,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":403,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":400,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":407,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7923,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7896_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7896_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:1","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2006:4:1","nodeType":"VariableDeclaration","scope":415,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2020:7:1","nodeType":"VariableDeclaration","scope":415,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":440,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[314],"body":{"id":438,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":431,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7896_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":433,"indexExpression":{"id":432,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7950,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7896_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7896_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:1","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nameLocation":"2262:4:1","nodeType":"VariableDeclaration","scope":439,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"2276:7:1","nodeType":"VariableDeclaration","scope":439,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":440,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":441,"src":"355:2051:1","usedErrors":[]}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":513,"linearizedBaseContracts":[513],"name":"IAccessControl","nameLocation":"219:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":452,"name":"RoleAdminChanged","nameLocation":"543:16:2","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:2","nodeType":"VariableDeclaration","scope":452,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:2","nodeType":"VariableDeclaration","scope":452,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:2","nodeType":"VariableDeclaration","scope":452,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":461,"name":"RoleGranted","nameLocation":"876:11:2","nodeType":"EventDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:2","nodeType":"VariableDeclaration","scope":461,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:2","nodeType":"VariableDeclaration","scope":461,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:2","nodeType":"VariableDeclaration","scope":461,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":470,"name":"RoleRevoked","nameLocation":"1251:11:2","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:2","nodeType":"VariableDeclaration","scope":470,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:2","nodeType":"VariableDeclaration","scope":470,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:2","nodeType":"VariableDeclaration","scope":470,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:2","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nameLocation":"1446:4:2","nodeType":"VariableDeclaration","scope":480,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"account","nameLocation":"1460:7:2","nodeType":"VariableDeclaration","scope":480,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":513,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"role","nameLocation":"1723:4:2","nodeType":"VariableDeclaration","scope":488,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":513,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:2","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nameLocation":"2038:4:2","nodeType":"VariableDeclaration","scope":496,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"2052:7:2","nodeType":"VariableDeclaration","scope":496,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":513,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":504,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"account","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":504,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":513,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nameLocation":"2885:4:2","nodeType":"VariableDeclaration","scope":512,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"account","nameLocation":"2899:7:2","nodeType":"VariableDeclaration","scope":512,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":513,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":514,"src":"209:2710:2","usedErrors":[]}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[513],"IAccessControlEnumerable":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":539,"sourceUnit":514,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":518,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"299:14:3"},"id":519,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538,513],"name":"IAccessControlEnumerable","nameLocation":"271:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:3","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"role","nameLocation":"930:4:3","nodeType":"VariableDeclaration","scope":529,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"index","nameLocation":"944:5:3","nodeType":"VariableDeclaration","scope":529,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":538,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"role","nameLocation":"1187:4:3","nodeType":"VariableDeclaration","scope":537,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":538,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"261:966:3","usedErrors":[]}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"135:132:4","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":616,"linearizedBaseContracts":[616],"name":"IVotes","nameLocation":"278:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"291:71:4","text":" @dev Emitted when an account changes their delegate."},"id":550,"name":"DelegateChanged","nameLocation":"373:15:4","nodeType":"EventDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:4","nodeType":"VariableDeclaration","scope":550,"src":"389:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:4","nodeType":"VariableDeclaration","scope":550,"src":"416:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":548,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:4","nodeType":"VariableDeclaration","scope":550,"src":"446:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:4"},"src":"367:107:4"},{"anonymous":false,"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"480:124:4","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":559,"name":"DelegateVotesChanged","nameLocation":"615:20:4","nodeType":"EventDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:4","nodeType":"VariableDeclaration","scope":559,"src":"636:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:4","nodeType":"VariableDeclaration","scope":559,"src":"662:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:4","nodeType":"VariableDeclaration","scope":559,"src":"687:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:4"},"src":"609:98:4"},{"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"713:79:4","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":567,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:4","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"account","nameLocation":"823:7:4","nodeType":"VariableDeclaration","scope":567,"src":"815:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:4"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"855:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:4"},"scope":616,"src":"797:67:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"870:114:4","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:4","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"account","nameLocation":"1019:7:4","nodeType":"VariableDeclaration","scope":577,"src":"1011:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:4","nodeType":"VariableDeclaration","scope":577,"src":"1028:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:4"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"1072:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:4"},"scope":616,"src":"989:92:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"1087:365:4","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":585,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:4","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:4","nodeType":"VariableDeclaration","scope":585,"src":"1485:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:4"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"1529:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:4"},"scope":616,"src":"1457:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"1544:71:4","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":593,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:4","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"account","nameLocation":"1647:7:4","nodeType":"VariableDeclaration","scope":593,"src":"1639:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:4"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":593,"src":"1679:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:4"},"scope":616,"src":"1620:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1694:71:4","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":599,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:4","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:4","nodeType":"VariableDeclaration","scope":599,"src":"1788:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"1815:0:4"},"scope":616,"src":"1770:46:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"1822:67:4","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":615,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:4","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:4","nodeType":"VariableDeclaration","scope":615,"src":"1926:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:4","nodeType":"VariableDeclaration","scope":615,"src":"1953:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:4","nodeType":"VariableDeclaration","scope":615,"src":"1976:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"v","nameLocation":"2006:1:4","nodeType":"VariableDeclaration","scope":615,"src":"2000:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":607,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"r","nameLocation":"2025:1:4","nodeType":"VariableDeclaration","scope":615,"src":"2017:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"s","nameLocation":"2044:1:4","nodeType":"VariableDeclaration","scope":615,"src":"2036:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:4"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"2060:0:4"},"scope":616,"src":"1894:167:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":617,"src":"268:1795:4","usedErrors":[]}],"src":"110:1954:4"},"id":4},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[4342],"Context":[4364],"Counters":[4438],"ECDSA":[4974],"EIP712":[5128],"IVotes":[616],"Math":[6029],"SafeCast":[7570],"Strings":[4613],"Votes":[1070]},"id":1071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":4365,"src":"134:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../utils/Counters.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":4439,"src":"168:34:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","file":"../../utils/Checkpoints.sol","id":621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":4343,"src":"203:37:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":5129,"src":"241:45:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"./IVotes.sol","id":623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":617,"src":"287:22:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":625,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1697:6:5"},"id":626,"nodeType":"InheritanceSpecifier","src":"1697:6:5"},{"baseName":{"id":627,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"1705:7:5"},"id":628,"nodeType":"InheritanceSpecifier","src":"1705:7:5"},{"baseName":{"id":629,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":5128,"src":"1714:6:5"},"id":630,"nodeType":"InheritanceSpecifier","src":"1714:6:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"311:1358:5","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n _Available since v4.5._"},"fullyImplemented":false,"id":1070,"linearizedBaseContracts":[1070,5128,4364,616],"name":"Votes","nameLocation":"1688:5:5","nodeType":"ContractDefinition","nodes":[{"id":634,"libraryName":{"id":631,"name":"Checkpoints","nodeType":"IdentifierPath","referencedDeclaration":4342,"src":"1733:11:5"},"nodeType":"UsingForDirective","src":"1727:42:5","typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"1749:19:5"},"referencedDeclaration":2984,"src":"1749:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}}},{"id":638,"libraryName":{"id":635,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":4438,"src":"1780:8:5"},"nodeType":"UsingForDirective","src":"1774:36:5","typeName":{"id":637,"nodeType":"UserDefinedTypeName","pathNode":{"id":636,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"1793:16:5"},"referencedDeclaration":4370,"src":"1793:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":true,"id":643,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1841:20:5","nodeType":"VariableDeclaration","scope":1070,"src":"1816:127:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":640,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1872:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1872:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":647,"mutability":"mutable","name":"_delegation","nameLocation":"1986:11:5","nodeType":"VariableDeclaration","scope":1070,"src":"1950:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":646,"keyType":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1950:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":652,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2051:20:5","nodeType":"VariableDeclaration","scope":1070,"src":"2003:68:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History)"},"typeName":{"id":651,"keyType":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2003:39:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History)"},"valueType":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"2022:19:5"},"referencedDeclaration":2984,"src":"2022:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}}},"visibility":"private"},{"constant":false,"id":655,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2105:17:5","nodeType":"VariableDeclaration","scope":1070,"src":"2077:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"2077:19:5"},"referencedDeclaration":2984,"src":"2077:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"private"},{"constant":false,"id":660,"mutability":"mutable","name":"_nonces","nameLocation":"2174:7:5","nodeType":"VariableDeclaration","scope":1070,"src":"2129:52:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4370_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":659,"keyType":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2129:36:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4370_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"2148:16:5"},"referencedDeclaration":4370,"src":"2148:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"baseFunctions":[567],"body":{"id":675,"nodeType":"Block","src":"2354:62:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":669,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2371:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":671,"indexExpression":{"id":670,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2392:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2371:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":3238,"src":"2371:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2984_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2371:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":668,"id":674,"nodeType":"Return","src":"2364:45:5"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"2188:79:5","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":676,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2281:8:5","nodeType":"FunctionDefinition","overrides":{"id":665,"nodeType":"OverrideSpecifier","overrides":[],"src":"2327:8:5"},"parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"account","nameLocation":"2298:7:5","nodeType":"VariableDeclaration","scope":676,"src":"2290:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:17:5"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"2345:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:9:5"},"scope":1070,"src":"2272:144:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[577],"body":{"id":694,"nodeType":"Block","src":"2735:91:5","statements":[{"expression":{"arguments":[{"id":691,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2807:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":687,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2752:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":689,"indexExpression":{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2773:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2752:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"getAtProbablyRecentBlock","nodeType":"MemberAccess","referencedDeclaration":3146,"src":"2752:54:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2984_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) view returns (uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2752:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":693,"nodeType":"Return","src":"2745:74:5"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"2422:201:5","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":695,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2637:12:5","nodeType":"FunctionDefinition","overrides":{"id":683,"nodeType":"OverrideSpecifier","overrides":[],"src":"2708:8:5"},"parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"account","nameLocation":"2658:7:5","nodeType":"VariableDeclaration","scope":695,"src":"2650:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"2650:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"blockNumber","nameLocation":"2675:11:5","nodeType":"VariableDeclaration","scope":695,"src":"2667:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2649:38:5"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":695,"src":"2726:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2725:9:5"},"scope":1070,"src":"2628:198:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[585],"body":{"id":717,"nodeType":"Block","src":"3385:154:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":705,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3403:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":706,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3417:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3417:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3403:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3431:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","typeString":"literal_string \"Votes: block not yet mined\""},"value":"Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","typeString":"literal_string \"Votes: block not yet mined\""}],"id":704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3395:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3395:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"3395:65:5"},{"expression":{"arguments":[{"id":714,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3520:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":712,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3477:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"getAtProbablyRecentBlock","nodeType":"MemberAccess","referencedDeclaration":3146,"src":"3477:42:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2984_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) view returns (uint256)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3477:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":703,"id":716,"nodeType":"Return","src":"3470:62:5"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"2832:452:5","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":718,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3298:18:5","nodeType":"FunctionDefinition","overrides":{"id":700,"nodeType":"OverrideSpecifier","overrides":[],"src":"3358:8:5"},"parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"blockNumber","nameLocation":"3325:11:5","nodeType":"VariableDeclaration","scope":718,"src":"3317:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:21:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"3376:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:9:5"},"scope":1070,"src":"3289:250:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":728,"nodeType":"Block","src":"3683:50:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":724,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3700:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":3238,"src":"3700:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2984_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3700:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":723,"id":727,"nodeType":"Return","src":"3693:33:5"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"3545:66:5","text":" @dev Returns the current total supply of votes."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"3625:15:5","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"3640:2:5"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":729,"src":"3674:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3673:9:5"},"scope":1070,"src":"3616:117:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[593],"body":{"id":742,"nodeType":"Block","src":"3898:44:5","statements":[{"expression":{"baseExpression":{"id":738,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3915:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":740,"indexExpression":{"id":739,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3927:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3915:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":737,"id":741,"nodeType":"Return","src":"3908:27:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"3739:71:5","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":743,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"3824:9:5","nodeType":"FunctionDefinition","overrides":{"id":734,"nodeType":"OverrideSpecifier","overrides":[],"src":"3871:8:5"},"parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"account","nameLocation":"3842:7:5","nodeType":"VariableDeclaration","scope":743,"src":"3834:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"3834:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3833:17:5"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"3889:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"3889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3888:9:5"},"scope":1070,"src":"3815:127:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[599],"body":{"id":760,"nodeType":"Block","src":"4085:86:5","statements":[{"assignments":[751],"declarations":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"4103:7:5","nodeType":"VariableDeclaration","scope":760,"src":"4095:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"4095:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":754,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":752,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"4113:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4113:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4095:30:5"},{"expression":{"arguments":[{"id":756,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4145:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"4154:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4135:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4135:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"4135:29:5"}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"3948:71:5","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":761,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"4033:8:5","nodeType":"FunctionDefinition","overrides":{"id":748,"nodeType":"OverrideSpecifier","overrides":[],"src":"4076:8:5"},"parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"delegatee","nameLocation":"4050:9:5","nodeType":"VariableDeclaration","scope":761,"src":"4042:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"4042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4041:19:5"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"4085:0:5"},"scope":1070,"src":"4024:147:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[615],"body":{"id":820,"nodeType":"Block","src":"4431:382:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":779,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4449:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4449:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":781,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4468:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4449:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a207369676e61747572652065787069726564","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4476:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""},"value":"Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""}],"id":778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4441:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4441:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"4441:62:5"},{"assignments":[787],"declarations":[{"constant":false,"id":787,"mutability":"mutable","name":"signer","nameLocation":"4521:6:5","nodeType":"VariableDeclaration","scope":820,"src":"4513:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"4513:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":805,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":794,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4595:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":795,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4617:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4628:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":797,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4635:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4584:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4584:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4584:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4574:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":790,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"4557:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4557:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":801,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"4658:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":802,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"4673:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":803,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4688:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":788,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"4530:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4974_$","typeString":"type(library ECDSA)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4914,"src":"4530:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4530:169:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4513:186:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4717:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":809,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"4736:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":808,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4726:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4726:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4717:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20696e76616c6964206e6f6e6365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4745:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""},"value":"Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""}],"id":806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4709:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4709:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"4709:59:5"},{"expression":{"arguments":[{"id":816,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"4788:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4796:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":815,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4778:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4778:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"4778:28:5"}]},"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"4177:67:5","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":821,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"4258:13:5","nodeType":"FunctionDefinition","overrides":{"id":776,"nodeType":"OverrideSpecifier","overrides":[],"src":"4422:8:5"},"parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"delegatee","nameLocation":"4289:9:5","nodeType":"VariableDeclaration","scope":821,"src":"4281:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"4281:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"nonce","nameLocation":"4316:5:5","nodeType":"VariableDeclaration","scope":821,"src":"4308:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"expiry","nameLocation":"4339:6:5","nodeType":"VariableDeclaration","scope":821,"src":"4331:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"4331:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"v","nameLocation":"4361:1:5","nodeType":"VariableDeclaration","scope":821,"src":"4355:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":769,"name":"uint8","nodeType":"ElementaryTypeName","src":"4355:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"r","nameLocation":"4380:1:5","nodeType":"VariableDeclaration","scope":821,"src":"4372:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4372:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"s","nameLocation":"4399:1:5","nodeType":"VariableDeclaration","scope":821,"src":"4391:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4391:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4271:135:5"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"4431:0:5"},"scope":1070,"src":"4249:564:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":855,"nodeType":"Block","src":"5063:241:5","statements":[{"assignments":[830],"declarations":[{"constant":false,"id":830,"mutability":"mutable","name":"oldDelegate","nameLocation":"5081:11:5","nodeType":"VariableDeclaration","scope":855,"src":"5073:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":834,"initialValue":{"arguments":[{"id":832,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5105:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":831,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5095:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5095:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5073:40:5"},{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":835,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5123:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":837,"indexExpression":{"id":836,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5135:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5123:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":838,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5146:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5123:32:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":840,"nodeType":"ExpressionStatement","src":"5123:32:5"},{"eventCall":{"arguments":[{"id":842,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5187:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5196:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5209:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":841,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"5171:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5171:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"EmitStatement","src":"5166:53:5"},{"expression":{"arguments":[{"id":848,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5248:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5261:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":851,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5288:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"5272:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5272:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5229:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5229:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"5229:68:5"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"4819:167:5","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"5000:9:5","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"account","nameLocation":"5018:7:5","nodeType":"VariableDeclaration","scope":856,"src":"5010:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"delegatee","nameLocation":"5035:9:5","nodeType":"VariableDeclaration","scope":856,"src":"5027:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"5027:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5009:36:5"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"5063:0:5"},"scope":1070,"src":"4991:313:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"5657:266:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"5671:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5687:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5679:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:5","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5679:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5671:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"5667:85:5","trueBody":{"id":879,"nodeType":"Block","src":"5691:61:5","statements":[{"expression":{"arguments":[{"id":875,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5728:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":876,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"5734:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":872,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5705:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"5705:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2984_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5705:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":878,"nodeType":"ExpressionStatement","src":"5705:36:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"5765:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5771:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"5771:7:5","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5771:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5765:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"IfStatement","src":"5761:88:5","trueBody":{"id":894,"nodeType":"Block","src":"5783:66:5","statements":[{"expression":{"arguments":[{"id":890,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"5820:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"5831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":887,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5797:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"5797:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2984_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5797:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":893,"nodeType":"ExpressionStatement","src":"5797:41:5"}]}},{"expression":{"arguments":[{"arguments":[{"id":898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"5887:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":897,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5877:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5877:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"5904:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":900,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5894:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":903,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"5909:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":896,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5858:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5858:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"5858:58:5"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"5310:223:5","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"5547:20:5","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"from","nameLocation":"5585:4:5","nodeType":"VariableDeclaration","scope":907,"src":"5577:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"to","nameLocation":"5607:2:5","nodeType":"VariableDeclaration","scope":907,"src":"5599:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"5599:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"amount","nameLocation":"5627:6:5","nodeType":"VariableDeclaration","scope":907,"src":"5619:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5567:72:5"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[],"src":"5657:0:5"},"scope":1070,"src":"5538:385:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":978,"nodeType":"Block","src":"6117:502:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6131:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":918,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6139:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6131:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6145:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6145:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6131:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":977,"nodeType":"IfStatement","src":"6127:486:5","trueBody":{"id":976,"nodeType":"Block","src":"6157:456:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6175:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6183:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"6183:7:5","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6183:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6175:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"IfStatement","src":"6171:215:5","trueBody":{"id":948,"nodeType":"Block","src":"6195:191:5","statements":[{"assignments":[931,933],"declarations":[{"constant":false,"id":931,"mutability":"mutable","name":"oldValue","nameLocation":"6222:8:5","nodeType":"VariableDeclaration","scope":948,"src":"6214:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6214:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"newValue","nameLocation":"6240:8:5","nodeType":"VariableDeclaration","scope":948,"src":"6232:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":941,"initialValue":{"arguments":[{"id":938,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6284:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6295:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":934,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"6252:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":936,"indexExpression":{"id":935,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6273:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6252:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"6252:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2984_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6252:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6213:89:5"},{"eventCall":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6346:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6352:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6362:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":942,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6325:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6325:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"EmitStatement","src":"6320:51:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6403:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6417:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6409:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:5","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6409:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6403:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":975,"nodeType":"IfStatement","src":"6399:204:5","trueBody":{"id":974,"nodeType":"Block","src":"6421:182:5","statements":[{"assignments":[957,959],"declarations":[{"constant":false,"id":957,"mutability":"mutable","name":"oldValue","nameLocation":"6448:8:5","nodeType":"VariableDeclaration","scope":974,"src":"6440:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"newValue","nameLocation":"6466:8:5","nodeType":"VariableDeclaration","scope":974,"src":"6458:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"arguments":[{"id":964,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6508:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6514:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":960,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"6478:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$2984_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":962,"indexExpression":{"id":961,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6499:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6478:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage","typeString":"struct Checkpoints.History storage ref"}},"id":963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"6478:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2984_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$2984_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6478:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6439:82:5"},{"eventCall":{"arguments":[{"id":969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6565:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6569:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":971,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"6579:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":968,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6544:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6544:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"EmitStatement","src":"6539:49:5"}]}}]}}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"5929:75:5","text":" @dev Moves delegated votes from one delegate to another."},"id":979,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"6018:18:5","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6054:4:5","nodeType":"VariableDeclaration","scope":979,"src":"6046:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6046:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6076:2:5","nodeType":"VariableDeclaration","scope":979,"src":"6068:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6068:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"amount","nameLocation":"6096:6:5","nodeType":"VariableDeclaration","scope":979,"src":"6088:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6088:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6036:72:5"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6117:0:5"},"scope":1070,"src":"6009:610:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":992,"nodeType":"Block","src":"6692:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6709:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":989,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6713:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6709:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":987,"id":991,"nodeType":"Return","src":"6702:12:5"}]},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"6634:4:5","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"a","nameLocation":"6647:1:5","nodeType":"VariableDeclaration","scope":993,"src":"6639:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"6639:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"b","nameLocation":"6658:1:5","nodeType":"VariableDeclaration","scope":993,"src":"6650:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6650:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6638:22:5"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"6683:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6682:9:5"},"scope":1070,"src":"6625:96:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1006,"nodeType":"Block","src":"6799:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6816:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"6820:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1001,"id":1005,"nodeType":"Return","src":"6809:12:5"}]},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"6736:9:5","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"a","nameLocation":"6754:1:5","nodeType":"VariableDeclaration","scope":1007,"src":"6746:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"b","nameLocation":"6765:1:5","nodeType":"VariableDeclaration","scope":1007,"src":"6757:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6757:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6745:22:5"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"6790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"6790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6789:9:5"},"scope":1070,"src":"6727:101:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1035,"nodeType":"Block","src":"7019:126:5","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"nonce","nameLocation":"7054:5:5","nodeType":"VariableDeclaration","scope":1035,"src":"7029:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"7029:16:5"},"referencedDeclaration":4370,"src":"7029:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1023,"initialValue":{"baseExpression":{"id":1020,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"7062:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4370_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1022,"indexExpression":{"id":1021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7070:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7062:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7029:47:5"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1024,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1025,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7096:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"7096:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4370_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7096:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7086:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"7086:25:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1030,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":4396,"src":"7121:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$4370_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4370_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7121:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"7121:17:5"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"6834:103:5","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"6951:9:5","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"owner","nameLocation":"6969:5:5","nodeType":"VariableDeclaration","scope":1036,"src":"6961:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"6961:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6960:15:5"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"current","nameLocation":"7010:7:5","nodeType":"VariableDeclaration","scope":1036,"src":"7002:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:17:5"},"scope":1070,"src":"6942:203:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"7274:48:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1044,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"7291:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4370_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1046,"indexExpression":{"id":1045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7299:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7291:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage","typeString":"struct Counters.Counter storage ref"}},"id":1047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"7291:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4370_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7291:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1043,"id":1049,"nodeType":"Return","src":"7284:31:5"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"7151:49:5","text":" @dev Returns an address nonce."},"functionSelector":"7ecebe00","id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"7214:6:5","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"owner","nameLocation":"7229:5:5","nodeType":"VariableDeclaration","scope":1051,"src":"7221:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"7221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7220:15:5"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"7265:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"7265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7264:9:5"},"scope":1070,"src":"7205:117:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1060,"nodeType":"Block","src":"7519:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1057,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"7536:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7536:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1056,"id":1059,"nodeType":"Return","src":"7529:27:5"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"7328:73:5","text":" @dev Returns the contract's {EIP712} domain separator."},"functionSelector":"3644e515","id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"7468:16:5","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"7484:2:5"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1061,"src":"7510:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7510:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7509:9:5"},"scope":1070,"src":"7459:104:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"7569:72:5","text":" @dev Must return the voting units held by an account."},"id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"7655:15:5","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"7671:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"7671:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7670:9:5"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"7711:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"7711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7710:9:5"},"scope":1070,"src":"7646:74:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1071,"src":"1670:6052:5","usedErrors":[]}],"src":"109:7614:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2974],"Context":[4364],"ERC165":[5152],"ERC721":[2015],"IERC165":[5164],"IERC721":[2131],"IERC721Metadata":[2644],"IERC721Receiver":[2149],"Math":[6029],"Strings":[4613]},"id":2016,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1072,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":2132,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":2150,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":2645,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":2975,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1077,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":4365,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":4614,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":5153,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1081,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"647:7:6"},"id":1082,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":1083,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5152,"src":"656:6:6"},"id":1084,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":1085,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2131,"src":"664:7:6"},"id":1086,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":1087,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2644,"src":"673:15:6"},"id":1088,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2015,"linearizedBaseContracts":[2015,2644,2131,5152,5164,4364],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"id":1091,"libraryName":{"id":1089,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2974,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1094,"libraryName":{"id":1092,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":4613,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1096,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":2015,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1095,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1098,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":2015,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1097,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1102,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":2015,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1101,"keyType":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1106,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":2015,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1105,"keyType":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1110,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":2015,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1109,"keyType":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1116,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":2015,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1115,"keyType":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1114,"keyType":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1113,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1132,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1124,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1125,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1127,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1128,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1129,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1131,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1133,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":1133,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":1133,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1120,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":2015,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5151,5163],"body":{"id":1163,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1146,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2131_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2131_$","typeString":"type(contract IERC721)"}],"id":1145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2131","typeString":"type(contract IERC721)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1152,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2644_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2644_$","typeString":"type(contract IERC721Metadata)"}],"id":1151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2644","typeString":"type(contract IERC721Metadata)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1159,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1157,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2015_$","typeString":"type(contract super ERC721)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5151,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1143,"id":1162,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":1140,"nodeType":"OverrideSpecifier","overrides":[{"id":1138,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5152,"src":"1646:6:6"},{"id":1139,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5164,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":1164,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1135,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":2015,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2056],"body":{"id":1187,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":1183,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1172,"id":1186,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":1169,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":1188,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":2015,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2064],"body":{"id":1215,"nodeType":"Block","src":"2271:138:6","statements":[{"assignments":[1198],"declarations":[{"constant":false,"id":1198,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":1215,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1202,"initialValue":{"arguments":[{"id":1200,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1199,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2297:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"2332:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:6","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"2324:56:6"},{"expression":{"id":1213,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"2397:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1196,"id":1214,"nodeType":"Return","src":"2390:12:6"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1216,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":1193,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":1216,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1216,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":2015,"src":"2190:219:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2629],"body":{"id":1225,"nodeType":"Block","src":"2540:29:6","statements":[{"expression":{"id":1223,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2557:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1222,"id":1224,"nodeType":"Return","src":"2550:12:6"}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"2415:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:6","nodeType":"FunctionDefinition","overrides":{"id":1219,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:6"},"parameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"2484:2:6"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"2525:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1220,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:6"},"scope":2015,"src":"2471:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2635],"body":{"id":1235,"nodeType":"Block","src":"2704:31:6","statements":[{"expression":{"id":1233,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2721:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1232,"id":1234,"nodeType":"Return","src":"2714:14:6"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"2575:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:6","nodeType":"FunctionDefinition","overrides":{"id":1229,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:6"},"parameters":{"id":1228,"nodeType":"ParameterList","parameters":[],"src":"2648:2:6"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"2689:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1230,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:6"},"scope":2015,"src":"2633:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2643],"body":{"id":1274,"nodeType":"Block","src":"2889:188:6","statements":[{"expression":{"arguments":[{"id":1246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1245,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2899:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"2899:23:6"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:6","nodeType":"VariableDeclaration","scope":1274,"src":"2933:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1249,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1253,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1251,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2957:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1256,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2990:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:6","typeDescriptions":{}}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:6","trueExpression":{"arguments":[{"arguments":[{"id":1265,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"3045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4496,"src":"3045:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1263,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1261,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:6","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1244,"id":1273,"nodeType":"Return","src":"2977:93:6"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"2741:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:6","nodeType":"FunctionDefinition","overrides":{"id":1241,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:6"},"parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:6","nodeType":"VariableDeclaration","scope":1275,"src":"2819:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:6"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2874:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:6"},"scope":2015,"src":"2801:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1283,"nodeType":"Block","src":"3385:26:6","statements":[{"expression":{"hexValue":"","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1280,"id":1282,"nodeType":"Return","src":"3395:9:6"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"3083:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:6","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"3336:2:6"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"3370:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1278,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:6"},"scope":2015,"src":"3319:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2104],"body":{"id":1326,"nodeType":"Block","src":"3538:336:6","statements":[{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"owner","nameLocation":"3556:5:6","nodeType":"VariableDeclaration","scope":1326,"src":"3548:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1297,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1295,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3564:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"3564:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3605:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1306,"nodeType":"ExpressionStatement","src":"3597:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1308,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3686:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1310,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3702:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1313,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3728:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1314,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3735:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1312,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3711:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"3665:170:6"},{"expression":{"arguments":[{"id":1322,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"3417:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:6","nodeType":"FunctionDefinition","overrides":{"id":1291,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:6"},"parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"to","nameLocation":"3493:2:6","nodeType":"VariableDeclaration","scope":1327,"src":"3485:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:6","nodeType":"VariableDeclaration","scope":1327,"src":"3497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:6"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"3538:0:6"},"scope":2015,"src":"3468:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2120],"body":{"id":1344,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":1337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1336,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":1340,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1342,"indexExpression":{"id":1341,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1335,"id":1343,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":1332,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":1345,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1345,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":2015,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2112],"body":{"id":1361,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1355,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1354,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":1352,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":1362,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":1362,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":2015,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2130],"body":{"id":1379,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1373,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1375,"indexExpression":{"id":1374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1377,"indexExpression":{"id":1376,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1372,"id":1378,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":1369,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":1380,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":1380,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1370,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":2015,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2096],"body":{"id":1406,"nodeType":"Block","src":"4731:207:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"4820:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"4801:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"4793:99:6"},{"expression":{"arguments":[{"id":1401,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"4913:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"4919:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"4903:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"ExpressionStatement","src":"4903:28:6"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":1389,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:6"},"parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"from","nameLocation":"4651:4:6","nodeType":"VariableDeclaration","scope":1407,"src":"4643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"to","nameLocation":"4673:2:6","nodeType":"VariableDeclaration","scope":1407,"src":"4665:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:6","nodeType":"VariableDeclaration","scope":1407,"src":"4685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:6"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"4731:0:6"},"scope":2015,"src":"4612:326:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2086],"body":{"id":1425,"nodeType":"Block","src":"5127:56:6","statements":[{"expression":{"arguments":[{"id":1419,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"5154:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5160:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"5164:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1418,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1426,1456],"referencedDeclaration":1456,"src":"5137:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"5137:39:6"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"4944:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:6","nodeType":"FunctionDefinition","overrides":{"id":1416,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:6"},"parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"from","nameLocation":"5047:4:6","nodeType":"VariableDeclaration","scope":1426,"src":"5039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"to","nameLocation":"5069:2:6","nodeType":"VariableDeclaration","scope":1426,"src":"5061:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:6","nodeType":"VariableDeclaration","scope":1426,"src":"5081:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:6"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"5127:0:6"},"scope":2015,"src":"5004:179:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2076],"body":{"id":1455,"nodeType":"Block","src":"5399:164:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"5436:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5450:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"5417:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"5409:99:6"},{"expression":{"arguments":[{"id":1449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"5532:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"5538:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"5551:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1448,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5518:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"5518:38:6"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"5189:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:6","nodeType":"FunctionDefinition","overrides":{"id":1437,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:6"},"parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"from","nameLocation":"5292:4:6","nodeType":"VariableDeclaration","scope":1456,"src":"5284:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"5314:2:6","nodeType":"VariableDeclaration","scope":1456,"src":"5306:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:6","nodeType":"VariableDeclaration","scope":1456,"src":"5326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"data","nameLocation":"5364:4:6","nodeType":"VariableDeclaration","scope":1456,"src":"5351:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:6"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"5399:0:6"},"scope":2015,"src":"5249:314:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1484,"nodeType":"Block","src":"6564:165:6","statements":[{"expression":{"arguments":[{"id":1469,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"6584:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6590:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1471,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1468,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6574:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"ExpressionStatement","src":"6574:28:6"},{"expression":{"arguments":[{"arguments":[{"id":1476,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"6643:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6649:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6653:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6662:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1475,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"6620:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"6612:110:6"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"5569:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:6","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"from","nameLocation":"6464:4:6","nodeType":"VariableDeclaration","scope":1485,"src":"6456:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"to","nameLocation":"6486:2:6","nodeType":"VariableDeclaration","scope":1485,"src":"6478:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:6","nodeType":"VariableDeclaration","scope":1485,"src":"6498:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"data","nameLocation":"6536:4:6","nodeType":"VariableDeclaration","scope":1485,"src":"6523:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1464,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:6"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"6564:0:6"},"scope":2015,"src":"6424:305:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"6913:40:6","statements":[{"expression":{"baseExpression":{"id":1493,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6930:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1495,"indexExpression":{"id":1494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"6938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1492,"id":1496,"nodeType":"Return","src":"6923:23:6"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"6735:98:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:6","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:6","nodeType":"VariableDeclaration","scope":1498,"src":"6856:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:6"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"6904:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:6"},"scope":2015,"src":"6838:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"7327:55:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1507,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1506,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"7344:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:6","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1505,"id":1514,"nodeType":"Return","src":"7337:38:6"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"6959:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:6","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:6","nodeType":"VariableDeclaration","scope":1516,"src":"7273:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:6"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"7321:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1503,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:6"},"scope":2015,"src":"7256:126:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"7639:162:6","statements":[{"assignments":[1527],"declarations":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"7657:5:6","nodeType":"VariableDeclaration","scope":1549,"src":"7649:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1532,"initialValue":{"arguments":[{"id":1530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1528,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"7665:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"7665:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7706:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"7717:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1537,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"7743:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1538,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7750:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1536,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7726:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7762:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1544,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7786:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1525,"id":1548,"nodeType":"Return","src":"7698:96:6"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"7388:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:6","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"spender","nameLocation":"7576:7:6","nodeType":"VariableDeclaration","scope":1550,"src":"7568:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:6","nodeType":"VariableDeclaration","scope":1550,"src":"7585:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:6"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"7633:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:6"},"scope":2015,"src":"7540:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1564,"nodeType":"Block","src":"8196:43:6","statements":[{"expression":{"arguments":[{"id":1559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"8216:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"8220:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1558,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1565,1594],"referencedDeclaration":1594,"src":"8206:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"ExpressionStatement","src":"8206:26:6"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"7807:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:6","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"to","nameLocation":"8158:2:6","nodeType":"VariableDeclaration","scope":1565,"src":"8150:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:6","nodeType":"VariableDeclaration","scope":1565,"src":"8162:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:6"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"8196:0:6"},"scope":2015,"src":"8131:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"8574:195:6","statements":[{"expression":{"arguments":[{"id":1576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8590:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1575,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"8584:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"8584:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:6","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8668:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8672:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1588,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"8681:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1581,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"8633:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"8612:150:6"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"8245:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:6","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"to","nameLocation":"8496:2:6","nodeType":"VariableDeclaration","scope":1594,"src":"8488:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:6","nodeType":"VariableDeclaration","scope":1594,"src":"8508:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"data","nameLocation":"8546:4:6","nodeType":"VariableDeclaration","scope":1594,"src":"8533:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:6"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"8574:0:6"},"scope":2015,"src":"8460:309:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"9152:859:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9170:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:6","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"9162:61:6"},{"expression":{"arguments":[{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:6","subExpression":{"arguments":[{"id":1614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9250:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9242:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1619,"nodeType":"ExpressionStatement","src":"9233:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:6","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9335:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1620,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"9302:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"ExpressionStatement","src":"9302:48:6"},{"expression":{"arguments":[{"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:6","subExpression":{"arguments":[{"id":1632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9454:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9446:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"9437:58:6"},{"id":1644,"nodeType":"UncheckedBlock","src":"9506:360:6","statements":[{"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1638,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9837:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1640,"indexExpression":{"id":1639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9847:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ExpressionStatement","src":"9837:18:6"}]},{"expression":{"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1645,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"9876:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1647,"indexExpression":{"id":1646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9895:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1650,"nodeType":"ExpressionStatement","src":"9876:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:6","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9934:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1651,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"9913:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"EmitStatement","src":"9908:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:6","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9989:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1660,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9957:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"ExpressionStatement","src":"9957:47:6"}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"8775:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:6","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"to","nameLocation":"9114:2:6","nodeType":"VariableDeclaration","scope":1671,"src":"9106:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:6","nodeType":"VariableDeclaration","scope":1671,"src":"9118:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:6"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"9152:0:6"},"scope":2015,"src":"9091:920:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1737,"nodeType":"Block","src":"10386:713:6","statements":[{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"owner","nameLocation":"10404:5:6","nodeType":"VariableDeclaration","scope":1737,"src":"10396:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1683,"initialValue":{"arguments":[{"id":1681,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10427:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1679,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"10412:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"10412:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:6"},{"expression":{"arguments":[{"id":1685,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"10467:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:6","typeDescriptions":{}}},"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10486:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1684,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10446:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"10446:51:6"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"10599:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1695,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"10607:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"10607:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1700,"nodeType":"ExpressionStatement","src":"10599:31:6"},{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:6","subExpression":{"baseExpression":{"id":1701,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"10675:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1703,"indexExpression":{"id":1702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10691:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"10668:31:6"},{"id":1712,"nodeType":"UncheckedBlock","src":"10710:237:6","statements":[{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1706,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10915:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1708,"indexExpression":{"id":1707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"10925:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"10915:21:6"}]},{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:6","subExpression":{"baseExpression":{"id":1713,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1715,"indexExpression":{"id":1714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"ExpressionStatement","src":"10956:23:6"},{"eventCall":{"arguments":[{"id":1719,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"11004:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:6","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"11023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"10995:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"EmitStatement","src":"10990:41:6"},{"expression":{"arguments":[{"id":1728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"11062:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:6","typeDescriptions":{}}},"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1727,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"11042:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"11042:50:6"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"10017:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:6","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:6","nodeType":"VariableDeclaration","scope":1738,"src":"10352:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:6"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"10386:0:6"},"scope":2015,"src":"10337:762:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"11532:1124:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"11565:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1749,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"11550:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"11550:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"11577:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"11542:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"11641:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:6","typeDescriptions":{}}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"ExpressionStatement","src":"11633:65:6"},{"expression":{"arguments":[{"id":1769,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"11730:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1770,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"11736:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1771,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"11740:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1768,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"11709:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"11709:42:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"11866:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1776,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"11851:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"11851:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"11878:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"11843:81:6"},{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:6","subExpression":{"baseExpression":{"id":1785,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"11993:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1787,"indexExpression":{"id":1786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"12009:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"11986:31:6"},{"id":1802,"nodeType":"UncheckedBlock","src":"12028:496:6","statements":[{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1790,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"12461:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1792,"indexExpression":{"id":1791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"12471:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"12461:20:6"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1796,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"12495:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1798,"indexExpression":{"id":1797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12505:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"12495:18:6"}]},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1803,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12533:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1805,"indexExpression":{"id":1804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"12541:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12552:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1808,"nodeType":"ExpressionStatement","src":"12533:21:6"},{"eventCall":{"arguments":[{"id":1810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"12579:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12585:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"12589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1809,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12570:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"EmitStatement","src":"12565:32:6"},{"expression":{"arguments":[{"id":1816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"12628:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12634:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1818,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"12638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1815,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"12608:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"ExpressionStatement","src":"12608:41:6"}]},"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"11105:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:6","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"from","nameLocation":"11459:4:6","nodeType":"VariableDeclaration","scope":1823,"src":"11451:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"to","nameLocation":"11481:2:6","nodeType":"VariableDeclaration","scope":1823,"src":"11473:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:6","nodeType":"VariableDeclaration","scope":1823,"src":"11493:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:6"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"11532:0:6"},"scope":2015,"src":"11423:1233:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1846,"nodeType":"Block","src":"12832:107:6","statements":[{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1831,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12842:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1833,"indexExpression":{"id":1832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"12869:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1836,"nodeType":"ExpressionStatement","src":"12842:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1838,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"12895:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"12895:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"12920:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12886:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"EmitStatement","src":"12881:51:6"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"12662:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:6","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"to","nameLocation":"12794:2:6","nodeType":"VariableDeclaration","scope":1847,"src":"12786:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:6","nodeType":"VariableDeclaration","scope":1847,"src":"12798:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:6"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"12832:0:6"},"scope":2015,"src":"12768:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1878,"nodeType":"Block","src":"13198:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"13216:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1859,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"13225:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"13208:55:6"},{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1864,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"13273:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1867,"indexExpression":{"id":1865,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"13292:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1868,"indexExpression":{"id":1866,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"13299:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1869,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"13311:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1871,"nodeType":"ExpressionStatement","src":"13273:46:6"},{"eventCall":{"arguments":[{"id":1873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"13349:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"13356:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1875,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"13366:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1872,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13334:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"EmitStatement","src":"13329:46:6"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"12945:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:6","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"owner","nameLocation":"13120:5:6","nodeType":"VariableDeclaration","scope":1879,"src":"13112:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"operator","nameLocation":"13143:8:6","nodeType":"VariableDeclaration","scope":1879,"src":"13135:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"approved","nameLocation":"13166:8:6","nodeType":"VariableDeclaration","scope":1879,"src":"13161:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1853,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:6"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"13198:0:6"},"scope":2015,"src":"13075:307:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"13529:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1887,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"13555:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"13547:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"13539:53:6"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"13388:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:6","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:6","nodeType":"VariableDeclaration","scope":1893,"src":"13490:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:6"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[],"src":"13529:0:6"},"scope":2015,"src":"13466:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"14306:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"14320:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"14320:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1952,"nodeType":"Block","src":"14940:36:6","statements":[{"expression":{"hexValue":"74727565","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1906,"id":1951,"nodeType":"Return","src":"14954:11:6"}]},"id":1953,"nodeType":"IfStatement","src":"14316:660:6","trueBody":{"id":1949,"nodeType":"Block","src":"14337:597:6","statements":[{"clauses":[{"block":{"id":1929,"nodeType":"Block","src":"14451:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1923,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"14476:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1924,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"14486:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2149_$","typeString":"type(contract IERC721Receiver)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2148,"src":"14486:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1906,"id":1928,"nodeType":"Return","src":"14469:58:6"}]},"errorName":"","id":1930,"nodeType":"TryCatchClause","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"retval","nameLocation":"14443:6:6","nodeType":"VariableDeclaration","scope":1930,"src":"14436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1920,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:6"},"src":"14427:115:6"},{"block":{"id":1946,"nodeType":"Block","src":"14571:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1934,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"14593:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1944,"nodeType":"Block","src":"14720:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:6"},"nodeType":"YulFunctionCall","src":"14839:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:6"},"nodeType":"YulFunctionCall","src":"14856:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:6"},"nodeType":"YulFunctionCall","src":"14832:38:6"},"nodeType":"YulExpressionStatement","src":"14832:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1932,"isOffset":false,"isSlot":false,"src":"14847:6:6","valueSize":1},{"declaration":1932,"isOffset":false,"isSlot":false,"src":"14862:6:6","valueSize":1}],"id":1943,"nodeType":"InlineAssembly","src":"14797:95:6"}]},"id":1945,"nodeType":"IfStatement","src":"14589:321:6","trueBody":{"id":1942,"nodeType":"Block","src":"14613:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1938,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"ExpressionStatement","src":"14635:60:6"}]}}]},"errorName":"","id":1947,"nodeType":"TryCatchClause","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"reason","nameLocation":"14563:6:6","nodeType":"VariableDeclaration","scope":1947,"src":"14550:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1931,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:6"},"src":"14543:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1914,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"14392:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"14406:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"14412:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1918,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"14421:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"14371:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1910,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"14355:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2149_$","typeString":"type(contract IERC721Receiver)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2149","typeString":"contract IERC721Receiver"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2148,"src":"14355:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1948,"nodeType":"TryStatement","src":"14351:573:6"}]}}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"13605:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:6","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"from","nameLocation":"14200:4:6","nodeType":"VariableDeclaration","scope":1955,"src":"14192:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"to","nameLocation":"14222:2:6","nodeType":"VariableDeclaration","scope":1955,"src":"14214:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:6","nodeType":"VariableDeclaration","scope":1955,"src":"14234:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"data","nameLocation":"14272:4:6","nodeType":"VariableDeclaration","scope":1955,"src":"14259:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:6"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"14300:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1904,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:6"},"scope":2015,"src":"14151:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2000,"nodeType":"Block","src":"15856:238:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"15870:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"15866:222:6","trueBody":{"id":1998,"nodeType":"Block","src":"15885:203:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"15903:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:6","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"15899:85:6","trueBody":{"id":1982,"nodeType":"Block","src":"15923:61:6","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1976,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"15941:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1978,"indexExpression":{"id":1977,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"15951:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1979,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"15960:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"15941:28:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16001:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:6","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"15997:81:6","trueBody":{"id":1996,"nodeType":"Block","src":"16019:59:6","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1990,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"16037:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1992,"indexExpression":{"id":1991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16047:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1993,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"16054:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"16037:26:6"}]}}]}}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"14988:705:6","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:6","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"from","nameLocation":"15745:4:6","nodeType":"VariableDeclaration","scope":2001,"src":"15737:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"to","nameLocation":"15767:2:6","nodeType":"VariableDeclaration","scope":2001,"src":"15759:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"15779:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:6","nodeType":"VariableDeclaration","scope":2001,"src":"15815:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:6"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"15856:0:6"},"scope":2015,"src":"15698:396:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2013,"nodeType":"Block","src":"16951:2:6","statements":[]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"16100:695:6","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:6","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"from","nameLocation":"16846:4:6","nodeType":"VariableDeclaration","scope":2014,"src":"16838:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"to","nameLocation":"16868:2:6","nodeType":"VariableDeclaration","scope":2014,"src":"16860:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:6","nodeType":"VariableDeclaration","scope":2014,"src":"16880:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:6","nodeType":"VariableDeclaration","scope":2014,"src":"16910:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:6"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"16951:0:6"},"scope":2015,"src":"16800:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2016,"src":"628:16327:6","usedErrors":[]}],"src":"107:16849:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5164],"IERC721":[2131]},"id":2132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2017,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":5165,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2020,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5164,"src":"271:7:7"},"id":2021,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2131,"linearizedBaseContracts":[2131,5164],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2030,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":2030,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":2030,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":2030,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2039,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":2039,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2035,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":2039,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":2039,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2048,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":2048,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2044,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":2048,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":2048,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2056,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":2056,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":2056,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":2131,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2064,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":2064,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":2064,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":2131,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2076,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":2076,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":2076,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":2076,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":2076,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2072,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":2131,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2086,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":2086,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":2086,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":2086,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":2131,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"2758:732:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2096,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:7","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"from","nameLocation":"3534:4:7","nodeType":"VariableDeclaration","scope":2096,"src":"3526:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"to","nameLocation":"3556:2:7","nodeType":"VariableDeclaration","scope":2096,"src":"3548:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:7","nodeType":"VariableDeclaration","scope":2096,"src":"3568:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:7"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"3598:0:7"},"scope":2131,"src":"3495:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"3605:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2104,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:7","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"to","nameLocation":"4087:2:7","nodeType":"VariableDeclaration","scope":2104,"src":"4079:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:7","nodeType":"VariableDeclaration","scope":2104,"src":"4091:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:7"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[],"src":"4116:0:7"},"scope":2131,"src":"4062:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"4123:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2112,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:7","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"operator","nameLocation":"4472:8:7","nodeType":"VariableDeclaration","scope":2112,"src":"4464:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:7","nodeType":"VariableDeclaration","scope":2112,"src":"4482:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2108,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:7"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"4506:0:7"},"scope":2131,"src":"4437:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"4513:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2120,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:7","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:7","nodeType":"VariableDeclaration","scope":2120,"src":"4678:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:7"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"operator","nameLocation":"4726:8:7","nodeType":"VariableDeclaration","scope":2120,"src":"4718:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:7"},"scope":2131,"src":"4657:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"4742:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2130,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:7","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"owner","nameLocation":"4919:5:7","nodeType":"VariableDeclaration","scope":2130,"src":"4911:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"operator","nameLocation":"4934:8:7","nodeType":"VariableDeclaration","scope":2130,"src":"4926:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:7"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"4967:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2127,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:7"},"scope":2131,"src":"4885:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2132,"src":"250:4725:7","usedErrors":[]}],"src":"108:4868:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2149]},"id":2150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2149,"linearizedBaseContracts":[2149],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2148,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":2148,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":2148,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":2148,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":2148,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2142,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2145,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":2149,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2150,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Address":[2974],"Context":[4364],"ERC165":[5152],"ERC721":[2015],"ERC721Burnable":[2179],"IERC165":[5164],"IERC721":[2131],"IERC721Metadata":[2644],"IERC721Receiver":[2149],"Math":[6029],"Strings":[4613]},"id":2180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2151,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2180,"sourceUnit":2016,"src":"151:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2180,"sourceUnit":4365,"src":"175:36:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2155,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"342:7:9"},"id":2156,"nodeType":"InheritanceSpecifier","src":"342:7:9"},{"baseName":{"id":2157,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"351:6:9"},"id":2158,"nodeType":"InheritanceSpecifier","src":"351:6:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"213:92:9","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":false,"id":2179,"linearizedBaseContracts":[2179,2015,2644,2131,5152,5164,4364],"name":"ERC721Burnable","nameLocation":"324:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2177,"nodeType":"Block","src":"577:192:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2166,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"666:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"666:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2165,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"647:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"647:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"690:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"639:99:9"},{"expression":{"arguments":[{"id":2174,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"754:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2173,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"748:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"748:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"ExpressionStatement","src":"748:14:9"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"364:162:9","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"540:4:9","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"tokenId","nameLocation":"553:7:9","nodeType":"VariableDeclaration","scope":2178,"src":"545:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:17:9"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"577:0:9"},"scope":2179,"src":"531:238:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2180,"src":"306:465:9","usedErrors":[]}],"src":"126:646:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[2974],"Context":[4364],"ERC165":[5152],"ERC721":[2015],"ERC721Enumerable":[2533],"IERC165":[5164],"IERC721":[2131],"IERC721Enumerable":[2617],"IERC721Metadata":[2644],"IERC721Receiver":[2149],"Math":[6029],"Strings":[4613]},"id":2534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2181,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":2016,"src":"153:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":2183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":2618,"src":"177:33:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2185,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"450:6:10"},"id":2186,"nodeType":"InheritanceSpecifier","src":"450:6:10"},{"baseName":{"id":2187,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2617,"src":"458:17:10"},"id":2188,"nodeType":"InheritanceSpecifier","src":"458:17:10"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"212:199:10","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":2533,"linearizedBaseContracts":[2533,2617,2015,2644,2131,5152,5164,4364],"name":"ERC721Enumerable","nameLocation":"430:16:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2194,"mutability":"mutable","name":"_ownedTokens","nameLocation":"591:12:10","nodeType":"VariableDeclaration","scope":2533,"src":"535:68:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":2193,"keyType":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"535:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":2192,"keyType":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"554:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2198,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"709:17:10","nodeType":"VariableDeclaration","scope":2533,"src":"673:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2197,"keyType":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"673:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2201,"mutability":"mutable","name":"_allTokens","nameLocation":"805:10:10","nodeType":"VariableDeclaration","scope":2533,"src":"787:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ArrayTypeName","src":"787:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":2205,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"922:15:10","nodeType":"VariableDeclaration","scope":2533,"src":"886:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2204,"keyType":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"886:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[1164,5163],"body":{"id":2228,"nodeType":"Block","src":"1113:114:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1130:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2218,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1150:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2617_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2617_$","typeString":"type(contract IERC721Enumerable)"}],"id":2217,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1145:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$2617","typeString":"type(contract IERC721Enumerable)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1145:35:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1130:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2224,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1208:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2222,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1184:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2533_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1164,"src":"1184:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1184:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1130:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2215,"id":2227,"nodeType":"Return","src":"1123:97:10"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"944:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1014:17:10","nodeType":"FunctionDefinition","overrides":{"id":2212,"nodeType":"OverrideSpecifier","overrides":[{"id":2210,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5164,"src":"1081:7:10"},{"id":2211,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"1090:6:10"}],"src":"1072:25:10"},"parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"interfaceId","nameLocation":"1039:11:10","nodeType":"VariableDeclaration","scope":2229,"src":"1032:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2207,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1032:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1031:20:10"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2229,"src":"1107:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2213,"name":"bool","nodeType":"ElementaryTypeName","src":"1107:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1106:6:10"},"scope":2533,"src":"1005:222:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2608],"body":{"id":2256,"nodeType":"Block","src":"1412:147:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"1430:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":2244,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"1455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2242,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"1438:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"1438:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1438:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1430:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":2240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1422:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"1422:87:10"},{"expression":{"baseExpression":{"baseExpression":{"id":2250,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1526:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2252,"indexExpression":{"id":2251,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"1539:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2254,"indexExpression":{"id":2253,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"1546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2239,"id":2255,"nodeType":"Return","src":"1519:33:10"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"1233:68:10","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1315:19:10","nodeType":"FunctionDefinition","overrides":{"id":2236,"nodeType":"OverrideSpecifier","overrides":[],"src":"1385:8:10"},"parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"owner","nameLocation":"1343:5:10","nodeType":"VariableDeclaration","scope":2257,"src":"1335:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"index","nameLocation":"1358:5:10","nodeType":"VariableDeclaration","scope":2257,"src":"1350:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:30:10"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"1403:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1402:9:10"},"scope":2533,"src":"1306:253:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2598],"body":{"id":2267,"nodeType":"Block","src":"1700:41:10","statements":[{"expression":{"expression":{"id":2264,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1717:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1717:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2263,"id":2266,"nodeType":"Return","src":"1710:24:10"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"1565:60:10","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1639:11:10","nodeType":"FunctionDefinition","overrides":{"id":2260,"nodeType":"OverrideSpecifier","overrides":[],"src":"1673:8:10"},"parameters":{"id":2259,"nodeType":"ParameterList","parameters":[],"src":"1650:2:10"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"1691:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1690:9:10"},"scope":2533,"src":"1630:111:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2616],"body":{"id":2290,"nodeType":"Block","src":"1897:146:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1915:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2279,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"1923:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$2533_$","typeString":"type(contract ERC721Enumerable)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2268,"src":"1923:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1915:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1955:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":2277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2285,"nodeType":"ExpressionStatement","src":"1907:95:10"},{"expression":{"baseExpression":{"id":2286,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"2019:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2288,"indexExpression":{"id":2287,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2030:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2019:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2276,"id":2289,"nodeType":"Return","src":"2012:24:10"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"1747:61:10","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1822:12:10","nodeType":"FunctionDefinition","overrides":{"id":2273,"nodeType":"OverrideSpecifier","overrides":[],"src":"1870:8:10"},"parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"index","nameLocation":"1843:5:10","nodeType":"VariableDeclaration","scope":2291,"src":"1835:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1834:15:10"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"1888:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:10"},"scope":2533,"src":"1813:230:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2001],"body":{"id":2370,"nodeType":"Block","src":"2273:729:10","statements":[{"expression":{"arguments":[{"id":2307,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2310:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2308,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2316:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2309,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2320:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2310,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2334:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2304,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2283:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2533_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2001,"src":"2283:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2283:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2312,"nodeType":"ExpressionStatement","src":"2283:61:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2359:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2359:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"2355:219:10","trueBody":{"id":2320,"nodeType":"Block","src":"2374:200:10","statements":[{"expression":{"arguments":[{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472616e7366657273206e6f7420737570706f72746564","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:55:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""},"value":"ERC721Enumerable: consecutive transfers not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""}],"id":2316,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2500:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"ExpressionStatement","src":"2500:63:10"}]}},{"assignments":[2323],"declarations":[{"constant":false,"id":2323,"mutability":"mutable","name":"tokenId","nameLocation":"2592:7:10","nodeType":"VariableDeclaration","scope":2370,"src":"2584:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2325,"initialValue":{"id":2324,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2602:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2584:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2629:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2637:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:10","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2637:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2629:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2337,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2724:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2732:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2724:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"nodeType":"IfStatement","src":"2720:88:10","trueBody":{"id":2345,"nodeType":"Block","src":"2736:72:10","statements":[{"expression":{"arguments":[{"id":2341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2783:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2342,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2789:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2750:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2344,"nodeType":"ExpressionStatement","src":"2750:47:10"}]}},"id":2347,"nodeType":"IfStatement","src":"2625:183:10","trueBody":{"id":2336,"nodeType":"Block","src":"2649:65:10","statements":[{"expression":{"arguments":[{"id":2333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2663:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2663:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"2663:40:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2821:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:10","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2821:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2919:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2360,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2925:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2919:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"nodeType":"IfStatement","src":"2915:81:10","trueBody":{"id":2367,"nodeType":"Block","src":"2931:65:10","statements":[{"expression":{"arguments":[{"id":2363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2973:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2364,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2977:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2362,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2945:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2945:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"ExpressionStatement","src":"2945:40:10"}]}},"id":2369,"nodeType":"IfStatement","src":"2817:179:10","trueBody":{"id":2358,"nodeType":"Block","src":"2839:70:10","statements":[{"expression":{"arguments":[{"id":2355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"2853:36:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2853:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"2853:45:10"}]}}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"2049:58:10","text":" @dev See {ERC721-_beforeTokenTransfer}."},"id":2371,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2121:20:10","nodeType":"FunctionDefinition","overrides":{"id":2302,"nodeType":"OverrideSpecifier","overrides":[],"src":"2264:8:10"},"parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"from","nameLocation":"2159:4:10","nodeType":"VariableDeclaration","scope":2371,"src":"2151:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"2151:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"to","nameLocation":"2181:2:10","nodeType":"VariableDeclaration","scope":2371,"src":"2173:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"firstTokenId","nameLocation":"2201:12:10","nodeType":"VariableDeclaration","scope":2371,"src":"2193:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"batchSize","nameLocation":"2231:9:10","nodeType":"VariableDeclaration","scope":2371,"src":"2223:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2141:105:10"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"2273:0:10"},"scope":2533,"src":"2112:890:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"3370:143:10","statements":[{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"length","nameLocation":"3388:6:10","nodeType":"VariableDeclaration","scope":2400,"src":"3380:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2385,"initialValue":{"arguments":[{"id":2383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3414:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2381,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3397:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"3397:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3397:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3380:37:10"},{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2386,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3427:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2389,"indexExpression":{"id":2387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3440:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3427:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2390,"indexExpression":{"id":2388,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3427:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3427:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"3427:34:10"},{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2394,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3471:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2396,"indexExpression":{"id":2395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3471:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2397,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3500:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3471:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2399,"nodeType":"ExpressionStatement","src":"3471:35:10"}]},"documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"3008:283:10","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3305:27:10","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"to","nameLocation":"3341:2:10","nodeType":"VariableDeclaration","scope":2401,"src":"3333:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"tokenId","nameLocation":"3353:7:10","nodeType":"VariableDeclaration","scope":2401,"src":"3345:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:29:10"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"3370:0:10"},"scope":2533,"src":"3296:217:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2420,"nodeType":"Block","src":"3774:95:10","statements":[{"expression":{"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2407,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"3784:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2409,"indexExpression":{"id":2408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"3800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3784:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2410,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3811:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3811:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3784:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2413,"nodeType":"ExpressionStatement","src":"3784:44:10"},{"expression":{"arguments":[{"id":2417,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"3854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2414,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3838:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3838:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2419,"nodeType":"ExpressionStatement","src":"3838:24:10"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"3519:184:10","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3717:31:10","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"tokenId","nameLocation":"3757:7:10","nodeType":"VariableDeclaration","scope":2421,"src":"3749:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3748:17:10"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[],"src":"3774:0:10"},"scope":2533,"src":"3708:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2483,"nodeType":"Block","src":"4567:889:10","statements":[{"assignments":[2430],"declarations":[{"constant":false,"id":2430,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4756:14:10","nodeType":"VariableDeclaration","scope":2483,"src":"4748:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2437,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"4790:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2431,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"4773:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2015_$","typeString":"type(contract ERC721)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"4773:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4773:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4773:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4748:51:10"},{"assignments":[2439],"declarations":[{"constant":false,"id":2439,"mutability":"mutable","name":"tokenIndex","nameLocation":"4817:10:10","nodeType":"VariableDeclaration","scope":2483,"src":"4809:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"4809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2443,"initialValue":{"baseExpression":{"id":2440,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4830:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2442,"indexExpression":{"id":2441,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4830:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4809:47:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4960:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2445,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4974:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4960:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"IfStatement","src":"4956:323:10","trueBody":{"id":2469,"nodeType":"Block","src":"4990:289:10","statements":[{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"lastTokenId","nameLocation":"5012:11:10","nodeType":"VariableDeclaration","scope":2469,"src":"5004:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"initialValue":{"baseExpression":{"baseExpression":{"id":2449,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5026:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2451,"indexExpression":{"id":2450,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"5039:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2453,"indexExpression":{"id":2452,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"5045:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5004:56:10"},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2455,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5075:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2458,"indexExpression":{"id":2456,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"5088:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5075:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2459,"indexExpression":{"id":2457,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5094:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5075:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2460,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5108:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5075:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"5075:44:10"},{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2463,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"5191:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2465,"indexExpression":{"id":2464,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5209:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5191:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2466,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5224:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5191:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"5191:43:10"}]}},{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5365:33:10","subExpression":{"baseExpression":{"id":2471,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"5372:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2473,"indexExpression":{"id":2472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5390:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5372:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"ExpressionStatement","src":"5365:33:10"},{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5408:41:10","subExpression":{"baseExpression":{"baseExpression":{"id":2476,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5415:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2478,"indexExpression":{"id":2477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"5428:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5415:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2480,"indexExpression":{"id":2479,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"5434:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5415:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"ExpressionStatement","src":"5408:41:10"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"3875:606:10","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4495:32:10","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"from","nameLocation":"4536:4:10","nodeType":"VariableDeclaration","scope":2484,"src":"4528:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"tokenId","nameLocation":"4550:7:10","nodeType":"VariableDeclaration","scope":2484,"src":"4542:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4527:31:10"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[],"src":"4567:0:10"},"scope":2533,"src":"4486:970:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2531,"nodeType":"Block","src":"5815:990:10","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6001:14:10","nodeType":"VariableDeclaration","scope":2531,"src":"5993:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"5993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2496,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2492,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6018:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6018:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6018:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5993:46:10"},{"assignments":[2498],"declarations":[{"constant":false,"id":2498,"mutability":"mutable","name":"tokenIndex","nameLocation":"6057:10:10","nodeType":"VariableDeclaration","scope":2531,"src":"6049:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"baseExpression":{"id":2499,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6070:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2501,"indexExpression":{"id":2500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"6086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6049:45:10"},{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"lastTokenId","nameLocation":"6424:11:10","nodeType":"VariableDeclaration","scope":2531,"src":"6416:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"baseExpression":{"id":2505,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6438:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2507,"indexExpression":{"id":2506,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"6449:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6438:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6416:48:10"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2509,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6475:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2511,"indexExpression":{"id":2510,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6486:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2512,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6500:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"6475:36:10"},{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2515,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6579:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2517,"indexExpression":{"id":2516,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6595:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6579:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2518,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6610:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6579:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ExpressionStatement","src":"6579:41:10"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6741:31:10","subExpression":{"baseExpression":{"id":2521,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6748:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2523,"indexExpression":{"id":2522,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"6764:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6748:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"ExpressionStatement","src":"6741:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2526,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6782:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6782:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6782:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"6782:16:10"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"5462:277:10","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5753:36:10","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"tokenId","nameLocation":"5798:7:10","nodeType":"VariableDeclaration","scope":2532,"src":"5790:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:17:10"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"5815:0:10"},"scope":2533,"src":"5744:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2534,"src":"412:6395:10","usedErrors":[]}],"src":"128:6680:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol","exportedSymbols":{"Address":[2974],"Checkpoints":[4342],"Context":[4364],"Counters":[4438],"ECDSA":[4974],"EIP712":[5128],"ERC165":[5152],"ERC721":[2015],"ERC721Votes":[2586],"IERC165":[5164],"IERC721":[2131],"IERC721Metadata":[2644],"IERC721Receiver":[2149],"IVotes":[616],"Math":[6029],"SafeCast":[7570],"Strings":[4613],"Votes":[1070]},"id":2587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2535,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2587,"sourceUnit":2016,"src":"148:23:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2587,"sourceUnit":1071,"src":"172:45:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2539,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"777:6:11"},"id":2540,"nodeType":"InheritanceSpecifier","src":"777:6:11"},{"baseName":{"id":2541,"name":"Votes","nodeType":"IdentifierPath","referencedDeclaration":1070,"src":"785:5:11"},"id":2542,"nodeType":"InheritanceSpecifier","src":"785:5:11"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"219:524:11","text":" @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n as 1 vote unit.\n Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n the votes in governance decisions, or they can delegate to themselves to be their own representative.\n _Available since v4.5._"},"fullyImplemented":false,"id":2586,"linearizedBaseContracts":[2586,1070,5128,2015,2644,2131,5152,5164,4364,616],"name":"ERC721Votes","nameLocation":"762:11:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2014],"body":{"id":2570,"nodeType":"Block","src":"1121:128:11","statements":[{"expression":{"arguments":[{"id":2556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1152:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"1158:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2558,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1162:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1131:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"1131:41:11"},{"expression":{"arguments":[{"id":2564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1208:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"1214:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2566,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1218:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2567,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1232:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2561,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1182:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Votes_$2586_$","typeString":"type(contract super ERC721Votes)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"1182:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1182:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"1182:60:11"}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"797:159:11","text":" @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"970:19:11","nodeType":"FunctionDefinition","overrides":{"id":2553,"nodeType":"OverrideSpecifier","overrides":[],"src":"1112:8:11"},"parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"from","nameLocation":"1007:4:11","nodeType":"VariableDeclaration","scope":2571,"src":"999:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"to","nameLocation":"1029:2:11","nodeType":"VariableDeclaration","scope":2571,"src":"1021:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"firstTokenId","nameLocation":"1049:12:11","nodeType":"VariableDeclaration","scope":2571,"src":"1041:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"batchSize","nameLocation":"1079:9:11","nodeType":"VariableDeclaration","scope":2571,"src":"1071:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:105:11"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"1121:0:11"},"scope":2586,"src":"961:288:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":2584,"nodeType":"Block","src":"1408:42:11","statements":[{"expression":{"arguments":[{"id":2581,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1435:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2580,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1425:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1425:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2583,"nodeType":"Return","src":"1418:25:11"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"1255:57:11","text":" @dev Returns the balance of `account`."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"1326:15:11","nodeType":"FunctionDefinition","overrides":{"id":2576,"nodeType":"OverrideSpecifier","overrides":[],"src":"1381:8:11"},"parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"account","nameLocation":"1350:7:11","nodeType":"VariableDeclaration","scope":2585,"src":"1342:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1341:17:11"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"1399:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:9:11"},"scope":2586,"src":"1317:133:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2587,"src":"744:708:11","usedErrors":[]}],"src":"123:1330:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[5164],"IERC721":[2131],"IERC721Enumerable":[2617]},"id":2618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2618,"sourceUnit":2132,"src":"154:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2591,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2131,"src":"348:7:12"},"id":2592,"nodeType":"InheritanceSpecifier","src":"348:7:12"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"180:136:12","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2617,"linearizedBaseContracts":[2617,2131,5164],"name":"IERC721Enumerable","nameLocation":"327:17:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"362:82:12","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2598,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:12","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"469:2:12"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2598,"src":"495:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:12"},"scope":2617,"src":"449:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"510:171:12","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2608,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:12","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"owner","nameLocation":"723:5:12","nodeType":"VariableDeclaration","scope":2608,"src":"715:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"index","nameLocation":"738:5:12","nodeType":"VariableDeclaration","scope":2608,"src":"730:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:12"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"768:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:12"},"scope":2617,"src":"686:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"783:164:12","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2616,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:12","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"index","nameLocation":"982:5:12","nodeType":"VariableDeclaration","scope":2616,"src":"974:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:12"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"1012:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:12"},"scope":2617,"src":"952:69:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2618,"src":"317:706:12","usedErrors":[]}],"src":"129:895:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[5164],"IERC721":[2131],"IERC721Metadata":[2644]},"id":2645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2619,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2645,"sourceUnit":2132,"src":"137:24:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2622,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2131,"src":"326:7:13"},"id":2623,"nodeType":"InheritanceSpecifier","src":"326:7:13"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"163:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2644,"linearizedBaseContracts":[2644,2131,5164],"name":"IERC721Metadata","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"340:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2629,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:13","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[],"src":"416:2:13"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"442:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:13"},"scope":2644,"src":"403:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"463:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2635,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:13","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"543:2:13"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"569:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2632,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:13"},"scope":2644,"src":"528:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"590:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2643,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:13","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:13","nodeType":"VariableDeclaration","scope":2643,"src":"703:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:13"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"743:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2640,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:13"},"scope":2644,"src":"685:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2645,"src":"297:463:13","usedErrors":[]}],"src":"112:649:13"},"id":13},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2974]},"id":2975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2646,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2974,"linearizedBaseContracts":[2974],"name":"Address","nameLocation":"202:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2661,"nodeType":"Block","src":"1241:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"1465:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2654,"id":2660,"nodeType":"Return","src":"1458:30:14"}]},"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"216:954:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:14","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"account","nameLocation":"1203:7:14","nodeType":"VariableDeclaration","scope":2662,"src":"1195:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:14"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2662,"src":"1235:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:14"},"scope":2974,"src":"1175:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2695,"nodeType":"Block","src":"2483:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2673,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2974","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2974","typeString":"library Address"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:14","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2526:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2680,"nodeType":"ExpressionStatement","src":"2493:73:14"},{"assignments":[2682,null],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"success","nameLocation":"2583:7:14","nodeType":"VariableDeclaration","scope":2695,"src":"2578:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2681,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2689,"initialValue":{"arguments":[{"hexValue":"","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2683,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2596:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2618:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:14"},{"expression":{"arguments":[{"id":2691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2647:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2694,"nodeType":"ExpressionStatement","src":"2639:78:14"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"1501:906:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:14","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:14","nodeType":"VariableDeclaration","scope":2696,"src":"2431:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"amount","nameLocation":"2466:6:14","nodeType":"VariableDeclaration","scope":2696,"src":"2458:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:14"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[],"src":"2483:0:14"},"scope":2974,"src":"2412:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"3555:96:14","statements":[{"expression":{"arguments":[{"id":2707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"3594:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"3602:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2706,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2754,2798],"referencedDeclaration":2798,"src":"3572:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2705,"id":2712,"nodeType":"Return","src":"3565:79:14"}]},"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"2730:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:14","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"target","nameLocation":"3496:6:14","nodeType":"VariableDeclaration","scope":2714,"src":"3488:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"data","nameLocation":"3517:4:14","nodeType":"VariableDeclaration","scope":2714,"src":"3504:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2700,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:14"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"3541:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2703,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:14"},"scope":2974,"src":"3466:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"4020:76:14","statements":[{"expression":{"arguments":[{"id":2727,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"4059:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"4067:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2730,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4076:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2726,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2754,2798],"referencedDeclaration":2798,"src":"4037:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2725,"id":2732,"nodeType":"Return","src":"4030:59:14"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"3657:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:14","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"target","nameLocation":"3912:6:14","nodeType":"VariableDeclaration","scope":2734,"src":"3904:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"data","nameLocation":"3941:4:14","nodeType":"VariableDeclaration","scope":2734,"src":"3928:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2718,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:14","nodeType":"VariableDeclaration","scope":2734,"src":"3955:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:14"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"4006:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2723,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:14"},"scope":2974,"src":"3873:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"4601:111:14","statements":[{"expression":{"arguments":[{"id":2747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"4640:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4648:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"4654:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2746,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2754,2798],"referencedDeclaration":2798,"src":"4618:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2745,"id":2752,"nodeType":"Return","src":"4611:94:14"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"4102:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2754,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:14","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"target","nameLocation":"4506:6:14","nodeType":"VariableDeclaration","scope":2754,"src":"4498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"data","nameLocation":"4535:4:14","nodeType":"VariableDeclaration","scope":2754,"src":"4522:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"value","nameLocation":"4557:5:14","nodeType":"VariableDeclaration","scope":2754,"src":"4549:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:14"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"4587:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2743,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:14"},"scope":2974,"src":"4458:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"5139:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2771,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2974","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2974","typeString":"library Address"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:14","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"5182:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2778,"nodeType":"ExpressionStatement","src":"5149:81:14"},{"assignments":[2780,2782],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"success","nameLocation":"5246:7:14","nodeType":"VariableDeclaration","scope":2797,"src":"5241:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2779,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:14","nodeType":"VariableDeclaration","scope":2797,"src":"5255:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2781,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2789,"initialValue":{"arguments":[{"id":2787,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"5308:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2783,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"5282:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"5301:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:14"},{"expression":{"arguments":[{"id":2791,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"5357:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2792,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"5365:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2793,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"5374:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2794,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"5386:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2790,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5330:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2767,"id":2796,"nodeType":"Return","src":"5323:76:14"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"4718:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:14","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"target","nameLocation":"5008:6:14","nodeType":"VariableDeclaration","scope":2798,"src":"5000:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"data","nameLocation":"5037:4:14","nodeType":"VariableDeclaration","scope":2798,"src":"5024:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"5059:5:14","nodeType":"VariableDeclaration","scope":2798,"src":"5051:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:14","nodeType":"VariableDeclaration","scope":2798,"src":"5074:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2762,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:14"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"5125:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2765,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:14"},"scope":2974,"src":"4960:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"5683:97:14","statements":[{"expression":{"arguments":[{"id":2809,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"5719:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"5727:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2808,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2815,2844],"referencedDeclaration":2844,"src":"5700:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2807,"id":2813,"nodeType":"Return","src":"5693:80:14"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"5412:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:14","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"target","nameLocation":"5619:6:14","nodeType":"VariableDeclaration","scope":2815,"src":"5611:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"data","nameLocation":"5640:4:14","nodeType":"VariableDeclaration","scope":2815,"src":"5627:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2802,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:14"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"5669:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2805,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:14"},"scope":2974,"src":"5583:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"6122:168:14","statements":[{"assignments":[2828,2830],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"success","nameLocation":"6138:7:14","nodeType":"VariableDeclaration","scope":2843,"src":"6133:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2827,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:14","nodeType":"VariableDeclaration","scope":2843,"src":"6147:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2829,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2835,"initialValue":{"arguments":[{"id":2833,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"6192:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2831,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6174:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:14"},{"expression":{"arguments":[{"id":2837,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6241:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"6249:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2839,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"6258:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2840,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"6270:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2836,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6214:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2826,"id":2842,"nodeType":"Return","src":"6207:76:14"}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"5786:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:14","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"target","nameLocation":"6009:6:14","nodeType":"VariableDeclaration","scope":2844,"src":"6001:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"data","nameLocation":"6038:4:14","nodeType":"VariableDeclaration","scope":2844,"src":"6025:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2819,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:14","nodeType":"VariableDeclaration","scope":2844,"src":"6052:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:14"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"6108:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2824,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:14"},"scope":2974,"src":"5964:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2860,"nodeType":"Block","src":"6566:101:14","statements":[{"expression":{"arguments":[{"id":2855,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"6604:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2856,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6612:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2854,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2861,2890],"referencedDeclaration":2890,"src":"6583:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2853,"id":2859,"nodeType":"Return","src":"6576:84:14"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"6296:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:14","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"target","nameLocation":"6507:6:14","nodeType":"VariableDeclaration","scope":2861,"src":"6499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"data","nameLocation":"6528:4:14","nodeType":"VariableDeclaration","scope":2861,"src":"6515:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2848,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:14"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2861,"src":"6552:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2851,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:14"},"scope":2974,"src":"6469:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"7008:170:14","statements":[{"assignments":[2874,2876],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"success","nameLocation":"7024:7:14","nodeType":"VariableDeclaration","scope":2889,"src":"7019:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2873,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:14","nodeType":"VariableDeclaration","scope":2889,"src":"7033:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2875,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2881,"initialValue":{"arguments":[{"id":2879,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"7080:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2877,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7060:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:14"},{"expression":{"arguments":[{"id":2883,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7129:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"7137:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2885,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"7146:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2886,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7158:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2882,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7102:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2872,"id":2888,"nodeType":"Return","src":"7095:76:14"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"6673:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:14","nodeType":"FunctionDefinition","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"target","nameLocation":"6900:6:14","nodeType":"VariableDeclaration","scope":2890,"src":"6892:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"data","nameLocation":"6929:4:14","nodeType":"VariableDeclaration","scope":2890,"src":"6916:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2865,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:14","nodeType":"VariableDeclaration","scope":2890,"src":"6943:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2867,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:14"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"6994:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2870,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:14"},"scope":2974,"src":"6853:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2928,"nodeType":"Block","src":"7660:434:14","statements":[{"condition":{"id":2904,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7674:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2926,"nodeType":"Block","src":"8030:58:14","statements":[{"expression":{"arguments":[{"id":2922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8052:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2923,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"8064:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2921,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"8044:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2925,"nodeType":"ExpressionStatement","src":"8044:33:14"}]},"id":2927,"nodeType":"IfStatement","src":"7670:418:14","trueBody":{"id":2920,"nodeType":"Block","src":"7683:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2905,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"7701:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2917,"nodeType":"IfStatement","src":"7697:286:14","trueBody":{"id":2916,"nodeType":"Block","src":"7725:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2911,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"7927:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2910,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"7916:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2915,"nodeType":"ExpressionStatement","src":"7908:60:14"}]}},{"expression":{"id":2918,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8003:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2903,"id":2919,"nodeType":"Return","src":"7996:17:14"}]}}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"7184:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:14","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"target","nameLocation":"7519:6:14","nodeType":"VariableDeclaration","scope":2929,"src":"7511:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"success","nameLocation":"7540:7:14","nodeType":"VariableDeclaration","scope":2929,"src":"7535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:14","nodeType":"VariableDeclaration","scope":2929,"src":"7557:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2896,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:14","nodeType":"VariableDeclaration","scope":2929,"src":"7590:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:14"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"7646:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2901,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:14"},"scope":2974,"src":"7466:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2952,"nodeType":"Block","src":"8475:135:14","statements":[{"condition":{"id":2941,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"8489:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2950,"nodeType":"Block","src":"8546:58:14","statements":[{"expression":{"arguments":[{"id":2946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"8568:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2947,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"8580:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2945,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"8560:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"ExpressionStatement","src":"8560:33:14"}]},"id":2951,"nodeType":"IfStatement","src":"8485:119:14","trueBody":{"id":2944,"nodeType":"Block","src":"8498:42:14","statements":[{"expression":{"id":2942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"8519:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2940,"id":2943,"nodeType":"Return","src":"8512:17:14"}]}}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"8100:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:14","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"success","nameLocation":"8355:7:14","nodeType":"VariableDeclaration","scope":2953,"src":"8350:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2931,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:14","nodeType":"VariableDeclaration","scope":2953,"src":"8372:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2933,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:14","nodeType":"VariableDeclaration","scope":2953,"src":"8405:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2935,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:14"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"8461:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:14"},"scope":2974,"src":"8315:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2972,"nodeType":"Block","src":"8699:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2960,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"8775:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2970,"nodeType":"Block","src":"9105:45:14","statements":[{"expression":{"arguments":[{"id":2967,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"9126:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2966,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"ExpressionStatement","src":"9119:20:14"}]},"id":2971,"nodeType":"IfStatement","src":"8771:379:14","trueBody":{"id":2965,"nodeType":"Block","src":"8798:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:14"},"nodeType":"YulFunctionCall","src":"8997:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:14"},"nodeType":"YulFunctionCall","src":"9038:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:14"},"nodeType":"YulFunctionCall","src":"9031:44:14"},"nodeType":"YulExpressionStatement","src":"9031:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9003:10:14","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9046:10:14","valueSize":1}],"id":2964,"nodeType":"InlineAssembly","src":"8947:142:14"}]}}]},"id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:14","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:14","nodeType":"VariableDeclaration","scope":2973,"src":"8633:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:14","nodeType":"VariableDeclaration","scope":2973,"src":"8658:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:14"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[],"src":"8699:0:14"},"scope":2974,"src":"8616:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2975,"src":"194:8964:14","usedErrors":[]}],"src":"101:9058:14"},"id":14},"@openzeppelin/contracts/utils/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","exportedSymbols":{"Checkpoints":[4342],"Math":[6029],"SafeCast":[7570]},"id":4343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4343,"sourceUnit":6030,"src":"218:25:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4343,"sourceUnit":7571,"src":"244:29:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"275:432:15","text":" @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function.\n _Available since v4.5._"},"fullyImplemented":true,"id":4342,"linearizedBaseContracts":[4342],"name":"Checkpoints","nameLocation":"716:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Checkpoints.History","id":2984,"members":[{"constant":false,"id":2983,"mutability":"mutable","name":"_checkpoints","nameLocation":"772:12:15","nodeType":"VariableDeclaration","scope":2984,"src":"759:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":2981,"nodeType":"UserDefinedTypeName","pathNode":{"id":2980,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"759:10:15"},"referencedDeclaration":2989,"src":"759:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":2982,"nodeType":"ArrayTypeName","src":"759:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"}],"name":"History","nameLocation":"741:7:15","nodeType":"StructDefinition","scope":4342,"src":"734:57:15","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint","id":2989,"members":[{"constant":false,"id":2986,"mutability":"mutable","name":"_blockNumber","nameLocation":"832:12:15","nodeType":"VariableDeclaration","scope":2989,"src":"825:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2985,"name":"uint32","nodeType":"ElementaryTypeName","src":"825:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"_value","nameLocation":"862:6:15","nodeType":"VariableDeclaration","scope":2989,"src":"854:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2987,"name":"uint224","nodeType":"ElementaryTypeName","src":"854:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"804:10:15","nodeType":"StructDefinition","scope":4342,"src":"797:78:15","visibility":"public"},{"body":{"id":3045,"nodeType":"Block","src":"1160:344:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"1178:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3002,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1192:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1192:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1178:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1206:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1170:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1170:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"ExpressionStatement","src":"1170:71:15"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"key","nameLocation":"1258:3:15","nodeType":"VariableDeclaration","scope":3045,"src":"1251:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3008,"name":"uint32","nodeType":"ElementaryTypeName","src":"1251:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3014,"initialValue":{"arguments":[{"id":3012,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"1282:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3010,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1264:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7570_$","typeString":"type(library SafeCast)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6732,"src":"1264:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"1251:43:15"},{"assignments":[3016],"declarations":[{"constant":false,"id":3016,"mutability":"mutable","name":"len","nameLocation":"1313:3:15","nodeType":"VariableDeclaration","scope":3045,"src":"1305:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3020,"initialValue":{"expression":{"expression":{"id":3017,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1319:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"1319:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1319:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1305:38:15"},{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"pos","nameLocation":"1361:3:15","nodeType":"VariableDeclaration","scope":3045,"src":"1353:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1353:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3030,"initialValue":{"arguments":[{"expression":{"id":3024,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1386:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"1386:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3026,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1405:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1410:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3028,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"1413:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3023,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3443,3859,4275],"referencedDeclaration":3443,"src":"1367:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1367:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1353:64:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1434:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1441:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1434:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3036,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1463:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"1463:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1482:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1488:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1482:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"1449:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1449:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"1449:48:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1434:63:15","trueExpression":{"hexValue":"30","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1445:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2999,"id":3044,"nodeType":"Return","src":"1427:70:15"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"881:179:15","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"getAtBlock","nameLocation":"1074:10:15","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"self","nameLocation":"1101:4:15","nodeType":"VariableDeclaration","scope":3046,"src":"1085:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2992,"nodeType":"UserDefinedTypeName","pathNode":{"id":2991,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"1085:7:15"},"referencedDeclaration":2984,"src":"1085:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"blockNumber","nameLocation":"1115:11:15","nodeType":"VariableDeclaration","scope":3046,"src":"1107:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1084:43:15"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"1151:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1150:9:15"},"scope":4342,"src":"1065:439:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"2010:655:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3059,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2042:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2042:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2028:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2056:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3064,"nodeType":"ExpressionStatement","src":"2020:71:15"},{"assignments":[3066],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"key","nameLocation":"2108:3:15","nodeType":"VariableDeclaration","scope":3145,"src":"2101:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3065,"name":"uint32","nodeType":"ElementaryTypeName","src":"2101:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3071,"initialValue":{"arguments":[{"id":3069,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2132:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3067,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"2114:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7570_$","typeString":"type(library SafeCast)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6732,"src":"2114:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2114:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2101:43:15"},{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"len","nameLocation":"2163:3:15","nodeType":"VariableDeclaration","scope":3145,"src":"2155:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3077,"initialValue":{"expression":{"expression":{"id":3074,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2169:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"2169:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2169:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2155:38:15"},{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"low","nameLocation":"2212:3:15","nodeType":"VariableDeclaration","scope":3145,"src":"2204:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2218:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2204:15:15"},{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"high","nameLocation":"2237:4:15","nodeType":"VariableDeclaration","scope":3145,"src":"2229:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"initialValue":{"id":3084,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2244:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2229:18:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2262:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2268:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2262:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"2258:242:15","trueBody":{"id":3119,"nodeType":"Block","src":"2271:229:15","statements":[{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"mid","nameLocation":"2293:3:15","nodeType":"VariableDeclaration","scope":3119,"src":"2285:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3097,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2299:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3094,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2315:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3092,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"2305:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5533,"src":"2305:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2305:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2299:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2285:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2337:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":3100,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2357:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"2357:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3102,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"2376:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3099,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"2343:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2343:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"2343:50:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2337:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3117,"nodeType":"Block","src":"2444:46:15","statements":[{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"2462:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"2468:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2474:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2468:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2462:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"2462:13:15"}]},"id":3118,"nodeType":"IfStatement","src":"2333:157:15","trueBody":{"id":3110,"nodeType":"Block","src":"2395:43:15","statements":[{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2413:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3107,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"2420:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2413:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"2413:10:15"}]}}]}},{"assignments":[3122],"declarations":[{"constant":false,"id":3122,"mutability":"mutable","name":"pos","nameLocation":"2518:3:15","nodeType":"VariableDeclaration","scope":3145,"src":"2510:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[{"expression":{"id":3124,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2543:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"2543:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3126,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2562:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3127,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"2567:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3128,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2572:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3123,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3443,3859,4275],"referencedDeclaration":3443,"src":"2524:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2510:67:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"2595:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2602:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2595:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3136,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2624:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"2624:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"2643:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2649:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2643:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3135,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"2610:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2610:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"2610:48:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2595:63:15","trueExpression":{"hexValue":"30","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3056,"id":3144,"nodeType":"Return","src":"2588:70:15"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"1510:386:15","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n checkpoints."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"getAtProbablyRecentBlock","nameLocation":"1910:24:15","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"self","nameLocation":"1951:4:15","nodeType":"VariableDeclaration","scope":3146,"src":"1935:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3049,"nodeType":"UserDefinedTypeName","pathNode":{"id":3048,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"1935:7:15"},"referencedDeclaration":2984,"src":"1935:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"blockNumber","nameLocation":"1965:11:15","nodeType":"VariableDeclaration","scope":3146,"src":"1957:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1934:43:15"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"2001:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:15"},"scope":4342,"src":"1901:764:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3173,"nodeType":"Block","src":"2930:110:15","statements":[{"expression":{"arguments":[{"expression":{"id":3160,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"2955:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"2955:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"arguments":[{"expression":{"id":3164,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2992:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2992:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"2974:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7570_$","typeString":"type(library SafeCast)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6732,"src":"2974:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":3169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"3026:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3167,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"3007:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7570_$","typeString":"type(library SafeCast)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":6132,"src":"3007:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3159,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3391,3807,4223],"referencedDeclaration":3391,"src":"2947:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2947:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3158,"id":3172,"nodeType":"Return","src":"2940:93:15"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"2671:167:15","text":" @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n Returns previous value and new value."},"id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"2852:4:15","nodeType":"FunctionDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"self","nameLocation":"2873:4:15","nodeType":"VariableDeclaration","scope":3174,"src":"2857:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3149,"nodeType":"UserDefinedTypeName","pathNode":{"id":3148,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"2857:7:15"},"referencedDeclaration":2984,"src":"2857:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"value","nameLocation":"2887:5:15","nodeType":"VariableDeclaration","scope":3174,"src":"2879:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2856:37:15"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"2912:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"2921:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2911:18:15"},"scope":4342,"src":"2843:197:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"3443:59:15","statements":[{"expression":{"arguments":[{"id":3198,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3465:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},{"arguments":[{"arguments":[{"id":3201,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3481:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}],"id":3200,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[3238,3654,4070],"referencedDeclaration":3238,"src":"3474:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2984_storage_ptr_$returns$_t_uint224_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3203,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3488:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3199,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3471:2:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3471:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3197,"name":"push","nodeType":"Identifier","overloadedDeclarations":[3174,3208,3542,3958],"referencedDeclaration":3174,"src":"3460:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2984_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3460:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3196,"id":3206,"nodeType":"Return","src":"3453:42:15"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"3046:221:15","text":" @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n be set to `op(latest, delta)`.\n Returns previous value and new value."},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3281:4:15","nodeType":"FunctionDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"self","nameLocation":"3311:4:15","nodeType":"VariableDeclaration","scope":3208,"src":"3295:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3177,"nodeType":"UserDefinedTypeName","pathNode":{"id":3176,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"3295:7:15"},"referencedDeclaration":2984,"src":"3295:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"op","nameLocation":"3375:2:15","nodeType":"VariableDeclaration","scope":3208,"src":"3325:52:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":3187,"nodeType":"FunctionTypeName","parameterTypes":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"3334:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"3343:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3333:18:15"},"returnParameterTypes":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"3366:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3365:9:15"},"src":"3325:52:15","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"delta","nameLocation":"3395:5:15","nodeType":"VariableDeclaration","scope":3208,"src":"3387:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3285:121:15"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"3425:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"3434:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3434:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3424:18:15"},"scope":4342,"src":"3272:230:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"3692:135:15","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"pos","nameLocation":"3710:3:15","nodeType":"VariableDeclaration","scope":3237,"src":"3702:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3222,"initialValue":{"expression":{"expression":{"id":3219,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3716:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"3716:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3716:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3702:38:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"3757:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3764:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3757:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3228,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3786:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"3786:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"3805:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3811:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3805:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3227,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"3772:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3772:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"3772:48:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3757:63:15","trueExpression":{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3768:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3216,"id":3236,"nodeType":"Return","src":"3750:70:15"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"3508:109:15","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3631:6:15","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"self","nameLocation":"3654:4:15","nodeType":"VariableDeclaration","scope":3238,"src":"3638:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3211,"nodeType":"UserDefinedTypeName","pathNode":{"id":3210,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"3638:7:15"},"referencedDeclaration":2984,"src":"3638:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"3637:22:15"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"3683:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3214,"name":"uint224","nodeType":"ElementaryTypeName","src":"3683:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3682:9:15"},"scope":4342,"src":"3622:205:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"4201:279:15","statements":[{"assignments":[3252],"declarations":[{"constant":false,"id":3252,"mutability":"mutable","name":"pos","nameLocation":"4219:3:15","nodeType":"VariableDeclaration","scope":3286,"src":"4211:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"4211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3256,"initialValue":{"expression":{"expression":{"id":3253,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4225:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"4225:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4225:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4211:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4263:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4270:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4263:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3284,"nodeType":"Block","src":"4324:150:15","statements":[{"assignments":[3268],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"ckpt","nameLocation":"4356:4:15","nodeType":"VariableDeclaration","scope":3284,"src":"4338:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3267,"nodeType":"UserDefinedTypeName","pathNode":{"id":3266,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"4338:10:15"},"referencedDeclaration":2989,"src":"4338:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3276,"initialValue":{"arguments":[{"expression":{"id":3270,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4377:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"4377:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4396:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3269,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"4363:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4363:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4338:66:15"},{"expression":{"components":[{"hexValue":"74727565","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4426:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3278,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4432:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"4432:17:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3280,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4451:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"4451:11:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4425:38:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3250,"id":3283,"nodeType":"Return","src":"4418:45:15"}]},"id":3285,"nodeType":"IfStatement","src":"4259:215:15","trueBody":{"id":3265,"nodeType":"Block","src":"4273:45:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4295:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4294:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3250,"id":3264,"nodeType":"Return","src":"4287:20:15"}]}}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"3833:168:15","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"4015:16:15","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"self","nameLocation":"4048:4:15","nodeType":"VariableDeclaration","scope":3287,"src":"4032:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3241,"nodeType":"UserDefinedTypeName","pathNode":{"id":3240,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"4032:7:15"},"referencedDeclaration":2984,"src":"4032:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4031:22:15"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"exists","nameLocation":"4119:6:15","nodeType":"VariableDeclaration","scope":3287,"src":"4114:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3244,"name":"bool","nodeType":"ElementaryTypeName","src":"4114:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"_blockNumber","nameLocation":"4146:12:15","nodeType":"VariableDeclaration","scope":3287,"src":"4139:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3246,"name":"uint32","nodeType":"ElementaryTypeName","src":"4139:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"_value","nameLocation":"4180:6:15","nodeType":"VariableDeclaration","scope":3287,"src":"4172:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3248,"name":"uint224","nodeType":"ElementaryTypeName","src":"4172:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4100:96:15"},"scope":4342,"src":"4006:474:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"4618:48:15","statements":[{"expression":{"expression":{"expression":{"id":3296,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"4635:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"4635:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4635:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3295,"id":3299,"nodeType":"Return","src":"4628:31:15"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"4486:57:15","text":" @dev Returns the number of checkpoint."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4557:6:15","nodeType":"FunctionDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"self","nameLocation":"4580:4:15","nodeType":"VariableDeclaration","scope":3301,"src":"4564:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"4564:7:15"},"referencedDeclaration":2984,"src":"4564:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2984_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4563:22:15"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3301,"src":"4609:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4608:9:15"},"scope":4342,"src":"4548:118:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"4978:743:15","statements":[{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"pos","nameLocation":"4996:3:15","nodeType":"VariableDeclaration","scope":3390,"src":"4988:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"initialValue":{"expression":{"id":3319,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5002:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5002:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4988:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"5028:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5034:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5028:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3388,"nodeType":"Block","src":"5602:113:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3379,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5652:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5665:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3378,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5626:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5626:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3375,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5616:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5616:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2989_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5616:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3383,"nodeType":"ExpressionStatement","src":"5616:57:15"},{"expression":{"components":[{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5695:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5698:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5694:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3316,"id":3387,"nodeType":"Return","src":"5687:17:15"}]},"id":3389,"nodeType":"IfStatement","src":"5024:691:15","trueBody":{"id":3374,"nodeType":"Block","src":"5037:559:15","statements":[{"assignments":[3327],"declarations":[{"constant":false,"id":3327,"mutability":"mutable","name":"last","nameLocation":"5121:4:15","nodeType":"VariableDeclaration","scope":3374,"src":"5103:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3326,"nodeType":"UserDefinedTypeName","pathNode":{"id":3325,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"5103:10:15"},"referencedDeclaration":2989,"src":"5103:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3334,"initialValue":{"arguments":[{"id":3329,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5142:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"5148:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"5128:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5128:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5103:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3336,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5231:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"5231:17:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3338,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5252:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5231:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5257:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5223:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5223:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"ExpressionStatement","src":"5223:60:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3343,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5347:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"5347:17:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3345,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5368:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5347:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3367,"nodeType":"Block","src":"5455:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3362,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5509:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5522:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3361,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5483:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5483:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3358,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5473:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5473:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2989_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5473:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"ExpressionStatement","src":"5473:57:15"}]},"id":3368,"nodeType":"IfStatement","src":"5343:202:15","trueBody":{"id":3357,"nodeType":"Block","src":"5373:76:15","statements":[{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3348,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5405:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"5411:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5417:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3347,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"5391:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5391:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"5391:35:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5429:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5391:43:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3356,"nodeType":"ExpressionStatement","src":"5391:43:15"}]}},{"expression":{"components":[{"expression":{"id":3369,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5566:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"5566:11:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5579:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5565:20:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3316,"id":3373,"nodeType":"Return","src":"5558:27:15"}]}}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"4672:165:15","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4851:7:15","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"self","nameLocation":"4889:4:15","nodeType":"VariableDeclaration","scope":3391,"src":"4868:25:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3304,"nodeType":"UserDefinedTypeName","pathNode":{"id":3303,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"4868:10:15"},"referencedDeclaration":2989,"src":"4868:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3305,"nodeType":"ArrayTypeName","src":"4868:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"key","nameLocation":"4910:3:15","nodeType":"VariableDeclaration","scope":3391,"src":"4903:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3307,"name":"uint32","nodeType":"ElementaryTypeName","src":"4903:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"value","nameLocation":"4931:5:15","nodeType":"VariableDeclaration","scope":3391,"src":"4923:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3309,"name":"uint224","nodeType":"ElementaryTypeName","src":"4923:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4858:84:15"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"4960:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3312,"name":"uint224","nodeType":"ElementaryTypeName","src":"4960:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"4969:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3314,"name":"uint224","nodeType":"ElementaryTypeName","src":"4969:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4959:18:15"},"scope":4342,"src":"4842:879:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3442,"nodeType":"Block","src":"6215:275:15","statements":[{"body":{"id":3438,"nodeType":"Block","src":"6244:219:15","statements":[{"assignments":[3411],"declarations":[{"constant":false,"id":3411,"mutability":"mutable","name":"mid","nameLocation":"6266:3:15","nodeType":"VariableDeclaration","scope":3438,"src":"6258:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3417,"initialValue":{"arguments":[{"id":3414,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"6285:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3415,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"6290:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3412,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"6272:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"6272:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6272:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6258:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3419,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"6327:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3420,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6333:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"6313:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6313:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"6313:37:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3423,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"6353:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6313:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3436,"nodeType":"Block","src":"6407:46:15","statements":[{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3430,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"6425:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6431:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6431:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6425:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"6425:13:15"}]},"id":3437,"nodeType":"IfStatement","src":"6309:144:15","trueBody":{"id":3429,"nodeType":"Block","src":"6358:43:15","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3425,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"6376:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3426,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6383:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6376:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"6376:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"6232:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3408,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"6238:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6232:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"WhileStatement","src":"6225:238:15"},{"expression":{"id":3440,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"6479:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3406,"id":3441,"nodeType":"Return","src":"6472:11:15"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"5727:320:15","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6061:18:15","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"self","nameLocation":"6110:4:15","nodeType":"VariableDeclaration","scope":3443,"src":"6089:25:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3394,"nodeType":"UserDefinedTypeName","pathNode":{"id":3393,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"6089:10:15"},"referencedDeclaration":2989,"src":"6089:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3395,"nodeType":"ArrayTypeName","src":"6089:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"key","nameLocation":"6131:3:15","nodeType":"VariableDeclaration","scope":3443,"src":"6124:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3397,"name":"uint32","nodeType":"ElementaryTypeName","src":"6124:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"low","nameLocation":"6152:3:15","nodeType":"VariableDeclaration","scope":3443,"src":"6144:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"high","nameLocation":"6173:4:15","nodeType":"VariableDeclaration","scope":3443,"src":"6165:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6165:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6079:104:15"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"6206:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"6206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6205:9:15"},"scope":4342,"src":"6052:438:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3494,"nodeType":"Block","src":"6993:275:15","statements":[{"body":{"id":3490,"nodeType":"Block","src":"7022:219:15","statements":[{"assignments":[3463],"declarations":[{"constant":false,"id":3463,"mutability":"mutable","name":"mid","nameLocation":"7044:3:15","nodeType":"VariableDeclaration","scope":3490,"src":"7036:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"arguments":[{"id":3466,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"7063:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3467,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7068:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3464,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"7050:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"7050:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7050:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7036:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3471,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7105:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3472,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"7111:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3509,"src":"7091:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2989_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7091:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"7091:37:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3475,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"7131:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7091:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3488,"nodeType":"Block","src":"7188:43:15","statements":[{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3484,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7206:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3485,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"7213:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7206:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"7206:10:15"}]},"id":3489,"nodeType":"IfStatement","src":"7087:144:15","trueBody":{"id":3483,"nodeType":"Block","src":"7136:46:15","statements":[{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"7154:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"7160:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7166:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7154:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"7154:13:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"7010:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3460,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7016:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7010:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"WhileStatement","src":"7003:238:15"},{"expression":{"id":3492,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7257:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3458,"id":3493,"nodeType":"Return","src":"7250:11:15"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"6496:329:15","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6839:18:15","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"self","nameLocation":"6888:4:15","nodeType":"VariableDeclaration","scope":3495,"src":"6867:25:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3446,"nodeType":"UserDefinedTypeName","pathNode":{"id":3445,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"6867:10:15"},"referencedDeclaration":2989,"src":"6867:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3447,"nodeType":"ArrayTypeName","src":"6867:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"key","nameLocation":"6909:3:15","nodeType":"VariableDeclaration","scope":3495,"src":"6902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3449,"name":"uint32","nodeType":"ElementaryTypeName","src":"6902:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"low","nameLocation":"6930:3:15","nodeType":"VariableDeclaration","scope":3495,"src":"6922:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"high","nameLocation":"6951:4:15","nodeType":"VariableDeclaration","scope":3495,"src":"6943:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6857:104:15"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"6984:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6983:9:15"},"scope":4342,"src":"6830:438:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3508,"nodeType":"Block","src":"7386:125:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7405:100:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7426:1:15","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7429:9:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7419:6:15"},"nodeType":"YulFunctionCall","src":"7419:20:15"},"nodeType":"YulExpressionStatement","src":"7419:20:15"},{"nodeType":"YulAssignment","src":"7452:43:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7481:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7484:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7471:9:15"},"nodeType":"YulFunctionCall","src":"7471:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7467:3:15"},"nodeType":"YulFunctionCall","src":"7467:28:15"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7452:11:15"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3501,"isOffset":false,"isSlot":false,"src":"7491:3:15","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":true,"src":"7452:11:15","suffix":"slot","valueSize":1},{"declaration":3499,"isOffset":false,"isSlot":true,"src":"7429:9:15","suffix":"slot","valueSize":1}],"id":3507,"nodeType":"InlineAssembly","src":"7396:109:15"}]},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7283:13:15","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"self","nameLocation":"7318:4:15","nodeType":"VariableDeclaration","scope":3509,"src":"7297:25:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3497,"nodeType":"UserDefinedTypeName","pathNode":{"id":3496,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"7297:10:15"},"referencedDeclaration":2989,"src":"7297:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3498,"nodeType":"ArrayTypeName","src":"7297:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2989_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"pos","nameLocation":"7332:3:15","nodeType":"VariableDeclaration","scope":3509,"src":"7324:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7296:40:15"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"result","nameLocation":"7378:6:15","nodeType":"VariableDeclaration","scope":3509,"src":"7359:25:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3504,"nodeType":"UserDefinedTypeName","pathNode":{"id":3503,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"7359:10:15"},"referencedDeclaration":2989,"src":"7359:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2989_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"src":"7358:27:15"},"scope":4342,"src":"7274:237:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace224","id":3514,"members":[{"constant":false,"id":3513,"mutability":"mutable","name":"_checkpoints","nameLocation":"7559:12:15","nodeType":"VariableDeclaration","scope":3514,"src":"7543:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3511,"nodeType":"UserDefinedTypeName","pathNode":{"id":3510,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"7543:13:15"},"referencedDeclaration":3519,"src":"7543:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3512,"nodeType":"ArrayTypeName","src":"7543:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"7524:8:15","nodeType":"StructDefinition","scope":4342,"src":"7517:61:15","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":3519,"members":[{"constant":false,"id":3516,"mutability":"mutable","name":"_key","nameLocation":"7622:4:15","nodeType":"VariableDeclaration","scope":3519,"src":"7615:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3515,"name":"uint32","nodeType":"ElementaryTypeName","src":"7615:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"_value","nameLocation":"7644:6:15","nodeType":"VariableDeclaration","scope":3519,"src":"7636:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3517,"name":"uint224","nodeType":"ElementaryTypeName","src":"7636:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"7591:13:15","nodeType":"StructDefinition","scope":4342,"src":"7584:73:15","visibility":"public"},{"body":{"id":3541,"nodeType":"Block","src":"7960:62:15","statements":[{"expression":{"arguments":[{"expression":{"id":3535,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7985:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"7985:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3537,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8004:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"8009:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3534,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3391,3807,4223],"referencedDeclaration":3807,"src":"7977:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7977:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3533,"id":3540,"nodeType":"Return","src":"7970:45:15"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"7663:162:15","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"7839:4:15","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"self","nameLocation":"7870:4:15","nodeType":"VariableDeclaration","scope":3542,"src":"7853:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3522,"nodeType":"UserDefinedTypeName","pathNode":{"id":3521,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"7853:8:15"},"referencedDeclaration":3514,"src":"7853:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"key","nameLocation":"7891:3:15","nodeType":"VariableDeclaration","scope":3542,"src":"7884:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3524,"name":"uint32","nodeType":"ElementaryTypeName","src":"7884:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"7912:5:15","nodeType":"VariableDeclaration","scope":3542,"src":"7904:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3526,"name":"uint224","nodeType":"ElementaryTypeName","src":"7904:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7843:80:15"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"7942:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3529,"name":"uint224","nodeType":"ElementaryTypeName","src":"7942:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"7951:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3531,"name":"uint224","nodeType":"ElementaryTypeName","src":"7951:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7941:18:15"},"scope":4342,"src":"7830:192:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3581,"nodeType":"Block","src":"8260:207:15","statements":[{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"len","nameLocation":"8278:3:15","nodeType":"VariableDeclaration","scope":3581,"src":"8270:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"8270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3558,"initialValue":{"expression":{"expression":{"id":3555,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8284:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8284:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8284:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8270:38:15"},{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"pos","nameLocation":"8326:3:15","nodeType":"VariableDeclaration","scope":3581,"src":"8318:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"8318:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[{"expression":{"id":3562,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8351:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8351:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3564,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"8370:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8375:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3566,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"8378:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3561,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3495,3911,4327],"referencedDeclaration":3911,"src":"8332:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8332:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8318:64:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"8399:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3570,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"8406:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8399:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3574,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8430:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8430:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3576,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"8449:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3573,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"8416:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8416:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"8416:44:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8399:61:15","trueExpression":{"hexValue":"30","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8412:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3552,"id":3580,"nodeType":"Return","src":"8392:68:15"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"8028:139:15","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8181:11:15","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"self","nameLocation":"8210:4:15","nodeType":"VariableDeclaration","scope":3582,"src":"8193:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3545,"nodeType":"UserDefinedTypeName","pathNode":{"id":3544,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"8193:8:15"},"referencedDeclaration":3514,"src":"8193:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"key","nameLocation":"8223:3:15","nodeType":"VariableDeclaration","scope":3582,"src":"8216:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3547,"name":"uint32","nodeType":"ElementaryTypeName","src":"8216:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8192:35:15"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"8251:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3550,"name":"uint224","nodeType":"ElementaryTypeName","src":"8251:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8250:9:15"},"scope":4342,"src":"8172:295:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"8682:209:15","statements":[{"assignments":[3594],"declarations":[{"constant":false,"id":3594,"mutability":"mutable","name":"len","nameLocation":"8700:3:15","nodeType":"VariableDeclaration","scope":3623,"src":"8692:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3598,"initialValue":{"expression":{"expression":{"id":3595,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8706:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8706:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8706:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8692:38:15"},{"assignments":[3600],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"pos","nameLocation":"8748:3:15","nodeType":"VariableDeclaration","scope":3623,"src":"8740:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"8740:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3608,"initialValue":{"arguments":[{"expression":{"id":3602,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8773:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8773:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3604,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"8792:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3606,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"8800:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3601,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3443,3859,4275],"referencedDeclaration":3859,"src":"8754:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8754:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8740:64:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"8821:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8821:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8850:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8850:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"8869:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8875:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3613,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"8836:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8836:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"8836:48:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8821:63:15","trueExpression":{"hexValue":"30","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8832:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3592,"id":3622,"nodeType":"Return","src":"8814:70:15"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"8473:116:15","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8603:11:15","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"self","nameLocation":"8632:4:15","nodeType":"VariableDeclaration","scope":3624,"src":"8615:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"8615:8:15"},"referencedDeclaration":3514,"src":"8615:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"key","nameLocation":"8645:3:15","nodeType":"VariableDeclaration","scope":3624,"src":"8638:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3587,"name":"uint32","nodeType":"ElementaryTypeName","src":"8638:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8614:35:15"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3624,"src":"8673:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3590,"name":"uint224","nodeType":"ElementaryTypeName","src":"8673:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8672:9:15"},"scope":4342,"src":"8594:297:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"9082:135:15","statements":[{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"pos","nameLocation":"9100:3:15","nodeType":"VariableDeclaration","scope":3653,"src":"9092:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"9092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3638,"initialValue":{"expression":{"expression":{"id":3635,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"9106:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9106:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9106:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9092:38:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9147:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9154:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9147:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3644,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"9176:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9176:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9195:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9195:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3643,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"9162:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"9162:48:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9147:63:15","trueExpression":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9158:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3632,"id":3652,"nodeType":"Return","src":"9140:70:15"}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"8897:109:15","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"9020:6:15","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"self","nameLocation":"9044:4:15","nodeType":"VariableDeclaration","scope":3654,"src":"9027:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3627,"nodeType":"UserDefinedTypeName","pathNode":{"id":3626,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"9027:8:15"},"referencedDeclaration":3514,"src":"9027:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9026:23:15"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3654,"src":"9073:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3630,"name":"uint224","nodeType":"ElementaryTypeName","src":"9073:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9072:9:15"},"scope":4342,"src":"9011:206:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3702,"nodeType":"Block","src":"9584:274:15","statements":[{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"pos","nameLocation":"9602:3:15","nodeType":"VariableDeclaration","scope":3702,"src":"9594:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3672,"initialValue":{"expression":{"expression":{"id":3669,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"9608:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9608:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9608:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9594:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"9646:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9653:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9646:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3700,"nodeType":"Block","src":"9707:145:15","statements":[{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"ckpt","nameLocation":"9742:4:15","nodeType":"VariableDeclaration","scope":3700,"src":"9721:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3683,"nodeType":"UserDefinedTypeName","pathNode":{"id":3682,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"9721:13:15"},"referencedDeclaration":3519,"src":"9721:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3692,"initialValue":{"arguments":[{"expression":{"id":3686,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"9763:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9763:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"9782:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3685,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"9749:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9749:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9721:69:15"},{"expression":{"components":[{"hexValue":"74727565","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9812:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3694,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"9818:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"9818:9:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3696,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"9829:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"9829:11:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9811:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3666,"id":3699,"nodeType":"Return","src":"9804:37:15"}]},"id":3701,"nodeType":"IfStatement","src":"9642:210:15","trueBody":{"id":3681,"nodeType":"Block","src":"9656:45:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9678:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9685:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9677:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3666,"id":3680,"nodeType":"Return","src":"9670:20:15"}]}}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"9223:168:15","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3703,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"9405:16:15","nodeType":"FunctionDefinition","parameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"self","nameLocation":"9439:4:15","nodeType":"VariableDeclaration","scope":3703,"src":"9422:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3657,"nodeType":"UserDefinedTypeName","pathNode":{"id":3656,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"9422:8:15"},"referencedDeclaration":3514,"src":"9422:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9421:23:15"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"exists","nameLocation":"9510:6:15","nodeType":"VariableDeclaration","scope":3703,"src":"9505:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3660,"name":"bool","nodeType":"ElementaryTypeName","src":"9505:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"_key","nameLocation":"9537:4:15","nodeType":"VariableDeclaration","scope":3703,"src":"9530:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3662,"name":"uint32","nodeType":"ElementaryTypeName","src":"9530:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"_value","nameLocation":"9563:6:15","nodeType":"VariableDeclaration","scope":3703,"src":"9555:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3664,"name":"uint224","nodeType":"ElementaryTypeName","src":"9555:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9491:88:15"},"scope":4342,"src":"9396:462:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"9997:48:15","statements":[{"expression":{"expression":{"expression":{"id":3712,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"10014:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10014:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10014:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3711,"id":3715,"nodeType":"Return","src":"10007:31:15"}]},"documentation":{"id":3704,"nodeType":"StructuredDocumentation","src":"9864:57:15","text":" @dev Returns the number of checkpoint."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9935:6:15","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"self","nameLocation":"9959:4:15","nodeType":"VariableDeclaration","scope":3717,"src":"9942:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3706,"nodeType":"UserDefinedTypeName","pathNode":{"id":3705,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"9942:8:15"},"referencedDeclaration":3514,"src":"9942:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3514_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9941:23:15"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"9988:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"9988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9987:9:15"},"scope":4342,"src":"9926:119:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"10360:720:15","statements":[{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"pos","nameLocation":"10378:3:15","nodeType":"VariableDeclaration","scope":3806,"src":"10370:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"10370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"expression":{"id":3735,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10384:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10384:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10370:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"10410:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10416:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10410:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3804,"nodeType":"Block","src":"10966:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3795,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"11011:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"11024:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3794,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10990:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"10990:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3791,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10980:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10980:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3519_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10980:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"ExpressionStatement","src":"10980:52:15"},{"expression":{"components":[{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11054:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"11057:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11053:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3732,"id":3803,"nodeType":"Return","src":"11046:17:15"}]},"id":3805,"nodeType":"IfStatement","src":"10406:668:15","trueBody":{"id":3790,"nodeType":"Block","src":"10419:541:15","statements":[{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"last","nameLocation":"10506:4:15","nodeType":"VariableDeclaration","scope":3790,"src":"10485:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3742,"nodeType":"UserDefinedTypeName","pathNode":{"id":3741,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"10485:13:15"},"referencedDeclaration":3519,"src":"10485:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3750,"initialValue":{"arguments":[{"id":3745,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10527:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"10533:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10539:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3744,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"10513:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10513:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10485:56:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3752,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"10616:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"10616:9:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3754,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"10629:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10616:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10634:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10608:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10608:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"ExpressionStatement","src":"10608:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3759,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"10724:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"10724:9:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3761,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"10737:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10724:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3783,"nodeType":"Block","src":"10824:85:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3778,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"10873:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"10886:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3777,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10852:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"10852:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3774,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10842:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10842:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3519_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10842:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"10842:52:15"}]},"id":3784,"nodeType":"IfStatement","src":"10720:189:15","trueBody":{"id":3773,"nodeType":"Block","src":"10742:76:15","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3764,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10774:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3765,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"10780:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10786:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3763,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"10760:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10760:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"10760:35:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"10798:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"10760:43:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3772,"nodeType":"ExpressionStatement","src":"10760:43:15"}]}},{"expression":{"components":[{"expression":{"id":3785,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"10930:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"10930:11:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"10943:5:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10929:20:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3732,"id":3789,"nodeType":"Return","src":"10922:27:15"}]}}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"10051:165:15","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"10230:7:15","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"self","nameLocation":"10271:4:15","nodeType":"VariableDeclaration","scope":3807,"src":"10247:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3720,"nodeType":"UserDefinedTypeName","pathNode":{"id":3719,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"10247:13:15"},"referencedDeclaration":3519,"src":"10247:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3721,"nodeType":"ArrayTypeName","src":"10247:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"key","nameLocation":"10292:3:15","nodeType":"VariableDeclaration","scope":3807,"src":"10285:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3723,"name":"uint32","nodeType":"ElementaryTypeName","src":"10285:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"value","nameLocation":"10313:5:15","nodeType":"VariableDeclaration","scope":3807,"src":"10305:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3725,"name":"uint224","nodeType":"ElementaryTypeName","src":"10305:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10237:87:15"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"10342:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3728,"name":"uint224","nodeType":"ElementaryTypeName","src":"10342:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"10351:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3730,"name":"uint224","nodeType":"ElementaryTypeName","src":"10351:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10341:18:15"},"scope":4342,"src":"10221:859:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3858,"nodeType":"Block","src":"11577:267:15","statements":[{"body":{"id":3854,"nodeType":"Block","src":"11606:211:15","statements":[{"assignments":[3827],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"mid","nameLocation":"11628:3:15","nodeType":"VariableDeclaration","scope":3854,"src":"11620:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3833,"initialValue":{"arguments":[{"id":3830,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11647:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3831,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"11652:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3828,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"11634:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"11634:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11634:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11620:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3835,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"11689:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":3836,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11695:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"11675:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11675:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"11675:29:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3839,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11707:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11675:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3852,"nodeType":"Block","src":"11761:46:15","statements":[{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11779:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11785:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11791:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11785:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11779:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"11779:13:15"}]},"id":3853,"nodeType":"IfStatement","src":"11671:136:15","trueBody":{"id":3845,"nodeType":"Block","src":"11712:43:15","statements":[{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"11730:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3842,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11737:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11730:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"11730:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11594:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3824,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"11600:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"WhileStatement","src":"11587:230:15"},{"expression":{"id":3856,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"11833:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3822,"id":3857,"nodeType":"Return","src":"11826:11:15"}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"11086:320:15","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"11420:18:15","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"self","nameLocation":"11472:4:15","nodeType":"VariableDeclaration","scope":3859,"src":"11448:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3810,"nodeType":"UserDefinedTypeName","pathNode":{"id":3809,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"11448:13:15"},"referencedDeclaration":3519,"src":"11448:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3811,"nodeType":"ArrayTypeName","src":"11448:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"key","nameLocation":"11493:3:15","nodeType":"VariableDeclaration","scope":3859,"src":"11486:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3813,"name":"uint32","nodeType":"ElementaryTypeName","src":"11486:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"low","nameLocation":"11514:3:15","nodeType":"VariableDeclaration","scope":3859,"src":"11506:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"11506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"high","nameLocation":"11535:4:15","nodeType":"VariableDeclaration","scope":3859,"src":"11527:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"11527:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11438:107:15"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3859,"src":"11568:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"11568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11567:9:15"},"scope":4342,"src":"11411:433:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3910,"nodeType":"Block","src":"12350:267:15","statements":[{"body":{"id":3906,"nodeType":"Block","src":"12379:211:15","statements":[{"assignments":[3879],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"mid","nameLocation":"12401:3:15","nodeType":"VariableDeclaration","scope":3906,"src":"12393:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"12393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3885,"initialValue":{"arguments":[{"id":3882,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"12420:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3883,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12425:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3880,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"12407:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"12407:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12407:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12393:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3887,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"12462:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":3888,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"12468:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3886,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":3925,"src":"12448:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3519_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12448:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3516,"src":"12448:29:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3891,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"12480:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12448:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3904,"nodeType":"Block","src":"12537:43:15","statements":[{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3900,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12555:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3901,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"12562:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12555:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"12555:10:15"}]},"id":3905,"nodeType":"IfStatement","src":"12444:136:15","trueBody":{"id":3899,"nodeType":"Block","src":"12485:46:15","statements":[{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"12503:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"12509:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12515:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12509:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12503:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"12503:13:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"12367:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3876,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12373:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12367:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3907,"nodeType":"WhileStatement","src":"12360:230:15"},{"expression":{"id":3908,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12606:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3874,"id":3909,"nodeType":"Return","src":"12599:11:15"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"11850:329:15","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3911,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"12193:18:15","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"self","nameLocation":"12245:4:15","nodeType":"VariableDeclaration","scope":3911,"src":"12221:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3862,"nodeType":"UserDefinedTypeName","pathNode":{"id":3861,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"12221:13:15"},"referencedDeclaration":3519,"src":"12221:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3863,"nodeType":"ArrayTypeName","src":"12221:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"key","nameLocation":"12266:3:15","nodeType":"VariableDeclaration","scope":3911,"src":"12259:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3865,"name":"uint32","nodeType":"ElementaryTypeName","src":"12259:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"low","nameLocation":"12287:3:15","nodeType":"VariableDeclaration","scope":3911,"src":"12279:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"high","nameLocation":"12308:4:15","nodeType":"VariableDeclaration","scope":3911,"src":"12300:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"12300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12211:107:15"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"12341:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"12341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12340:9:15"},"scope":4342,"src":"12184:433:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3924,"nodeType":"Block","src":"12769:125:15","statements":[{"AST":{"nodeType":"YulBlock","src":"12788:100:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12809:1:15","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"12812:9:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12802:6:15"},"nodeType":"YulFunctionCall","src":"12802:20:15"},"nodeType":"YulExpressionStatement","src":"12802:20:15"},{"nodeType":"YulAssignment","src":"12835:43:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12864:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12867:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12854:9:15"},"nodeType":"YulFunctionCall","src":"12854:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12874:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12850:3:15"},"nodeType":"YulFunctionCall","src":"12850:28:15"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"12835:11:15"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3917,"isOffset":false,"isSlot":false,"src":"12874:3:15","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":true,"src":"12835:11:15","suffix":"slot","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":true,"src":"12812:9:15","suffix":"slot","valueSize":1}],"id":3923,"nodeType":"InlineAssembly","src":"12779:109:15"}]},"id":3925,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"12632:13:15","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"self","nameLocation":"12670:4:15","nodeType":"VariableDeclaration","scope":3925,"src":"12646:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3913,"nodeType":"UserDefinedTypeName","pathNode":{"id":3912,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"12646:13:15"},"referencedDeclaration":3519,"src":"12646:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3914,"nodeType":"ArrayTypeName","src":"12646:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3519_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"pos","nameLocation":"12684:3:15","nodeType":"VariableDeclaration","scope":3925,"src":"12676:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"12676:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12645:43:15"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"result","nameLocation":"12757:6:15","nodeType":"VariableDeclaration","scope":3925,"src":"12735:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3920,"nodeType":"UserDefinedTypeName","pathNode":{"id":3919,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"12735:13:15"},"referencedDeclaration":3519,"src":"12735:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3519_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"12734:30:15"},"scope":4342,"src":"12623:271:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":3930,"members":[{"constant":false,"id":3929,"mutability":"mutable","name":"_checkpoints","nameLocation":"12942:12:15","nodeType":"VariableDeclaration","scope":3930,"src":"12926:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"12926:13:15"},"referencedDeclaration":3935,"src":"12926:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":3928,"nodeType":"ArrayTypeName","src":"12926:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"12907:8:15","nodeType":"StructDefinition","scope":4342,"src":"12900:61:15","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":3935,"members":[{"constant":false,"id":3932,"mutability":"mutable","name":"_key","nameLocation":"13005:4:15","nodeType":"VariableDeclaration","scope":3935,"src":"12998:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3931,"name":"uint96","nodeType":"ElementaryTypeName","src":"12998:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"_value","nameLocation":"13027:6:15","nodeType":"VariableDeclaration","scope":3935,"src":"13019:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3933,"name":"uint160","nodeType":"ElementaryTypeName","src":"13019:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"12974:13:15","nodeType":"StructDefinition","scope":4342,"src":"12967:73:15","visibility":"public"},{"body":{"id":3957,"nodeType":"Block","src":"13343:62:15","statements":[{"expression":{"arguments":[{"expression":{"id":3951,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13368:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"13368:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3953,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"13387:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"13392:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3950,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3391,3807,4223],"referencedDeclaration":4223,"src":"13360:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13360:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":3949,"id":3956,"nodeType":"Return","src":"13353:45:15"}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"13046:162:15","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"13222:4:15","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"self","nameLocation":"13253:4:15","nodeType":"VariableDeclaration","scope":3958,"src":"13236:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"13236:8:15"},"referencedDeclaration":3930,"src":"13236:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"key","nameLocation":"13274:3:15","nodeType":"VariableDeclaration","scope":3958,"src":"13267:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3940,"name":"uint96","nodeType":"ElementaryTypeName","src":"13267:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"value","nameLocation":"13295:5:15","nodeType":"VariableDeclaration","scope":3958,"src":"13287:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3942,"name":"uint160","nodeType":"ElementaryTypeName","src":"13287:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13226:80:15"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"13325:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3945,"name":"uint160","nodeType":"ElementaryTypeName","src":"13325:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"13334:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3947,"name":"uint160","nodeType":"ElementaryTypeName","src":"13334:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13324:18:15"},"scope":4342,"src":"13213:192:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"13643:207:15","statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"len","nameLocation":"13661:3:15","nodeType":"VariableDeclaration","scope":3997,"src":"13653:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3974,"initialValue":{"expression":{"expression":{"id":3971,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"13667:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"13667:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13667:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13653:38:15"},{"assignments":[3976],"declarations":[{"constant":false,"id":3976,"mutability":"mutable","name":"pos","nameLocation":"13709:3:15","nodeType":"VariableDeclaration","scope":3997,"src":"13701:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"13701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3984,"initialValue":{"arguments":[{"expression":{"id":3978,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"13734:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"13734:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3980,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"13753:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3982,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13761:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3977,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3495,3911,4327],"referencedDeclaration":4327,"src":"13715:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13715:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13701:64:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"13782:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3986,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13789:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13782:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3990,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"13813:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"13813:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3992,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"13832:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3989,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"13799:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13799:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":3994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"13799:44:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13782:61:15","trueExpression":{"hexValue":"30","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13795:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3968,"id":3996,"nodeType":"Return","src":"13775:68:15"}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"13411:139:15","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"13564:11:15","nodeType":"FunctionDefinition","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"self","nameLocation":"13593:4:15","nodeType":"VariableDeclaration","scope":3998,"src":"13576:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3961,"nodeType":"UserDefinedTypeName","pathNode":{"id":3960,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"13576:8:15"},"referencedDeclaration":3930,"src":"13576:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"key","nameLocation":"13606:3:15","nodeType":"VariableDeclaration","scope":3998,"src":"13599:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3963,"name":"uint96","nodeType":"ElementaryTypeName","src":"13599:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13575:35:15"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"13634:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3966,"name":"uint160","nodeType":"ElementaryTypeName","src":"13634:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13633:9:15"},"scope":4342,"src":"13555:295:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"14065:209:15","statements":[{"assignments":[4010],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"len","nameLocation":"14083:3:15","nodeType":"VariableDeclaration","scope":4039,"src":"14075:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14075:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4014,"initialValue":{"expression":{"expression":{"id":4011,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14089:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14089:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14089:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14075:38:15"},{"assignments":[4016],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"pos","nameLocation":"14131:3:15","nodeType":"VariableDeclaration","scope":4039,"src":"14123:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"14123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4024,"initialValue":{"arguments":[{"expression":{"id":4018,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14156:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14156:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4020,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14175:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4022,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"14183:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4017,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3443,3859,4275],"referencedDeclaration":4275,"src":"14137:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14137:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14123:64:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"14204:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14211:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14204:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4030,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14233:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14233:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"14252:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14252:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"14219:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14219:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"14219:48:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14204:63:15","trueExpression":{"hexValue":"30","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4008,"id":4038,"nodeType":"Return","src":"14197:70:15"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"13856:116:15","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"13986:11:15","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"self","nameLocation":"14015:4:15","nodeType":"VariableDeclaration","scope":4040,"src":"13998:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4001,"nodeType":"UserDefinedTypeName","pathNode":{"id":4000,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"13998:8:15"},"referencedDeclaration":3930,"src":"13998:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"key","nameLocation":"14028:3:15","nodeType":"VariableDeclaration","scope":4040,"src":"14021:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4003,"name":"uint96","nodeType":"ElementaryTypeName","src":"14021:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13997:35:15"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"14056:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4006,"name":"uint160","nodeType":"ElementaryTypeName","src":"14056:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14055:9:15"},"scope":4342,"src":"13977:297:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4069,"nodeType":"Block","src":"14465:135:15","statements":[{"assignments":[4050],"declarations":[{"constant":false,"id":4050,"mutability":"mutable","name":"pos","nameLocation":"14483:3:15","nodeType":"VariableDeclaration","scope":4069,"src":"14475:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"14475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4054,"initialValue":{"expression":{"expression":{"id":4051,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"14489:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14489:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14489:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14475:38:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"14530:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14537:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14530:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4060,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"14559:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14559:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"14578:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14584:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"14545:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14545:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"14545:48:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14530:63:15","trueExpression":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4048,"id":4068,"nodeType":"Return","src":"14523:70:15"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"14280:109:15","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"14403:6:15","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"self","nameLocation":"14427:4:15","nodeType":"VariableDeclaration","scope":4070,"src":"14410:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4043,"nodeType":"UserDefinedTypeName","pathNode":{"id":4042,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"14410:8:15"},"referencedDeclaration":3930,"src":"14410:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"14409:23:15"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"14456:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4046,"name":"uint160","nodeType":"ElementaryTypeName","src":"14456:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14455:9:15"},"scope":4342,"src":"14394:206:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4118,"nodeType":"Block","src":"14967:274:15","statements":[{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"pos","nameLocation":"14985:3:15","nodeType":"VariableDeclaration","scope":4118,"src":"14977:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"14977:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4088,"initialValue":{"expression":{"expression":{"id":4085,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"14991:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"14991:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14991:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14977:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"15029:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15036:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15029:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4116,"nodeType":"Block","src":"15090:145:15","statements":[{"assignments":[4100],"declarations":[{"constant":false,"id":4100,"mutability":"mutable","name":"ckpt","nameLocation":"15125:4:15","nodeType":"VariableDeclaration","scope":4116,"src":"15104:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4099,"nodeType":"UserDefinedTypeName","pathNode":{"id":4098,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"15104:13:15"},"referencedDeclaration":3935,"src":"15104:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4108,"initialValue":{"arguments":[{"expression":{"id":4102,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"15146:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"15146:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"15165:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15171:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15165:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4101,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"15132:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15132:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"15104:69:15"},{"expression":{"components":[{"hexValue":"74727565","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15195:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4110,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"15201:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"15201:9:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":4112,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"15212:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"15212:11:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15194:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":4082,"id":4115,"nodeType":"Return","src":"15187:37:15"}]},"id":4117,"nodeType":"IfStatement","src":"15025:210:15","trueBody":{"id":4097,"nodeType":"Block","src":"15039:45:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15061:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15068:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15071:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15060:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":4082,"id":4096,"nodeType":"Return","src":"15053:20:15"}]}}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"14606:168:15","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"14788:16:15","nodeType":"FunctionDefinition","parameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"self","nameLocation":"14822:4:15","nodeType":"VariableDeclaration","scope":4119,"src":"14805:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4073,"nodeType":"UserDefinedTypeName","pathNode":{"id":4072,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"14805:8:15"},"referencedDeclaration":3930,"src":"14805:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"14804:23:15"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"exists","nameLocation":"14893:6:15","nodeType":"VariableDeclaration","scope":4119,"src":"14888:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4076,"name":"bool","nodeType":"ElementaryTypeName","src":"14888:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"_key","nameLocation":"14920:4:15","nodeType":"VariableDeclaration","scope":4119,"src":"14913:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4078,"name":"uint96","nodeType":"ElementaryTypeName","src":"14913:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"_value","nameLocation":"14946:6:15","nodeType":"VariableDeclaration","scope":4119,"src":"14938:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4080,"name":"uint160","nodeType":"ElementaryTypeName","src":"14938:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14874:88:15"},"scope":4342,"src":"14779:462:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4132,"nodeType":"Block","src":"15380:48:15","statements":[{"expression":{"expression":{"expression":{"id":4128,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"15397:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"15397:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15397:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4127,"id":4131,"nodeType":"Return","src":"15390:31:15"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"15247:57:15","text":" @dev Returns the number of checkpoint."},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"15318:6:15","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"self","nameLocation":"15342:4:15","nodeType":"VariableDeclaration","scope":4133,"src":"15325:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4122,"nodeType":"UserDefinedTypeName","pathNode":{"id":4121,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"15325:8:15"},"referencedDeclaration":3930,"src":"15325:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3930_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"15324:23:15"},"returnParameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"15371:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"15371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15370:9:15"},"scope":4342,"src":"15309:119:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4222,"nodeType":"Block","src":"15743:720:15","statements":[{"assignments":[4150],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"pos","nameLocation":"15761:3:15","nodeType":"VariableDeclaration","scope":4222,"src":"15753:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"15753:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4153,"initialValue":{"expression":{"id":4151,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"15767:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15767:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15753:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"15793:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15799:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15793:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4220,"nodeType":"Block","src":"16349:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":4211,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"16394:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"16407:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4210,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"16373:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"16373:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4207,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"16363:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"16363:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$3935_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16363:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4215,"nodeType":"ExpressionStatement","src":"16363:52:15"},{"expression":{"components":[{"hexValue":"30","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"16440:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16436:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":4148,"id":4219,"nodeType":"Return","src":"16429:17:15"}]},"id":4221,"nodeType":"IfStatement","src":"15789:668:15","trueBody":{"id":4206,"nodeType":"Block","src":"15802:541:15","statements":[{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"last","nameLocation":"15889:4:15","nodeType":"VariableDeclaration","scope":4206,"src":"15868:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4158,"nodeType":"UserDefinedTypeName","pathNode":{"id":4157,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"15868:13:15"},"referencedDeclaration":3935,"src":"15868:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4166,"initialValue":{"arguments":[{"id":4161,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"15910:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"15916:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15922:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4160,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"15896:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15896:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"15868:56:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4168,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"15999:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"15999:9:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4170,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"16012:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"15999:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16017:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":4167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15991:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15991:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4174,"nodeType":"ExpressionStatement","src":"15991:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4175,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"16107:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"16107:9:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4177,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"16120:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16107:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4199,"nodeType":"Block","src":"16207:85:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":4194,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"16256:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"16269:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4193,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"16235:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"16235:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4190,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"16225:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"16225:9:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$3935_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16225:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4198,"nodeType":"ExpressionStatement","src":"16225:52:15"}]},"id":4200,"nodeType":"IfStatement","src":"16103:189:15","trueBody":{"id":4189,"nodeType":"Block","src":"16125:76:15","statements":[{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4180,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"16157:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"16163:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16169:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16163:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"16143:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16143:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"16143:35:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"16181:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"16143:43:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4188,"nodeType":"ExpressionStatement","src":"16143:43:15"}]}},{"expression":{"components":[{"expression":{"id":4201,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"16313:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"16313:11:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"16326:5:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16312:20:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":4148,"id":4205,"nodeType":"Return","src":"16305:27:15"}]}}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"15434:165:15","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4223,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"15613:7:15","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"self","nameLocation":"15654:4:15","nodeType":"VariableDeclaration","scope":4223,"src":"15630:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4136,"nodeType":"UserDefinedTypeName","pathNode":{"id":4135,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"15630:13:15"},"referencedDeclaration":3935,"src":"15630:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4137,"nodeType":"ArrayTypeName","src":"15630:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"key","nameLocation":"15675:3:15","nodeType":"VariableDeclaration","scope":4223,"src":"15668:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4139,"name":"uint96","nodeType":"ElementaryTypeName","src":"15668:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"value","nameLocation":"15696:5:15","nodeType":"VariableDeclaration","scope":4223,"src":"15688:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4141,"name":"uint160","nodeType":"ElementaryTypeName","src":"15688:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15620:87:15"},"returnParameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4223,"src":"15725:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4144,"name":"uint160","nodeType":"ElementaryTypeName","src":"15725:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4223,"src":"15734:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4146,"name":"uint160","nodeType":"ElementaryTypeName","src":"15734:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15724:18:15"},"scope":4342,"src":"15604:859:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4274,"nodeType":"Block","src":"16960:267:15","statements":[{"body":{"id":4270,"nodeType":"Block","src":"16989:211:15","statements":[{"assignments":[4243],"declarations":[{"constant":false,"id":4243,"mutability":"mutable","name":"mid","nameLocation":"17011:3:15","nodeType":"VariableDeclaration","scope":4270,"src":"17003:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"17003:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4249,"initialValue":{"arguments":[{"id":4246,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"17030:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4247,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"17035:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4244,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"17017:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"17017:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17017:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17003:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4251,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"17072:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4252,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"17078:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4250,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"17058:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17058:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"17058:29:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4255,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"17090:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"17058:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4268,"nodeType":"Block","src":"17144:46:15","statements":[{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"17162:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"17168:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17174:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17162:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"17162:13:15"}]},"id":4269,"nodeType":"IfStatement","src":"17054:136:15","trueBody":{"id":4261,"nodeType":"Block","src":"17095:43:15","statements":[{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"17113:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4258,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"17120:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17113:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"17113:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"16977:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4240,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"16983:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16977:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4271,"nodeType":"WhileStatement","src":"16970:230:15"},{"expression":{"id":4272,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"17216:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4273,"nodeType":"Return","src":"17209:11:15"}]},"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"16469:320:15","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"16803:18:15","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"self","nameLocation":"16855:4:15","nodeType":"VariableDeclaration","scope":4275,"src":"16831:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4226,"nodeType":"UserDefinedTypeName","pathNode":{"id":4225,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"16831:13:15"},"referencedDeclaration":3935,"src":"16831:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4227,"nodeType":"ArrayTypeName","src":"16831:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"key","nameLocation":"16876:3:15","nodeType":"VariableDeclaration","scope":4275,"src":"16869:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4229,"name":"uint96","nodeType":"ElementaryTypeName","src":"16869:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"low","nameLocation":"16897:3:15","nodeType":"VariableDeclaration","scope":4275,"src":"16889:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"16889:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"high","nameLocation":"16918:4:15","nodeType":"VariableDeclaration","scope":4275,"src":"16910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16821:107:15"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"16951:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"16951:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16950:9:15"},"scope":4342,"src":"16794:433:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4326,"nodeType":"Block","src":"17733:267:15","statements":[{"body":{"id":4322,"nodeType":"Block","src":"17762:211:15","statements":[{"assignments":[4295],"declarations":[{"constant":false,"id":4295,"mutability":"mutable","name":"mid","nameLocation":"17784:3:15","nodeType":"VariableDeclaration","scope":4322,"src":"17776:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"17776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4301,"initialValue":{"arguments":[{"id":4298,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17803:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4299,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"17808:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4296,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"17790:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"17790:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17790:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17776:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4303,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"17845:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4304,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"17851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4302,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3509,3925,4341],"referencedDeclaration":4341,"src":"17831:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3935_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17831:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"17831:29:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4307,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"17863:3:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"17831:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4320,"nodeType":"Block","src":"17920:43:15","statements":[{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"17938:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4317,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"17945:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17938:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"17938:10:15"}]},"id":4321,"nodeType":"IfStatement","src":"17827:136:15","trueBody":{"id":4315,"nodeType":"Block","src":"17868:46:15","statements":[{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17886:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"17892:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17898:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17886:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4314,"nodeType":"ExpressionStatement","src":"17886:13:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17750:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4292,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"17756:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17750:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4323,"nodeType":"WhileStatement","src":"17743:230:15"},{"expression":{"id":4324,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"17989:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4290,"id":4325,"nodeType":"Return","src":"17982:11:15"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"17233:329:15","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"17576:18:15","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"self","nameLocation":"17628:4:15","nodeType":"VariableDeclaration","scope":4327,"src":"17604:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4278,"nodeType":"UserDefinedTypeName","pathNode":{"id":4277,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"17604:13:15"},"referencedDeclaration":3935,"src":"17604:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4279,"nodeType":"ArrayTypeName","src":"17604:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"key","nameLocation":"17649:3:15","nodeType":"VariableDeclaration","scope":4327,"src":"17642:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4281,"name":"uint96","nodeType":"ElementaryTypeName","src":"17642:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"low","nameLocation":"17670:3:15","nodeType":"VariableDeclaration","scope":4327,"src":"17662:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"17662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"high","nameLocation":"17691:4:15","nodeType":"VariableDeclaration","scope":4327,"src":"17683:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"17683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17594:107:15"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"17724:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"17724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17723:9:15"},"scope":4342,"src":"17567:433:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4340,"nodeType":"Block","src":"18152:125:15","statements":[{"AST":{"nodeType":"YulBlock","src":"18171:100:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18192:1:15","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"18195:9:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18185:6:15"},"nodeType":"YulFunctionCall","src":"18185:20:15"},"nodeType":"YulExpressionStatement","src":"18185:20:15"},{"nodeType":"YulAssignment","src":"18218:43:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18247:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18250:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18237:9:15"},"nodeType":"YulFunctionCall","src":"18237:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"18257:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18233:3:15"},"nodeType":"YulFunctionCall","src":"18233:28:15"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"18218:11:15"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4333,"isOffset":false,"isSlot":false,"src":"18257:3:15","valueSize":1},{"declaration":4337,"isOffset":false,"isSlot":true,"src":"18218:11:15","suffix":"slot","valueSize":1},{"declaration":4331,"isOffset":false,"isSlot":true,"src":"18195:9:15","suffix":"slot","valueSize":1}],"id":4339,"nodeType":"InlineAssembly","src":"18162:109:15"}]},"id":4341,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"18015:13:15","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"self","nameLocation":"18053:4:15","nodeType":"VariableDeclaration","scope":4341,"src":"18029:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4329,"nodeType":"UserDefinedTypeName","pathNode":{"id":4328,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"18029:13:15"},"referencedDeclaration":3935,"src":"18029:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4330,"nodeType":"ArrayTypeName","src":"18029:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3935_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"pos","nameLocation":"18067:3:15","nodeType":"VariableDeclaration","scope":4341,"src":"18059:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"18059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18028:43:15"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"result","nameLocation":"18140:6:15","nodeType":"VariableDeclaration","scope":4341,"src":"18118:28:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4336,"nodeType":"UserDefinedTypeName","pathNode":{"id":4335,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"18118:13:15"},"referencedDeclaration":3935,"src":"18118:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3935_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18117:30:15"},"scope":4342,"src":"18006:271:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4343,"src":"708:17571:15","usedErrors":[]}],"src":"193:18087:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4364]},"id":4365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4344,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"111:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4364,"linearizedBaseContracts":[4364],"name":"Context","nameLocation":"626:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":4353,"nodeType":"Block","src":"702:34:16","statements":[{"expression":{"expression":{"id":4350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4349,"id":4352,"nodeType":"Return","src":"712:17:16"}]},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:16","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[],"src":"659:2:16"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"693:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4347,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:16"},"scope":4364,"src":"640:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"809:32:16","statements":[{"expression":{"expression":{"id":4359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4358,"id":4361,"nodeType":"Return","src":"819:15:16"}]},"id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:16","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[],"src":"759:2:16"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"793:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4356,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:16"},"scope":4364,"src":"742:99:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4365,"src":"608:235:16","usedErrors":[]}],"src":"86:758:16"},"id":16},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[4438]},"id":4439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4366,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4367,"nodeType":"StructuredDocumentation","src":"112:311:17","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":4438,"linearizedBaseContracts":[4438],"name":"Counters","nameLocation":"432:8:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":4370,"members":[{"constant":false,"id":4369,"mutability":"mutable","name":"_value","nameLocation":"794:6:17","nodeType":"VariableDeclaration","scope":4370,"src":"786:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:17","nodeType":"StructDefinition","scope":4438,"src":"447:374:17","visibility":"public"},{"body":{"id":4381,"nodeType":"Block","src":"901:38:17","statements":[{"expression":{"expression":{"id":4378,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"918:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"918:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4377,"id":4380,"nodeType":"Return","src":"911:21:17"}]},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:17","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"counter","nameLocation":"860:7:17","nodeType":"VariableDeclaration","scope":4382,"src":"844:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4372,"nodeType":"UserDefinedTypeName","pathNode":{"id":4371,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"844:7:17"},"referencedDeclaration":4370,"src":"844:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:17"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"892:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:17"},"scope":4438,"src":"827:112:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4395,"nodeType":"Block","src":"998:70:17","statements":[{"id":4394,"nodeType":"UncheckedBlock","src":"1008:54:17","statements":[{"expression":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4388,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"1032:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"1032:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4393,"nodeType":"ExpressionStatement","src":"1032:19:17"}]}]},"id":4396,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:17","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"counter","nameLocation":"980:7:17","nodeType":"VariableDeclaration","scope":4396,"src":"964:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4384,"nodeType":"UserDefinedTypeName","pathNode":{"id":4383,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"964:7:17"},"referencedDeclaration":4370,"src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:17"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[],"src":"998:0:17"},"scope":4438,"src":"945:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4423,"nodeType":"Block","src":"1127:176:17","statements":[{"assignments":[4403],"declarations":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"1145:5:17","nodeType":"VariableDeclaration","scope":4423,"src":"1137:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4406,"initialValue":{"expression":{"id":4404,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"1153:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"1153:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"1185:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":4407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4413,"nodeType":"ExpressionStatement","src":"1177:49:17"},{"id":4422,"nodeType":"UncheckedBlock","src":"1236:61:17","statements":[{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4414,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"1260:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"1260:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"1277:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"nodeType":"ExpressionStatement","src":"1260:26:17"}]}]},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:17","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"counter","nameLocation":"1109:7:17","nodeType":"VariableDeclaration","scope":4424,"src":"1093:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4398,"nodeType":"UserDefinedTypeName","pathNode":{"id":4397,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"1093:7:17"},"referencedDeclaration":4370,"src":"1093:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:17"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[],"src":"1127:0:17"},"scope":4438,"src":"1074:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"1358:35:17","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4430,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"1368:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"1368:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"1368:18:17"}]},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:17","nodeType":"FunctionDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"counter","nameLocation":"1340:7:17","nodeType":"VariableDeclaration","scope":4437,"src":"1324:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4426,"nodeType":"UserDefinedTypeName","pathNode":{"id":4425,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"1324:7:17"},"referencedDeclaration":4370,"src":"1324:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:17"},"returnParameters":{"id":4429,"nodeType":"ParameterList","parameters":[],"src":"1358:0:17"},"scope":4438,"src":"1309:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4439,"src":"424:971:17","usedErrors":[]}],"src":"87:1309:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6029],"Strings":[4613]},"id":4614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4440,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4614,"sourceUnit":6030,"src":"126:25:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"153:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":4613,"linearizedBaseContracts":[4613],"name":"Strings","nameLocation":"196:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4445,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:18","nodeType":"VariableDeclaration","scope":4613,"src":"210:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4443,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4448,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:18","nodeType":"VariableDeclaration","scope":4613,"src":"270:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4446,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":4495,"nodeType":"Block","src":"486:625:18","statements":[{"id":4494,"nodeType":"UncheckedBlock","src":"496:609:18","statements":[{"assignments":[4457],"declarations":[{"constant":false,"id":4457,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":4494,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"548:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4458,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"537:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5866,"src":"537:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:18"},{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"buffer","nameLocation":"586:6:18","nodeType":"VariableDeclaration","scope":4494,"src":"572:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4465,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"id":4469,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"606:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4467,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:18"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"ptr","nameLocation":"635:3:18","nodeType":"VariableDeclaration","scope":4494,"src":"627:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4474,"nodeType":"VariableDeclarationStatement","src":"627:11:18"},{"AST":{"nodeType":"YulBlock","src":"708:67:18","statements":[{"nodeType":"YulAssignment","src":"726:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:18"},"nodeType":"YulFunctionCall","src":"745:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:18"},"nodeType":"YulFunctionCall","src":"733:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":4466,"isOffset":false,"isSlot":false,"src":"737:6:18","valueSize":1},{"declaration":4457,"isOffset":false,"isSlot":false,"src":"753:6:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"726:3:18","valueSize":1}],"id":4475,"nodeType":"InlineAssembly","src":"699:76:18"},{"body":{"id":4490,"nodeType":"Block","src":"801:267:18","statements":[{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:18","subExpression":{"id":4477,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"819:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ExpressionStatement","src":"819:5:18"},{"AST":{"nodeType":"YulBlock","src":"902:84:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:18"},"nodeType":"YulFunctionCall","src":"942:14:18"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:18"},"nodeType":"YulFunctionCall","src":"937:30:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:18"},"nodeType":"YulFunctionCall","src":"924:44:18"},"nodeType":"YulExpressionStatement","src":"924:44:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":4445,"isOffset":false,"isSlot":false,"src":"958:8:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"932:3:18","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"946:5:18","valueSize":1}],"id":4480,"nodeType":"InlineAssembly","src":"893:93:18"},{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"1003:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"1003:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"1036:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"nodeType":"IfStatement","src":"1032:21:18","trueBody":{"id":4488,"nodeType":"Break","src":"1048:5:18"}}]},"condition":{"hexValue":"74727565","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4491,"nodeType":"WhileStatement","src":"788:280:18"},{"expression":{"id":4492,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1088:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4455,"id":4493,"nodeType":"Return","src":"1081:13:18"}]}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"320:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4496,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:18","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"value","nameLocation":"441:5:18","nodeType":"VariableDeclaration","scope":4496,"src":"433:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:18"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4496,"src":"471:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4453,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:18"},"scope":4613,"src":"415:696:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4515,"nodeType":"Block","src":"1290:100:18","statements":[{"id":4514,"nodeType":"UncheckedBlock","src":"1300:84:18","statements":[{"expression":{"arguments":[{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"1343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"1362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4506,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"1350:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6029_$","typeString":"type(library Math)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5989,"src":"1350:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4516,4592,4612],"referencedDeclaration":4592,"src":"1331:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4503,"id":4513,"nodeType":"Return","src":"1324:49:18"}]}]},"documentation":{"id":4497,"nodeType":"StructuredDocumentation","src":"1117:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4516,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:18","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"value","nameLocation":"1245:5:18","nodeType":"VariableDeclaration","scope":4516,"src":"1237:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:18"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"1275:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4501,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:18"},"scope":4613,"src":"1216:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"1603:347:18","statements":[{"assignments":[4527],"declarations":[{"constant":false,"id":4527,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:18","nodeType":"VariableDeclaration","scope":4591,"src":"1613:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4536,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4531,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1649:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:18"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4537,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"1670:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4539,"indexExpression":{"hexValue":"30","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4542,"nodeType":"ExpressionStatement","src":"1670:15:18"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"1695:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4545,"indexExpression":{"hexValue":"31","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4548,"nodeType":"ExpressionStatement","src":"1695:15:18"},{"body":{"id":4577,"nodeType":"Block","src":"1765:83:18","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4563,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"1779:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4565,"indexExpression":{"id":4564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"1786:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4566,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1791:8:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4570,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1800:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4572,"nodeType":"ExpressionStatement","src":"1779:33:18"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1826:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"1826:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"1753:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"initializationExpression":{"assignments":[4550],"declarations":[{"constant":false,"id":4550,"mutability":"mutable","name":"i","nameLocation":"1733:1:18","nodeType":"VariableDeclaration","scope":4578,"src":"1725:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4556,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4552,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1741:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:18"},"loopExpression":{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:18","subExpression":{"id":4560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"1762:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"1760:3:18"},"nodeType":"ForStatement","src":"1720:128:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"1857:55:18"},{"expression":{"arguments":[{"id":4588,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"1936:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4586,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:18","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4525,"id":4590,"nodeType":"Return","src":"1922:21:18"}]},"documentation":{"id":4517,"nodeType":"StructuredDocumentation","src":"1396:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:18","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"value","nameLocation":"1542:5:18","nodeType":"VariableDeclaration","scope":4592,"src":"1534:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"length","nameLocation":"1557:6:18","nodeType":"VariableDeclaration","scope":4592,"src":"1549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:18"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4592,"src":"1588:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4523,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:18"},"scope":4613,"src":"1513:437:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"2175:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4605,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"2220:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4603,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:18","typeDescriptions":{}}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:18","typeDescriptions":{}}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4608,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"2228:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4600,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4516,4592,4612],"referencedDeclaration":4592,"src":"2192:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4599,"id":4610,"nodeType":"Return","src":"2185:59:18"}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"1956:141:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:18","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"addr","nameLocation":"2131:4:18","nodeType":"VariableDeclaration","scope":4612,"src":"2123:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4594,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:18"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"2160:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4597,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:18"},"scope":4613,"src":"2102:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4614,"src":"188:2065:18","usedErrors":[]}],"src":"101:2153:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4974],"Math":[6029],"Strings":[4613]},"id":4975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4615,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4975,"sourceUnit":4614,"src":"137:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4617,"nodeType":"StructuredDocumentation","src":"163:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4974,"linearizedBaseContracts":[4974],"name":"ECDSA","nameLocation":"377:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4623,"members":[{"id":4618,"name":"NoError","nameLocation":"417:7:19","nodeType":"EnumValue","src":"417:7:19"},{"id":4619,"name":"InvalidSignature","nameLocation":"434:16:19","nodeType":"EnumValue","src":"434:16:19"},{"id":4620,"name":"InvalidSignatureLength","nameLocation":"460:22:19","nodeType":"EnumValue","src":"460:22:19"},{"id":4621,"name":"InvalidSignatureS","nameLocation":"492:17:19","nodeType":"EnumValue","src":"492:17:19"},{"id":4622,"name":"InvalidSignatureV","nameLocation":"519:17:19","nodeType":"EnumValue","src":"519:17:19"}],"name":"RecoverError","nameLocation":"394:12:19","nodeType":"EnumDefinition","src":"389:175:19"},{"body":{"id":4666,"nodeType":"Block","src":"624:457:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"638:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4630,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"647:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"647:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"734:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4636,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"743:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"743:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"843:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4645,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"852:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"852:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"965:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4654,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"974:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"974:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"961:114:19","trueBody":{"id":4661,"nodeType":"Block","src":"1006:69:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":4657,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"ExpressionStatement","src":"1020:44:19"}]}},"id":4663,"nodeType":"IfStatement","src":"839:236:19","trueBody":{"id":4652,"nodeType":"Block","src":"889:66:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":4648,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"ExpressionStatement","src":"903:41:19"}]}},"id":4664,"nodeType":"IfStatement","src":"730:345:19","trueBody":{"id":4643,"nodeType":"Block","src":"774:59:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":4639,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"ExpressionStatement","src":"788:34:19"}]}},"id":4665,"nodeType":"IfStatement","src":"634:441:19","trueBody":{"id":4634,"nodeType":"Block","src":"669:55:19","statements":[{"functionReturnParameters":4628,"id":4633,"nodeType":"Return","src":"683:7:19"}]}}]},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:19","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"error","nameLocation":"604:5:19","nodeType":"VariableDeclaration","scope":4667,"src":"591:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4625,"nodeType":"UserDefinedTypeName","pathNode":{"id":4624,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"591:12:19"},"referencedDeclaration":4623,"src":"591:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:19"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[],"src":"624:0:19"},"scope":4974,"src":"570:511:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4712,"nodeType":"Block","src":"2249:626:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4680,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"2263:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4710,"nodeType":"Block","src":"2788:81:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4702,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:19","typeDescriptions":{}}},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4706,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"2822:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"2822:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"id":4708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4679,"id":4709,"nodeType":"Return","src":"2802:56:19"}]},"id":4711,"nodeType":"IfStatement","src":"2259:610:19","trueBody":{"id":4701,"nodeType":"Block","src":"2287:495:19","statements":[{"assignments":[4685],"declarations":[{"constant":false,"id":4685,"mutability":"mutable","name":"r","nameLocation":"2309:1:19","nodeType":"VariableDeclaration","scope":4701,"src":"2301:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4686,"nodeType":"VariableDeclarationStatement","src":"2301:9:19"},{"assignments":[4688],"declarations":[{"constant":false,"id":4688,"mutability":"mutable","name":"s","nameLocation":"2332:1:19","nodeType":"VariableDeclaration","scope":4701,"src":"2324:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4689,"nodeType":"VariableDeclarationStatement","src":"2324:9:19"},{"assignments":[4691],"declarations":[{"constant":false,"id":4691,"mutability":"mutable","name":"v","nameLocation":"2353:1:19","nodeType":"VariableDeclaration","scope":4701,"src":"2347:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4690,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4692,"nodeType":"VariableDeclarationStatement","src":"2347:7:19"},{"AST":{"nodeType":"YulBlock","src":"2555:171:19","statements":[{"nodeType":"YulAssignment","src":"2573:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:19"},"nodeType":"YulFunctionCall","src":"2584:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:19"},"nodeType":"YulFunctionCall","src":"2578:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:19"}]},{"nodeType":"YulAssignment","src":"2622:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:19"},"nodeType":"YulFunctionCall","src":"2633:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:19"},"nodeType":"YulFunctionCall","src":"2627:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:19"}]},{"nodeType":"YulAssignment","src":"2671:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:19"},"nodeType":"YulFunctionCall","src":"2690:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:19"},"nodeType":"YulFunctionCall","src":"2684:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:19"},"nodeType":"YulFunctionCall","src":"2676:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":4685,"isOffset":false,"isSlot":false,"src":"2573:1:19","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"2622:1:19","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"2588:9:19","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"2637:9:19","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"2694:9:19","valueSize":1},{"declaration":4691,"isOffset":false,"isSlot":false,"src":"2671:1:19","valueSize":1}],"id":4693,"nodeType":"InlineAssembly","src":"2546:180:19"},{"expression":{"arguments":[{"id":4695,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"2757:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4696,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"2763:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4697,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"2766:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4698,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"2769:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4694,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4713,4787,4881],"referencedDeclaration":4881,"src":"2746:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4679,"id":4700,"nodeType":"Return","src":"2739:32:19"}]}}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"1087:1053:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:19","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"hash","nameLocation":"2173:4:19","nodeType":"VariableDeclaration","scope":4713,"src":"2165:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"signature","nameLocation":"2192:9:19","nodeType":"VariableDeclaration","scope":4713,"src":"2179:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:19"},"returnParameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"2226:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"2235:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4677,"nodeType":"UserDefinedTypeName","pathNode":{"id":4676,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"2235:12:19"},"referencedDeclaration":4623,"src":"2235:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:19"},"scope":4974,"src":"2145:730:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4739,"nodeType":"Block","src":"3748:140:19","statements":[{"assignments":[4724,4727],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:19","nodeType":"VariableDeclaration","scope":4739,"src":"3759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"error","nameLocation":"3791:5:19","nodeType":"VariableDeclaration","scope":4739,"src":"3778:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4726,"nodeType":"UserDefinedTypeName","pathNode":{"id":4725,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"3778:12:19"},"referencedDeclaration":4623,"src":"3778:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4732,"initialValue":{"arguments":[{"id":4729,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"3811:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4730,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"3817:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4728,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4713,4787,4881],"referencedDeclaration":4713,"src":"3800:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:19"},{"expression":{"arguments":[{"id":4734,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"3849:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}],"id":4733,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"3837:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4623_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4736,"nodeType":"ExpressionStatement","src":"3837:18:19"},{"expression":{"id":4737,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"3872:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4722,"id":4738,"nodeType":"Return","src":"3865:16:19"}]},"documentation":{"id":4714,"nodeType":"StructuredDocumentation","src":"2881:775:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:19","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4716,"mutability":"mutable","name":"hash","nameLocation":"3686:4:19","nodeType":"VariableDeclaration","scope":4740,"src":"3678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"signature","nameLocation":"3705:9:19","nodeType":"VariableDeclaration","scope":4740,"src":"3692:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4717,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:19"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4740,"src":"3739:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4720,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:19"},"scope":4974,"src":"3661:227:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4786,"nodeType":"Block","src":"4275:203:19","statements":[{"assignments":[4756],"declarations":[{"constant":false,"id":4756,"mutability":"mutable","name":"s","nameLocation":"4293:1:19","nodeType":"VariableDeclaration","scope":4786,"src":"4285:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4763,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4757,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"4297:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:19","typeDescriptions":{}}},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:19"},{"assignments":[4765],"declarations":[{"constant":false,"id":4765,"mutability":"mutable","name":"v","nameLocation":"4393:1:19","nodeType":"VariableDeclaration","scope":4786,"src":"4387:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4764,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4778,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4770,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"4412:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:19","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4766,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:19","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:19"},{"expression":{"arguments":[{"id":4780,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"4457:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4781,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4463:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4782,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"4466:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4783,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"4469:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4779,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4713,4787,4881],"referencedDeclaration":4881,"src":"4446:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4754,"id":4785,"nodeType":"Return","src":"4439:32:19"}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"3894:243:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":4787,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:19","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"hash","nameLocation":"4179:4:19","nodeType":"VariableDeclaration","scope":4787,"src":"4171:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"r","nameLocation":"4201:1:19","nodeType":"VariableDeclaration","scope":4787,"src":"4193:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"vs","nameLocation":"4220:2:19","nodeType":"VariableDeclaration","scope":4787,"src":"4212:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:19"},"returnParameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"4252:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4749,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"4261:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4752,"nodeType":"UserDefinedTypeName","pathNode":{"id":4751,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"4261:12:19"},"referencedDeclaration":4623,"src":"4261:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:19"},"scope":4974,"src":"4142:336:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4816,"nodeType":"Block","src":"4759:136:19","statements":[{"assignments":[4800,4803],"declarations":[{"constant":false,"id":4800,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:19","nodeType":"VariableDeclaration","scope":4816,"src":"4770:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4799,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4803,"mutability":"mutable","name":"error","nameLocation":"4802:5:19","nodeType":"VariableDeclaration","scope":4816,"src":"4789:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4802,"nodeType":"UserDefinedTypeName","pathNode":{"id":4801,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"4789:12:19"},"referencedDeclaration":4623,"src":"4789:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4809,"initialValue":{"arguments":[{"id":4805,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"4822:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4806,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4828:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4807,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"4831:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4804,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4713,4787,4881],"referencedDeclaration":4787,"src":"4811:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:19"},{"expression":{"arguments":[{"id":4811,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"4856:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}],"id":4810,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"4844:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4623_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4813,"nodeType":"ExpressionStatement","src":"4844:18:19"},{"expression":{"id":4814,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"4879:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4798,"id":4815,"nodeType":"Return","src":"4872:16:19"}]},"documentation":{"id":4788,"nodeType":"StructuredDocumentation","src":"4484:154:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:19","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"hash","nameLocation":"4677:4:19","nodeType":"VariableDeclaration","scope":4817,"src":"4669:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"r","nameLocation":"4699:1:19","nodeType":"VariableDeclaration","scope":4817,"src":"4691:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"vs","nameLocation":"4718:2:19","nodeType":"VariableDeclaration","scope":4817,"src":"4710:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:19"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"4750:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4796,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:19"},"scope":4974,"src":"4643:252:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4880,"nodeType":"Block","src":"5218:1345:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4836,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"6114:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:19","typeDescriptions":{}}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"6102:161:19","trueBody":{"id":4848,"nodeType":"Block","src":"6187:76:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4840,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:19","typeDescriptions":{}}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4844,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6221:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"6221:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"id":4846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4833,"id":4847,"nodeType":"Return","src":"6201:51:19"}]}},{"assignments":[4851],"declarations":[{"constant":false,"id":4851,"mutability":"mutable","name":"signer","nameLocation":"6365:6:19","nodeType":"VariableDeclaration","scope":4880,"src":"6357:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4850,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4858,"initialValue":{"arguments":[{"id":4853,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"6384:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4854,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"6390:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4855,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"6393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4856,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"6396:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4852,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"6412:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4860,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:19","typeDescriptions":{}}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"IfStatement","src":"6408:101:19","trueBody":{"id":4873,"nodeType":"Block","src":"6434:75:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:19","typeDescriptions":{}}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4869,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6468:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"6468:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"id":4871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4833,"id":4872,"nodeType":"Return","src":"6448:50:19"}]}},{"expression":{"components":[{"id":4875,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"6527:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4876,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6535:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4623_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"6535:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"id":4878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4833,"id":4879,"nodeType":"Return","src":"6519:37:19"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"4901:163:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4881,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:19","nodeType":"FunctionDefinition","parameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"hash","nameLocation":"5106:4:19","nodeType":"VariableDeclaration","scope":4881,"src":"5098:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"v","nameLocation":"5126:1:19","nodeType":"VariableDeclaration","scope":4881,"src":"5120:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4821,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"r","nameLocation":"5145:1:19","nodeType":"VariableDeclaration","scope":4881,"src":"5137:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"s","nameLocation":"5164:1:19","nodeType":"VariableDeclaration","scope":4881,"src":"5156:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:19"},"returnParameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"5195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4828,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"5204:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4831,"nodeType":"UserDefinedTypeName","pathNode":{"id":4830,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"5204:12:19"},"referencedDeclaration":4623,"src":"5204:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:19"},"scope":4974,"src":"5069:1494:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"6828:138:19","statements":[{"assignments":[4896,4899],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:19","nodeType":"VariableDeclaration","scope":4913,"src":"6839:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4895,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"error","nameLocation":"6871:5:19","nodeType":"VariableDeclaration","scope":4913,"src":"6858:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4898,"nodeType":"UserDefinedTypeName","pathNode":{"id":4897,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"6858:12:19"},"referencedDeclaration":4623,"src":"6858:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4906,"initialValue":{"arguments":[{"id":4901,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"6891:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4902,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"6897:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4904,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"6903:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4900,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4713,4787,4881],"referencedDeclaration":4881,"src":"6880:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4623_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:19"},{"expression":{"arguments":[{"id":4908,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"6927:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4623","typeString":"enum ECDSA.RecoverError"}],"id":4907,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"6915:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4623_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"6915:18:19"},{"expression":{"id":4911,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"6950:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4894,"id":4912,"nodeType":"Return","src":"6943:16:19"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"6569:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:19","nodeType":"FunctionDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"hash","nameLocation":"6730:4:19","nodeType":"VariableDeclaration","scope":4914,"src":"6722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4886,"mutability":"mutable","name":"v","nameLocation":"6750:1:19","nodeType":"VariableDeclaration","scope":4914,"src":"6744:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4885,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4888,"mutability":"mutable","name":"r","nameLocation":"6769:1:19","nodeType":"VariableDeclaration","scope":4914,"src":"6761:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4890,"mutability":"mutable","name":"s","nameLocation":"6788:1:19","nodeType":"VariableDeclaration","scope":4914,"src":"6780:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:19"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"6819:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:19"},"scope":4974,"src":"6696:270:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4930,"nodeType":"Block","src":"7334:187:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":4926,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"7508:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4923,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4922,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4921,"id":4929,"nodeType":"Return","src":"7438:76:19"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"6972:279:19","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:19","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"hash","nameLocation":"7296:4:19","nodeType":"VariableDeclaration","scope":4931,"src":"7288:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:19"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4931,"src":"7325:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:19"},"scope":4974,"src":"7256:265:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4952,"nodeType":"Block","src":"7886:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4945,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"7981:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4943,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"7964:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4613_$","typeString":"type(library Strings)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4496,"src":"7964:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4948,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"7992:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4940,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4939,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4938,"id":4951,"nodeType":"Return","src":"7896:99:19"}]},"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"7527:274:19","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4953,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:19","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"s","nameLocation":"7851:1:19","nodeType":"VariableDeclaration","scope":4953,"src":"7838:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4933,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:19"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4953,"src":"7877:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:19"},"scope":4974,"src":"7806:196:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"8443:92:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":4967,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8499:15:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4968,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"8516:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4964,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4963,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4962,"id":4971,"nodeType":"Return","src":"8453:75:19"}]},"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"8008:328:19","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:19","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:19","nodeType":"VariableDeclaration","scope":4973,"src":"8366:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:19","nodeType":"VariableDeclaration","scope":4973,"src":"8391:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:19"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4973,"src":"8434:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:19"},"scope":4974,"src":"8341:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4975,"src":"369:8168:19","usedErrors":[]}],"src":"112:8426:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[4974],"EIP712":[5128],"Math":[6029],"Strings":[4613]},"id":5129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":4977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5129,"sourceUnit":4975,"src":"138:21:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"161:1142:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":5128,"linearizedBaseContracts":[5128],"name":"EIP712","nameLocation":"1322:6:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4980,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1598:24:20","nodeType":"VariableDeclaration","scope":5128,"src":"1572:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4982,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1654:16:20","nodeType":"VariableDeclaration","scope":5128,"src":"1628:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4984,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1702:12:20","nodeType":"VariableDeclaration","scope":5128,"src":"1676:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4983,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4986,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1747:12:20","nodeType":"VariableDeclaration","scope":5128,"src":"1721:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4988,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1791:15:20","nodeType":"VariableDeclaration","scope":5128,"src":"1765:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4990,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1838:10:20","nodeType":"VariableDeclaration","scope":5128,"src":"1812:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":5054,"nodeType":"Block","src":"2519:547:20","statements":[{"assignments":[4999],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"hashedName","nameLocation":"2537:10:20","nodeType":"VariableDeclaration","scope":5054,"src":"2529:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5006,"initialValue":{"arguments":[{"arguments":[{"id":5003,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"2566:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2560:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5001,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:20","typeDescriptions":{}}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5000,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2550:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2550:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:43:20"},{"assignments":[5008],"declarations":[{"constant":false,"id":5008,"mutability":"mutable","name":"hashedVersion","nameLocation":"2590:13:20","nodeType":"VariableDeclaration","scope":5054,"src":"2582:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2582:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5015,"initialValue":{"arguments":[{"arguments":[{"id":5012,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"2622:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5010,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:20","typeDescriptions":{}}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5009,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2606:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2582:49:20"},{"assignments":[5017],"declarations":[{"constant":false,"id":5017,"mutability":"mutable","name":"typeHash","nameLocation":"2649:8:20","nodeType":"VariableDeclaration","scope":5054,"src":"2641:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5021,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":5018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2660:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:117:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2641:136:20"},{"expression":{"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5022,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"2787:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5023,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"2802:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2787:25:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5025,"nodeType":"ExpressionStatement","src":"2787:25:20"},{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"2822:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5027,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"2840:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2822:31:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5029,"nodeType":"ExpressionStatement","src":"2822:31:20"},{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5030,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"2863:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5031,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2882:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2882:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5034,"nodeType":"ExpressionStatement","src":"2863:32:20"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"2905:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5037,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"2954:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5038,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"2964:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5039,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"2976:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5036,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"2932:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2905:85:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5042,"nodeType":"ExpressionStatement","src":"2905:85:20"},{"expression":{"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"3000:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5046,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3023:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}],"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3015:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5044,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:20","typeDescriptions":{}}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5049,"nodeType":"ExpressionStatement","src":"3000:28:20"},{"expression":{"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5050,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"3038:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5051,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"3051:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3038:21:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5053,"nodeType":"ExpressionStatement","src":"3038:21:20"}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"1900:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":5055,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"name","nameLocation":"2490:4:20","nodeType":"VariableDeclaration","scope":5055,"src":"2476:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4992,"name":"string","nodeType":"ElementaryTypeName","src":"2476:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"version","nameLocation":"2510:7:20","nodeType":"VariableDeclaration","scope":5055,"src":"2496:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4994,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:43:20"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[],"src":"2519:0:20"},"scope":5128,"src":"2464:602:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5083,"nodeType":"Block","src":"3214:246:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5063,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}],"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5061,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:20","typeDescriptions":{}}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5065,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"3245:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3228:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5067,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3261:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3261:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5069,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"3278:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3228:66:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5081,"nodeType":"Block","src":"3358:96:20","statements":[{"expression":{"arguments":[{"id":5076,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"3401:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5077,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3413:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5078,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"3427:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5075,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"3379:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3379:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5060,"id":5080,"nodeType":"Return","src":"3372:71:20"}]},"id":5082,"nodeType":"IfStatement","src":"3224:230:20","trueBody":{"id":5074,"nodeType":"Block","src":"3296:56:20","statements":[{"expression":{"id":5072,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"3317:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5060,"id":5073,"nodeType":"Return","src":"3310:31:20"}]}}]},"documentation":{"id":5056,"nodeType":"StructuredDocumentation","src":"3072:75:20","text":" @dev Returns the domain separator for the current chain."},"id":5084,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3161:18:20","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[],"src":"3179:2:20"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5084,"src":"3205:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3204:9:20"},"scope":5128,"src":"3152:308:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5110,"nodeType":"Block","src":"3615:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":5098,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"3653:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5099,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"3663:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5100,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"3673:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5101,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3686:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3686:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5105,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3709:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5128","typeString":"contract EIP712"}],"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5103,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:20","typeDescriptions":{}}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3701:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3642:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3632:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3632:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5094,"id":5109,"nodeType":"Return","src":"3625:91:20"}]},"id":5111,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3475:21:20","nodeType":"FunctionDefinition","parameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"typeHash","nameLocation":"3514:8:20","nodeType":"VariableDeclaration","scope":5111,"src":"3506:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3506:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"nameHash","nameLocation":"3540:8:20","nodeType":"VariableDeclaration","scope":5111,"src":"3532:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3532:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5090,"mutability":"mutable","name":"versionHash","nameLocation":"3566:11:20","nodeType":"VariableDeclaration","scope":5111,"src":"3558:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3558:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3496:87:20"},"returnParameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5111,"src":"3606:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3606:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3605:9:20"},"scope":5128,"src":"3466:257:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5126,"nodeType":"Block","src":"4434:79:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5121,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"4473:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5123,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"4495:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5119,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"4451:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4974_$","typeString":"type(library ECDSA)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4973,"src":"4451:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5118,"id":5125,"nodeType":"Return","src":"4444:62:20"}]},"documentation":{"id":5112,"nodeType":"StructuredDocumentation","src":"3729:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4357:16:20","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"structHash","nameLocation":"4382:10:20","nodeType":"VariableDeclaration","scope":5127,"src":"4374:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:20:20"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5127,"src":"4425:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4425:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4424:9:20"},"scope":5128,"src":"4348:165:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5129,"src":"1304:3211:20","usedErrors":[]}],"src":"113:4403:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5152],"IERC165":[5164]},"id":5153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5130,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5153,"sourceUnit":5165,"src":"124:23:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5133,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5164,"src":"754:7:21"},"id":5134,"nodeType":"InheritanceSpecifier","src":"754:7:21"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5132,"nodeType":"StructuredDocumentation","src":"149:576:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":5152,"linearizedBaseContracts":[5152,5164],"name":"ERC165","nameLocation":"744:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5163],"body":{"id":5150,"nodeType":"Block","src":"920:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"937:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5145,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5164_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5164_$","typeString":"type(contract IERC165)"}],"id":5144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5164","typeString":"type(contract IERC165)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5142,"id":5149,"nodeType":"Return","src":"930:47:21"}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"768:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5151,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:21","nodeType":"FunctionDefinition","overrides":{"id":5139,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:21"},"parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:21","nodeType":"VariableDeclaration","scope":5151,"src":"856:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5136,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:21"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5151,"src":"914:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5140,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:21"},"scope":5152,"src":"829:155:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5153,"src":"726:260:21","usedErrors":[]}],"src":"99:888:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5164]},"id":5165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:22"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"125:279:22","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5164,"linearizedBaseContracts":[5164],"name":"IERC165","nameLocation":"415:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"429:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5163,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:22","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:22","nodeType":"VariableDeclaration","scope":5163,"src":"801:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5157,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:22"},"returnParameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5163,"src":"844:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5160,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:22"},"scope":5164,"src":"774:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5165,"src":"405:447:22","usedErrors":[]}],"src":"100:753:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6029]},"id":6030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5166,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:23"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"128:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6029,"linearizedBaseContracts":[6029],"name":"Math","nameLocation":"210:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5171,"members":[{"id":5168,"name":"Down","nameLocation":"245:4:23","nodeType":"EnumValue","src":"245:4:23"},{"id":5169,"name":"Up","nameLocation":"287:2:23","nodeType":"EnumValue","src":"287:2:23"},{"id":5170,"name":"Zero","nameLocation":"318:4:23","nodeType":"EnumValue","src":"318:4:23"}],"name":"Rounding","nameLocation":"226:8:23","nodeType":"EnumDefinition","src":"221:122:23"},{"body":{"id":5188,"nodeType":"Block","src":"480:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"497:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5182,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"501:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5185,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"509:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:23","trueExpression":{"id":5184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"505:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5180,"id":5187,"nodeType":"Return","src":"490:20:23"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"349:59:23","text":" @dev Returns the largest of two numbers."},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:23","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"a","nameLocation":"434:1:23","nodeType":"VariableDeclaration","scope":5189,"src":"426:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5173,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5176,"mutability":"mutable","name":"b","nameLocation":"445:1:23","nodeType":"VariableDeclaration","scope":5189,"src":"437:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:23"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"471:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:23"},"scope":6029,"src":"413:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5206,"nodeType":"Block","src":"655:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"672:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"676:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"684:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:23","trueExpression":{"id":5202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"680:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5198,"id":5205,"nodeType":"Return","src":"665:20:23"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"523:60:23","text":" @dev Returns the smallest of two numbers."},"id":5207,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:23","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"a","nameLocation":"609:1:23","nodeType":"VariableDeclaration","scope":5207,"src":"601:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5194,"mutability":"mutable","name":"b","nameLocation":"620:1:23","nodeType":"VariableDeclaration","scope":5207,"src":"612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:23"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5207,"src":"646:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:23"},"scope":6029,"src":"588:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"876:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"931:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"935:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"941:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"945:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5216,"id":5228,"nodeType":"Return","src":"923:28:23"}]},"documentation":{"id":5208,"nodeType":"StructuredDocumentation","src":"698:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:23","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"a","nameLocation":"830:1:23","nodeType":"VariableDeclaration","scope":5230,"src":"822:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5212,"mutability":"mutable","name":"b","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":5230,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:23"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"867:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:23"},"scope":6029,"src":"805:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5254,"nodeType":"Block","src":"1228:123:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"1316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"1330:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"1339:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:23","trueExpression":{"hexValue":"30","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5239,"id":5253,"nodeType":"Return","src":"1309:35:23"}]},"documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"964:188:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":5255,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:23","nodeType":"FunctionDefinition","parameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"a","nameLocation":"1182:1:23","nodeType":"VariableDeclaration","scope":5255,"src":"1174:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"b","nameLocation":"1193:1:23","nodeType":"VariableDeclaration","scope":5255,"src":"1185:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:23"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5255,"src":"1219:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:23"},"scope":6029,"src":"1157:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"1795:3797:23","statements":[{"id":5375,"nodeType":"UncheckedBlock","src":"1805:3781:23","statements":[{"assignments":[5268],"declarations":[{"constant":false,"id":5268,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:23","nodeType":"VariableDeclaration","scope":5375,"src":"2126:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5269,"nodeType":"VariableDeclarationStatement","src":"2126:13:23"},{"assignments":[5271],"declarations":[{"constant":false,"id":5271,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:23","nodeType":"VariableDeclaration","scope":5375,"src":"2198:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5272,"nodeType":"VariableDeclarationStatement","src":"2198:13:23"},{"AST":{"nodeType":"YulBlock","src":"2278:157:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:23"},"nodeType":"YulFunctionCall","src":"2319:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:23"},"nodeType":"YulFunctionCall","src":"2306:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:23","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:23"},"nodeType":"YulFunctionCall","src":"2352:9:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:23"}]},{"nodeType":"YulAssignment","src":"2378:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:23"},"nodeType":"YulFunctionCall","src":"2391:14:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:23"},"nodeType":"YulFunctionCall","src":"2407:13:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:23"},"nodeType":"YulFunctionCall","src":"2387:34:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:23"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":5268,"isOffset":false,"isSlot":false,"src":"2343:5:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"2399:5:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"2414:5:23","valueSize":1},{"declaration":5271,"isOffset":false,"isSlot":false,"src":"2378:5:23","valueSize":1},{"declaration":5258,"isOffset":false,"isSlot":false,"src":"2313:1:23","valueSize":1},{"declaration":5258,"isOffset":false,"isSlot":false,"src":"2356:1:23","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"2316:1:23","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"2359:1:23","valueSize":1}],"id":5273,"nodeType":"InlineAssembly","src":"2269:166:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"2516:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5282,"nodeType":"IfStatement","src":"2512:75:23","trueBody":{"id":5281,"nodeType":"Block","src":"2528:59:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2553:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5278,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"2561:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5266,"id":5280,"nodeType":"Return","src":"2546:26:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"2697:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5285,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"2711:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5288,"nodeType":"ExpressionStatement","src":"2689:28:23"},{"assignments":[5290],"declarations":[{"constant":false,"id":5290,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:23","nodeType":"VariableDeclaration","scope":5375,"src":"2973:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5291,"nodeType":"VariableDeclarationStatement","src":"2973:17:23"},{"AST":{"nodeType":"YulBlock","src":"3013:291:23","statements":[{"nodeType":"YulAssignment","src":"3082:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:23"},"nodeType":"YulFunctionCall","src":"3095:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:23"}]},{"nodeType":"YulAssignment","src":"3202:41:23","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:23"},"nodeType":"YulFunctionCall","src":"3222:20:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:23"},"nodeType":"YulFunctionCall","src":"3211:32:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:23"}]},{"nodeType":"YulAssignment","src":"3260:30:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:23"},"nodeType":"YulFunctionCall","src":"3269:21:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:23"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":5262,"isOffset":false,"isSlot":false,"src":"3108:11:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"3236:5:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"3260:5:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"3273:5:23","valueSize":1},{"declaration":5271,"isOffset":false,"isSlot":false,"src":"3202:5:23","valueSize":1},{"declaration":5271,"isOffset":false,"isSlot":false,"src":"3215:5:23","valueSize":1},{"declaration":5290,"isOffset":false,"isSlot":false,"src":"3082:9:23","valueSize":1},{"declaration":5290,"isOffset":false,"isSlot":false,"src":"3225:9:23","valueSize":1},{"declaration":5290,"isOffset":false,"isSlot":false,"src":"3280:9:23","valueSize":1},{"declaration":5258,"isOffset":false,"isSlot":false,"src":"3102:1:23","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"3105:1:23","valueSize":1}],"id":5292,"nodeType":"InlineAssembly","src":"3004:300:23"},{"assignments":[5294],"declarations":[{"constant":false,"id":5294,"mutability":"mutable","name":"twos","nameLocation":"3619:4:23","nodeType":"VariableDeclaration","scope":5375,"src":"3611:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5302,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"3626:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:23","subExpression":{"id":5296,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"3642:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:23"},{"AST":{"nodeType":"YulBlock","src":"3681:362:23","statements":[{"nodeType":"YulAssignment","src":"3746:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:23"},"nodeType":"YulFunctionCall","src":"3761:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:23"}]},{"nodeType":"YulAssignment","src":"3850:25:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:23"},"nodeType":"YulFunctionCall","src":"3859:16:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:23"}]},{"nodeType":"YulAssignment","src":"3990:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:23"},"nodeType":"YulFunctionCall","src":"4006:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:23"},"nodeType":"YulFunctionCall","src":"4002:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:23"},"nodeType":"YulFunctionCall","src":"3998:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:23"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":5262,"isOffset":false,"isSlot":false,"src":"3746:11:23","valueSize":1},{"declaration":5262,"isOffset":false,"isSlot":false,"src":"3765:11:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"3850:5:23","valueSize":1},{"declaration":5268,"isOffset":false,"isSlot":false,"src":"3863:5:23","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"3778:4:23","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"3870:4:23","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"3990:4:23","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"4013:4:23","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"4020:4:23","valueSize":1}],"id":5303,"nodeType":"InlineAssembly","src":"3672:371:23"},{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5304,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"4109:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"4118:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5306,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"4126:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"4109:21:23"},{"assignments":[5311],"declarations":[{"constant":false,"id":5311,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:23","nodeType":"VariableDeclaration","scope":5375,"src":"4448:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5318,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5313,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4471:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:23"},{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5319,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4719:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5322,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5326,"nodeType":"ExpressionStatement","src":"4704:36:23"},{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5327,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4773:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4788:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5330,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4802:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5334,"nodeType":"ExpressionStatement","src":"4773:36:23"},{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4843:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4872:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"4843:36:23"},{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4913:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4928:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5346,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5350,"nodeType":"ExpressionStatement","src":"4913:36:23"},{"expression":{"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5351,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4983:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5353,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4998:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5354,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"5012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5358,"nodeType":"ExpressionStatement","src":"4983:36:23"},{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5359,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"5054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"5069:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5362,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"5083:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5366,"nodeType":"ExpressionStatement","src":"5054:36:23"},{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"5524:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"5533:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"5541:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5372,"nodeType":"ExpressionStatement","src":"5524:24:23"},{"expression":{"id":5373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"5569:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5266,"id":5374,"nodeType":"Return","src":"5562:13:23"}]}]},"documentation":{"id":5256,"nodeType":"StructuredDocumentation","src":"1357:305:23","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:23","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5258,"mutability":"mutable","name":"x","nameLocation":"1700:1:23","nodeType":"VariableDeclaration","scope":5377,"src":"1692:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"y","nameLocation":"1719:1:23","nodeType":"VariableDeclaration","scope":5377,"src":"1711:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:23","nodeType":"VariableDeclaration","scope":5377,"src":"1730:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:23"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"result","nameLocation":"1787:6:23","nodeType":"VariableDeclaration","scope":5377,"src":"1779:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:23"},"scope":6029,"src":"1667:3925:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"5872:189:23","statements":[{"assignments":[5393],"declarations":[{"constant":false,"id":5393,"mutability":"mutable","name":"result","nameLocation":"5890:6:23","nodeType":"VariableDeclaration","scope":5420,"src":"5882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5399,"initialValue":{"arguments":[{"id":5395,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"5906:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5396,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"5909:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5397,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"5912:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5377,5421],"referencedDeclaration":5377,"src":"5899:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"5938:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5401,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"5950:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5171_$","typeString":"type(enum Math.Rounding)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5169,"src":"5950:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"src":"5938:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"5972:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5406,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"5975:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"5978:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5404,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5417,"nodeType":"IfStatement","src":"5934:98:23","trueBody":{"id":5416,"nodeType":"Block","src":"5996:36:23","statements":[{"expression":{"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"6010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5415,"nodeType":"ExpressionStatement","src":"6010:11:23"}]}},{"expression":{"id":5418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"6048:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5391,"id":5419,"nodeType":"Return","src":"6041:13:23"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"5598:121:23","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:23","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"x","nameLocation":"5757:1:23","nodeType":"VariableDeclaration","scope":5421,"src":"5749:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5382,"mutability":"mutable","name":"y","nameLocation":"5776:1:23","nodeType":"VariableDeclaration","scope":5421,"src":"5768:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5384,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:23","nodeType":"VariableDeclaration","scope":5421,"src":"5787:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:23","nodeType":"VariableDeclaration","scope":5421,"src":"5816:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"typeName":{"id":5386,"nodeType":"UserDefinedTypeName","pathNode":{"id":5385,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"5816:8:23"},"referencedDeclaration":5171,"src":"5816:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:23"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5421,"src":"5863:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:23"},"scope":6029,"src":"5724:337:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"6337:1585:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"6351:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5435,"nodeType":"IfStatement","src":"6347:45:23","trueBody":{"id":5434,"nodeType":"Block","src":"6359:33:23","statements":[{"expression":{"hexValue":"30","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5428,"id":5433,"nodeType":"Return","src":"6373:8:23"}]}},{"assignments":[5437],"declarations":[{"constant":false,"id":5437,"mutability":"mutable","name":"result","nameLocation":"7079:6:23","nodeType":"VariableDeclaration","scope":5532,"src":"7071:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7099:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5439,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5701,5737],"referencedDeclaration":5701,"src":"7094:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:23"},{"id":5531,"nodeType":"UncheckedBlock","src":"7508:408:23","statements":[{"expression":{"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7532:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7542:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7555:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5457,"nodeType":"ExpressionStatement","src":"7532:35:23"},{"expression":{"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7581:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7591:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7600:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7604:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5468,"nodeType":"ExpressionStatement","src":"7581:35:23"},{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7630:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7640:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7649:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5479,"nodeType":"ExpressionStatement","src":"7630:35:23"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7679:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7689:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7698:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7702:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"7679:35:23"},{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7728:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7738:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7747:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7751:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5501,"nodeType":"ExpressionStatement","src":"7728:35:23"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7777:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7787:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7796:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7800:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"7777:35:23"},{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7826:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7836:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7845:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7849:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5523,"nodeType":"ExpressionStatement","src":"7826:35:23"},{"expression":{"arguments":[{"id":5525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7886:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7894:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7898:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5524,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7882:3:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5428,"id":5530,"nodeType":"Return","src":"7875:30:23"}]}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"6067:208:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:23","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"a","nameLocation":"6302:1:23","nodeType":"VariableDeclaration","scope":5533,"src":"6294:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:23"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"6328:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:23"},"scope":6029,"src":"6280:1642:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"8098:161:23","statements":[{"id":5567,"nodeType":"UncheckedBlock","src":"8108:145:23","statements":[{"assignments":[5545],"declarations":[{"constant":false,"id":5545,"mutability":"mutable","name":"result","nameLocation":"8140:6:23","nodeType":"VariableDeclaration","scope":5567,"src":"8132:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5549,"initialValue":{"arguments":[{"id":5547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"8154:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5533,5569],"referencedDeclaration":5533,"src":"8149:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"8177:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"8187:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5552,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"8199:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5171_$","typeString":"type(enum Math.Rounding)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5169,"src":"8199:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"src":"8187:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"8214:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"8223:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"8232:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:23","trueExpression":{"hexValue":"31","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5543,"id":5566,"nodeType":"Return","src":"8170:72:23"}]}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"7928:89:23","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:23","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"a","nameLocation":"8044:1:23","nodeType":"VariableDeclaration","scope":5569,"src":"8036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5539,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:23","nodeType":"VariableDeclaration","scope":5569,"src":"8047:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"typeName":{"id":5538,"nodeType":"UserDefinedTypeName","pathNode":{"id":5537,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"8047:8:23"},"referencedDeclaration":5171,"src":"8047:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:23"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5569,"src":"8089:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:23"},"scope":6029,"src":"8022:237:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"8444:922:23","statements":[{"assignments":[5578],"declarations":[{"constant":false,"id":5578,"mutability":"mutable","name":"result","nameLocation":"8462:6:23","nodeType":"VariableDeclaration","scope":5700,"src":"8454:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5580,"initialValue":{"hexValue":"30","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:23"},{"id":5697,"nodeType":"UncheckedBlock","src":"8482:855:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8510:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"8506:99:23","trueBody":{"id":5594,"nodeType":"Block","src":"8528:77:23","statements":[{"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8546:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5589,"nodeType":"ExpressionStatement","src":"8546:13:23"},{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"8577:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5593,"nodeType":"ExpressionStatement","src":"8577:13:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8622:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5610,"nodeType":"IfStatement","src":"8618:96:23","trueBody":{"id":5609,"nodeType":"Block","src":"8639:75:23","statements":[{"expression":{"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8657:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5604,"nodeType":"ExpressionStatement","src":"8657:12:23"},{"expression":{"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"8687:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5608,"nodeType":"ExpressionStatement","src":"8687:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8731:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5625,"nodeType":"IfStatement","src":"8727:96:23","trueBody":{"id":5624,"nodeType":"Block","src":"8748:75:23","statements":[{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8766:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5619,"nodeType":"ExpressionStatement","src":"8766:12:23"},{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"8796:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ExpressionStatement","src":"8796:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8840:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5640,"nodeType":"IfStatement","src":"8836:96:23","trueBody":{"id":5639,"nodeType":"Block","src":"8857:75:23","statements":[{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8875:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"8875:12:23"},{"expression":{"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"8905:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5638,"nodeType":"ExpressionStatement","src":"8905:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8949:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5655,"nodeType":"IfStatement","src":"8945:93:23","trueBody":{"id":5654,"nodeType":"Block","src":"8965:73:23","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"8983:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"8983:11:23"},{"expression":{"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"9012:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5653,"nodeType":"ExpressionStatement","src":"9012:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9055:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5670,"nodeType":"IfStatement","src":"9051:93:23","trueBody":{"id":5669,"nodeType":"Block","src":"9071:73:23","statements":[{"expression":{"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9089:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5664,"nodeType":"ExpressionStatement","src":"9089:11:23"},{"expression":{"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"9118:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5668,"nodeType":"ExpressionStatement","src":"9118:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9161:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5685,"nodeType":"IfStatement","src":"9157:93:23","trueBody":{"id":5684,"nodeType":"Block","src":"9177:73:23","statements":[{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9195:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5679,"nodeType":"ExpressionStatement","src":"9195:11:23"},{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"9224:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5683,"nodeType":"ExpressionStatement","src":"9224:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9267:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5696,"nodeType":"IfStatement","src":"9263:64:23","trueBody":{"id":5695,"nodeType":"Block","src":"9283:44:23","statements":[{"expression":{"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"9301:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5694,"nodeType":"ExpressionStatement","src":"9301:11:23"}]}}]},{"expression":{"id":5698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"9353:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5576,"id":5699,"nodeType":"Return","src":"9346:13:23"}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"8265:113:23","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:23","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"8405:5:23","nodeType":"VariableDeclaration","scope":5701,"src":"8397:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:23"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"8435:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:23"},"scope":6029,"src":"8383:983:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5736,"nodeType":"Block","src":"9599:165:23","statements":[{"id":5735,"nodeType":"UncheckedBlock","src":"9609:149:23","statements":[{"assignments":[5713],"declarations":[{"constant":false,"id":5713,"mutability":"mutable","name":"result","nameLocation":"9641:6:23","nodeType":"VariableDeclaration","scope":5735,"src":"9633:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5712,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5717,"initialValue":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"9655:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5714,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5701,5737],"referencedDeclaration":5701,"src":"9650:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"9682:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"9692:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5720,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"9704:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5171_$","typeString":"type(enum Math.Rounding)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5169,"src":"9704:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"src":"9692:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"9724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"9733:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:23","trueExpression":{"hexValue":"31","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5711,"id":5734,"nodeType":"Return","src":"9675:72:23"}]}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"9372:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5737,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:23","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"value","nameLocation":"9541:5:23","nodeType":"VariableDeclaration","scope":5737,"src":"9533:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5707,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:23","nodeType":"VariableDeclaration","scope":5737,"src":"9548:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"typeName":{"id":5706,"nodeType":"UserDefinedTypeName","pathNode":{"id":5705,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"9548:8:23"},"referencedDeclaration":5171,"src":"9548:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:23"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5737,"src":"9590:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:23"},"scope":6029,"src":"9519:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5865,"nodeType":"Block","src":"9951:828:23","statements":[{"assignments":[5746],"declarations":[{"constant":false,"id":5746,"mutability":"mutable","name":"result","nameLocation":"9969:6:23","nodeType":"VariableDeclaration","scope":5865,"src":"9961:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5748,"initialValue":{"hexValue":"30","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:23"},{"id":5862,"nodeType":"UncheckedBlock","src":"9989:761:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10017:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"10013:99:23","trueBody":{"id":5764,"nodeType":"Block","src":"10034:78:23","statements":[{"expression":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10052:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5759,"nodeType":"ExpressionStatement","src":"10052:15:23"},{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10085:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ExpressionStatement","src":"10085:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10129:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"10125:99:23","trueBody":{"id":5781,"nodeType":"Block","src":"10146:78:23","statements":[{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10164:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"10164:15:23"},{"expression":{"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10197:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5780,"nodeType":"ExpressionStatement","src":"10197:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10241:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5799,"nodeType":"IfStatement","src":"10237:99:23","trueBody":{"id":5798,"nodeType":"Block","src":"10258:78:23","statements":[{"expression":{"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10276:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5793,"nodeType":"ExpressionStatement","src":"10276:15:23"},{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10309:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5797,"nodeType":"ExpressionStatement","src":"10309:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10353:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5816,"nodeType":"IfStatement","src":"10349:96:23","trueBody":{"id":5815,"nodeType":"Block","src":"10369:76:23","statements":[{"expression":{"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5810,"nodeType":"ExpressionStatement","src":"10387:14:23"},{"expression":{"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10419:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5814,"nodeType":"ExpressionStatement","src":"10419:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10462:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"10458:96:23","trueBody":{"id":5832,"nodeType":"Block","src":"10478:76:23","statements":[{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5827,"nodeType":"ExpressionStatement","src":"10496:14:23"},{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10528:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5831,"nodeType":"ExpressionStatement","src":"10528:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10571:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5850,"nodeType":"IfStatement","src":"10567:96:23","trueBody":{"id":5849,"nodeType":"Block","src":"10587:76:23","statements":[{"expression":{"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10605:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5844,"nodeType":"ExpressionStatement","src":"10605:14:23"},{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10637:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5848,"nodeType":"ExpressionStatement","src":"10637:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"10680:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5861,"nodeType":"IfStatement","src":"10676:64:23","trueBody":{"id":5860,"nodeType":"Block","src":"10696:44:23","statements":[{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10714:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"10714:11:23"}]}}]},{"expression":{"id":5863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"10766:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5744,"id":5864,"nodeType":"Return","src":"10759:13:23"}]},"documentation":{"id":5738,"nodeType":"StructuredDocumentation","src":"9770:114:23","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5866,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:23","nodeType":"FunctionDefinition","parameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"value","nameLocation":"9912:5:23","nodeType":"VariableDeclaration","scope":5866,"src":"9904:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:23"},"returnParameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5866,"src":"9942:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:23"},"scope":6029,"src":"9889:890:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"11014:165:23","statements":[{"id":5900,"nodeType":"UncheckedBlock","src":"11024:149:23","statements":[{"assignments":[5878],"declarations":[{"constant":false,"id":5878,"mutability":"mutable","name":"result","nameLocation":"11056:6:23","nodeType":"VariableDeclaration","scope":5900,"src":"11048:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5882,"initialValue":{"arguments":[{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11071:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5879,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5866,5902],"referencedDeclaration":5866,"src":"11065:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"11098:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"11108:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5885,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"11120:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5171_$","typeString":"type(enum Math.Rounding)"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5169,"src":"11120:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"src":"11108:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"11139:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11148:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:23","trueExpression":{"hexValue":"31","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5876,"id":5899,"nodeType":"Return","src":"11091:71:23"}]}]},"documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"10785:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:23","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"value","nameLocation":"10956:5:23","nodeType":"VariableDeclaration","scope":5902,"src":"10948:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5872,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:23","nodeType":"VariableDeclaration","scope":5902,"src":"10963:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"typeName":{"id":5871,"nodeType":"UserDefinedTypeName","pathNode":{"id":5870,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"10963:8:23"},"referencedDeclaration":5171,"src":"10963:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:23"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5902,"src":"11005:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:23"},"scope":6029,"src":"10933:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5988,"nodeType":"Block","src":"11493:600:23","statements":[{"assignments":[5911],"declarations":[{"constant":false,"id":5911,"mutability":"mutable","name":"result","nameLocation":"11511:6:23","nodeType":"VariableDeclaration","scope":5988,"src":"11503:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5913,"initialValue":{"hexValue":"30","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:23"},{"id":5985,"nodeType":"UncheckedBlock","src":"11531:533:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11559:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5928,"nodeType":"IfStatement","src":"11555:98:23","trueBody":{"id":5927,"nodeType":"Block","src":"11577:76:23","statements":[{"expression":{"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11595:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5922,"nodeType":"ExpressionStatement","src":"11595:13:23"},{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"11626:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5926,"nodeType":"ExpressionStatement","src":"11626:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11670:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5943,"nodeType":"IfStatement","src":"11666:95:23","trueBody":{"id":5942,"nodeType":"Block","src":"11687:74:23","statements":[{"expression":{"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11705:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5937,"nodeType":"ExpressionStatement","src":"11705:12:23"},{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"11735:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5941,"nodeType":"ExpressionStatement","src":"11735:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11778:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5958,"nodeType":"IfStatement","src":"11774:95:23","trueBody":{"id":5957,"nodeType":"Block","src":"11795:74:23","statements":[{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11813:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5952,"nodeType":"ExpressionStatement","src":"11813:12:23"},{"expression":{"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"11843:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5956,"nodeType":"ExpressionStatement","src":"11843:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11886:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5973,"nodeType":"IfStatement","src":"11882:95:23","trueBody":{"id":5972,"nodeType":"Block","src":"11903:74:23","statements":[{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11921:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5967,"nodeType":"ExpressionStatement","src":"11921:12:23"},{"expression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"11951:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5971,"nodeType":"ExpressionStatement","src":"11951:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"11994:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5984,"nodeType":"IfStatement","src":"11990:64:23","trueBody":{"id":5983,"nodeType":"Block","src":"12010:44:23","statements":[{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"12028:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5982,"nodeType":"ExpressionStatement","src":"12028:11:23"}]}}]},{"expression":{"id":5986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"12080:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5909,"id":5987,"nodeType":"Return","src":"12073:13:23"}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"11185:240:23","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5989,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:23","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"value","nameLocation":"11454:5:23","nodeType":"VariableDeclaration","scope":5989,"src":"11446:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:23"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5989,"src":"11484:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:23"},"scope":6029,"src":"11430:663:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6027,"nodeType":"Block","src":"12329:173:23","statements":[{"id":6026,"nodeType":"UncheckedBlock","src":"12339:157:23","statements":[{"assignments":[6001],"declarations":[{"constant":false,"id":6001,"mutability":"mutable","name":"result","nameLocation":"12371:6:23","nodeType":"VariableDeclaration","scope":6026,"src":"12363:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6005,"initialValue":{"arguments":[{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"12387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6002,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5989,6028],"referencedDeclaration":5989,"src":"12380:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"12414:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"12424:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6008,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"12436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5171_$","typeString":"type(enum Math.Rounding)"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5169,"src":"12436:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"src":"12424:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"12457:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"12471:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:23","trueExpression":{"hexValue":"31","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5999,"id":6025,"nodeType":"Return","src":"12407:78:23"}]}]},"documentation":{"id":5990,"nodeType":"StructuredDocumentation","src":"12099:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:23","nodeType":"FunctionDefinition","parameters":{"id":5996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"value","nameLocation":"12271:5:23","nodeType":"VariableDeclaration","scope":6028,"src":"12263:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5991,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5995,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:23","nodeType":"VariableDeclaration","scope":6028,"src":"12278:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"},"typeName":{"id":5994,"nodeType":"UserDefinedTypeName","pathNode":{"id":5993,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"12278:8:23"},"referencedDeclaration":5171,"src":"12278:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5171","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:23"},"returnParameters":{"id":5999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6028,"src":"12320:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:23"},"scope":6029,"src":"12247:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6030,"src":"202:12302:23","usedErrors":[]}],"src":"103:12402:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7570]},"id":7571,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6031,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"217:709:24","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":7570,"linearizedBaseContracts":[7570],"name":"SafeCast","nameLocation":"935:8:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":6056,"nodeType":"Block","src":"1339:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"1357:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6043,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":6040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"ExpressionStatement","src":"1349:78:24"},{"expression":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"1452:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6051,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:24","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6039,"id":6055,"nodeType":"Return","src":"1437:21:24"}]},"documentation":{"id":6033,"nodeType":"StructuredDocumentation","src":"950:318:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6057,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:24","nodeType":"FunctionDefinition","parameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"value","nameLocation":"1300:5:24","nodeType":"VariableDeclaration","scope":6057,"src":"1292:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:24"},"returnParameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"1330:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6037,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:24"},"scope":7570,"src":"1273:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6081,"nodeType":"Block","src":"1860:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"1878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6068,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6067,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6075,"nodeType":"ExpressionStatement","src":"1870:78:24"},{"expression":{"arguments":[{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"1973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6076,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:24","typeDescriptions":{}}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6064,"id":6080,"nodeType":"Return","src":"1958:21:24"}]},"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"1471:318:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6082,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:24","nodeType":"FunctionDefinition","parameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"value","nameLocation":"1821:5:24","nodeType":"VariableDeclaration","scope":6082,"src":"1813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:24"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6082,"src":"1851:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6062,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:24"},"scope":7570,"src":"1794:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6106,"nodeType":"Block","src":"2381:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"2399:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6093,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6092,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"ExpressionStatement","src":"2391:78:24"},{"expression":{"arguments":[{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"2494:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6101,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:24","typeDescriptions":{}}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6089,"id":6105,"nodeType":"Return","src":"2479:21:24"}]},"documentation":{"id":6083,"nodeType":"StructuredDocumentation","src":"1992:318:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:24","nodeType":"FunctionDefinition","parameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"value","nameLocation":"2342:5:24","nodeType":"VariableDeclaration","scope":6107,"src":"2334:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:24"},"returnParameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6107,"src":"2372:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6087,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:24"},"scope":7570,"src":"2315:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6131,"nodeType":"Block","src":"2902:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"2920:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6118,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6117,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6125,"nodeType":"ExpressionStatement","src":"2912:78:24"},{"expression":{"arguments":[{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"3015:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6126,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:24","typeDescriptions":{}}},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6114,"id":6130,"nodeType":"Return","src":"3000:21:24"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"2513:318:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:24","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"value","nameLocation":"2863:5:24","nodeType":"VariableDeclaration","scope":6132,"src":"2855:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:24"},"returnParameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6132,"src":"2893:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6112,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:24"},"scope":7570,"src":"2836:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6156,"nodeType":"Block","src":"3423:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"3441:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6143,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6150,"nodeType":"ExpressionStatement","src":"3433:78:24"},{"expression":{"arguments":[{"id":6153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"3536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6151,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:24","typeDescriptions":{}}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6139,"id":6155,"nodeType":"Return","src":"3521:21:24"}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"3034:318:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6157,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:24","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"value","nameLocation":"3384:5:24","nodeType":"VariableDeclaration","scope":6157,"src":"3376:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:24"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6157,"src":"3414:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6137,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:24"},"scope":7570,"src":"3357:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6181,"nodeType":"Block","src":"3944:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"3962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6168,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6175,"nodeType":"ExpressionStatement","src":"3954:78:24"},{"expression":{"arguments":[{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"4057:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6176,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:24","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6164,"id":6180,"nodeType":"Return","src":"4042:21:24"}]},"documentation":{"id":6158,"nodeType":"StructuredDocumentation","src":"3555:318:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6182,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:24","nodeType":"FunctionDefinition","parameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"value","nameLocation":"3905:5:24","nodeType":"VariableDeclaration","scope":6182,"src":"3897:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6159,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:24"},"returnParameters":{"id":6164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6182,"src":"3935:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6162,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:24"},"scope":7570,"src":"3878:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"4465:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"4483:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6193,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6200,"nodeType":"ExpressionStatement","src":"4475:78:24"},{"expression":{"arguments":[{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"4578:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6201,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:24","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6189,"id":6205,"nodeType":"Return","src":"4563:21:24"}]},"documentation":{"id":6183,"nodeType":"StructuredDocumentation","src":"4076:318:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6207,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:24","nodeType":"FunctionDefinition","parameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"value","nameLocation":"4426:5:24","nodeType":"VariableDeclaration","scope":6207,"src":"4418:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:24"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6207,"src":"4456:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6187,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:24"},"scope":7570,"src":"4399:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6231,"nodeType":"Block","src":"4986:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"5004:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6218,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6217,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6225,"nodeType":"ExpressionStatement","src":"4996:78:24"},{"expression":{"arguments":[{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"5099:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6226,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:24","typeDescriptions":{}}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6214,"id":6230,"nodeType":"Return","src":"5084:21:24"}]},"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"4597:318:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:24","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"value","nameLocation":"4947:5:24","nodeType":"VariableDeclaration","scope":6232,"src":"4939:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:24"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6232,"src":"4977:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6212,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:24"},"scope":7570,"src":"4920:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6256,"nodeType":"Block","src":"5507:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"5525:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6243,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"ExpressionStatement","src":"5517:78:24"},{"expression":{"arguments":[{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"5620:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6251,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:24","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6239,"id":6255,"nodeType":"Return","src":"5605:21:24"}]},"documentation":{"id":6233,"nodeType":"StructuredDocumentation","src":"5118:318:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:24","nodeType":"FunctionDefinition","parameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"value","nameLocation":"5468:5:24","nodeType":"VariableDeclaration","scope":6257,"src":"5460:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:24"},"returnParameters":{"id":6239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6257,"src":"5498:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6237,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:24"},"scope":7570,"src":"5441:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6281,"nodeType":"Block","src":"6028:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"6046:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6268,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6275,"nodeType":"ExpressionStatement","src":"6038:78:24"},{"expression":{"arguments":[{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"6141:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6276,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:24","typeDescriptions":{}}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6264,"id":6280,"nodeType":"Return","src":"6126:21:24"}]},"documentation":{"id":6258,"nodeType":"StructuredDocumentation","src":"5639:318:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:24","nodeType":"FunctionDefinition","parameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"value","nameLocation":"5989:5:24","nodeType":"VariableDeclaration","scope":6282,"src":"5981:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:24"},"returnParameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6282,"src":"6019:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6262,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:24"},"scope":7570,"src":"5962:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6306,"nodeType":"Block","src":"6549:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"6567:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6293,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6300,"nodeType":"ExpressionStatement","src":"6559:78:24"},{"expression":{"arguments":[{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"6662:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6301,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:24","typeDescriptions":{}}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6289,"id":6305,"nodeType":"Return","src":"6647:21:24"}]},"documentation":{"id":6283,"nodeType":"StructuredDocumentation","src":"6160:318:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:24","nodeType":"FunctionDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"value","nameLocation":"6510:5:24","nodeType":"VariableDeclaration","scope":6307,"src":"6502:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:24"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6307,"src":"6540:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6287,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:24"},"scope":7570,"src":"6483:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6331,"nodeType":"Block","src":"7070:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"7088:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6318,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6317,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6325,"nodeType":"ExpressionStatement","src":"7080:78:24"},{"expression":{"arguments":[{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"7183:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6326,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:24","typeDescriptions":{}}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6314,"id":6330,"nodeType":"Return","src":"7168:21:24"}]},"documentation":{"id":6308,"nodeType":"StructuredDocumentation","src":"6681:318:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6332,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:24","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"value","nameLocation":"7031:5:24","nodeType":"VariableDeclaration","scope":6332,"src":"7023:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:24"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6332,"src":"7061:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6312,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:24"},"scope":7570,"src":"7004:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"7591:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"7609:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6343,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6350,"nodeType":"ExpressionStatement","src":"7601:78:24"},{"expression":{"arguments":[{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"7704:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6351,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:24","typeDescriptions":{}}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6339,"id":6355,"nodeType":"Return","src":"7689:21:24"}]},"documentation":{"id":6333,"nodeType":"StructuredDocumentation","src":"7202:318:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:24","nodeType":"FunctionDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"value","nameLocation":"7552:5:24","nodeType":"VariableDeclaration","scope":6357,"src":"7544:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:24"},"returnParameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6357,"src":"7582:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6337,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:24"},"scope":7570,"src":"7525:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6381,"nodeType":"Block","src":"8112:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"8130:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6368,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6375,"nodeType":"ExpressionStatement","src":"8122:78:24"},{"expression":{"arguments":[{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"8225:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6376,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:24","typeDescriptions":{}}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6364,"id":6380,"nodeType":"Return","src":"8210:21:24"}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"7723:318:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:24","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"8073:5:24","nodeType":"VariableDeclaration","scope":6382,"src":"8065:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:24"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6382,"src":"8103:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6362,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:24"},"scope":7570,"src":"8046:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"8633:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"8651:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6393,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6400,"nodeType":"ExpressionStatement","src":"8643:78:24"},{"expression":{"arguments":[{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"8746:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6401,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:24","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6389,"id":6405,"nodeType":"Return","src":"8731:21:24"}]},"documentation":{"id":6383,"nodeType":"StructuredDocumentation","src":"8244:318:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:24","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"value","nameLocation":"8594:5:24","nodeType":"VariableDeclaration","scope":6407,"src":"8586:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:24"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6407,"src":"8624:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6387,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:24"},"scope":7570,"src":"8567:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"9154:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"9172:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6418,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6417,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6425,"nodeType":"ExpressionStatement","src":"9164:78:24"},{"expression":{"arguments":[{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"9267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6426,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:24","typeDescriptions":{}}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6414,"id":6430,"nodeType":"Return","src":"9252:21:24"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"8765:318:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:24","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"9115:5:24","nodeType":"VariableDeclaration","scope":6432,"src":"9107:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:24"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6432,"src":"9145:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6412,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:24"},"scope":7570,"src":"9088:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6456,"nodeType":"Block","src":"9675:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"9693:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6443,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6450,"nodeType":"ExpressionStatement","src":"9685:78:24"},{"expression":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"9788:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6451,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:24","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6439,"id":6455,"nodeType":"Return","src":"9773:21:24"}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"9286:318:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:24","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"9636:5:24","nodeType":"VariableDeclaration","scope":6457,"src":"9628:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:24"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6457,"src":"9666:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6437,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:24"},"scope":7570,"src":"9609:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6481,"nodeType":"Block","src":"10196:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"10214:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6468,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6475,"nodeType":"ExpressionStatement","src":"10206:78:24"},{"expression":{"arguments":[{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"10309:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6476,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{}}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6464,"id":6480,"nodeType":"Return","src":"10294:21:24"}]},"documentation":{"id":6458,"nodeType":"StructuredDocumentation","src":"9807:318:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6482,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:24","nodeType":"FunctionDefinition","parameters":{"id":6461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6460,"mutability":"mutable","name":"value","nameLocation":"10157:5:24","nodeType":"VariableDeclaration","scope":6482,"src":"10149:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6459,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:24"},"returnParameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6482,"src":"10187:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6462,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:24"},"scope":7570,"src":"10130:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"10717:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"10735:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6493,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"ExpressionStatement","src":"10727:78:24"},{"expression":{"arguments":[{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"10830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6501,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:24","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6489,"id":6505,"nodeType":"Return","src":"10815:21:24"}]},"documentation":{"id":6483,"nodeType":"StructuredDocumentation","src":"10328:318:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:24","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"value","nameLocation":"10678:5:24","nodeType":"VariableDeclaration","scope":6507,"src":"10670:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:24"},"returnParameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"10708:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6487,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:24"},"scope":7570,"src":"10651:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6531,"nodeType":"Block","src":"11232:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"11250:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6518,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6525,"nodeType":"ExpressionStatement","src":"11242:76:24"},{"expression":{"arguments":[{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"11342:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6526,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:24","typeDescriptions":{}}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6514,"id":6530,"nodeType":"Return","src":"11328:20:24"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"10849:314:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":6532,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:24","nodeType":"FunctionDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"11194:5:24","nodeType":"VariableDeclaration","scope":6532,"src":"11186:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:24"},"returnParameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6532,"src":"11224:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6512,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:24"},"scope":7570,"src":"11168:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6556,"nodeType":"Block","src":"11744:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"11762:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6543,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6550,"nodeType":"ExpressionStatement","src":"11754:76:24"},{"expression":{"arguments":[{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"11854:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6551,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6539,"id":6555,"nodeType":"Return","src":"11840:20:24"}]},"documentation":{"id":6533,"nodeType":"StructuredDocumentation","src":"11361:314:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:24","nodeType":"FunctionDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"value","nameLocation":"11706:5:24","nodeType":"VariableDeclaration","scope":6557,"src":"11698:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:24"},"returnParameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6557,"src":"11736:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6537,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:24"},"scope":7570,"src":"11680:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"12256:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"12274:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6568,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6575,"nodeType":"ExpressionStatement","src":"12266:76:24"},{"expression":{"arguments":[{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"12366:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6576,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:24","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6564,"id":6580,"nodeType":"Return","src":"12352:20:24"}]},"documentation":{"id":6558,"nodeType":"StructuredDocumentation","src":"11873:314:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:24","nodeType":"FunctionDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"value","nameLocation":"12218:5:24","nodeType":"VariableDeclaration","scope":6582,"src":"12210:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6559,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:24"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"12248:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6562,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:24"},"scope":7570,"src":"12192:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6606,"nodeType":"Block","src":"12768:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"12786:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6593,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6600,"nodeType":"ExpressionStatement","src":"12778:76:24"},{"expression":{"arguments":[{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"12878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6601,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:24","typeDescriptions":{}}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6589,"id":6605,"nodeType":"Return","src":"12864:20:24"}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"12385:314:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:24","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"12730:5:24","nodeType":"VariableDeclaration","scope":6607,"src":"12722:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:24"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6607,"src":"12760:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6587,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:24"},"scope":7570,"src":"12704:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6631,"nodeType":"Block","src":"13280:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"13298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6618,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6617,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6625,"nodeType":"ExpressionStatement","src":"13290:76:24"},{"expression":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"13390:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6626,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:24","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6614,"id":6630,"nodeType":"Return","src":"13376:20:24"}]},"documentation":{"id":6608,"nodeType":"StructuredDocumentation","src":"12897:314:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":6632,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:24","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"value","nameLocation":"13242:5:24","nodeType":"VariableDeclaration","scope":6632,"src":"13234:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6609,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:24"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6632,"src":"13272:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6612,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:24"},"scope":7570,"src":"13216:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6656,"nodeType":"Block","src":"13792:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"13810:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6643,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6650,"nodeType":"ExpressionStatement","src":"13802:76:24"},{"expression":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"13902:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6651,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:24","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6639,"id":6655,"nodeType":"Return","src":"13888:20:24"}]},"documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"13409:314:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:24","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"value","nameLocation":"13754:5:24","nodeType":"VariableDeclaration","scope":6657,"src":"13746:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6634,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:24"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6657,"src":"13784:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6637,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:24"},"scope":7570,"src":"13728:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6681,"nodeType":"Block","src":"14304:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"14322:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6668,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6675,"nodeType":"ExpressionStatement","src":"14314:76:24"},{"expression":{"arguments":[{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"14414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6676,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:24","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6664,"id":6680,"nodeType":"Return","src":"14400:20:24"}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"13921:314:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6682,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:24","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"14266:5:24","nodeType":"VariableDeclaration","scope":6682,"src":"14258:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:24"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6682,"src":"14296:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6662,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:24"},"scope":7570,"src":"14240:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"14816:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"14834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6693,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"ExpressionStatement","src":"14826:76:24"},{"expression":{"arguments":[{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"14926:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6701,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:24","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6689,"id":6705,"nodeType":"Return","src":"14912:20:24"}]},"documentation":{"id":6683,"nodeType":"StructuredDocumentation","src":"14433:314:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:24","nodeType":"FunctionDefinition","parameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6685,"mutability":"mutable","name":"value","nameLocation":"14778:5:24","nodeType":"VariableDeclaration","scope":6707,"src":"14770:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6684,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:24"},"returnParameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"14808:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6687,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:24"},"scope":7570,"src":"14752:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6731,"nodeType":"Block","src":"15328:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"15346:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6718,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6725,"nodeType":"ExpressionStatement","src":"15338:76:24"},{"expression":{"arguments":[{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"15438:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6726,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:24","typeDescriptions":{}}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6714,"id":6730,"nodeType":"Return","src":"15424:20:24"}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"14945:314:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":6732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:24","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"15290:5:24","nodeType":"VariableDeclaration","scope":6732,"src":"15282:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:24"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6732,"src":"15320:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6712,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:24"},"scope":7570,"src":"15264:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6756,"nodeType":"Block","src":"15840:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"15858:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6743,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"ExpressionStatement","src":"15850:76:24"},{"expression":{"arguments":[{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"15950:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6751,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:24","typeDescriptions":{}}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6739,"id":6755,"nodeType":"Return","src":"15936:20:24"}]},"documentation":{"id":6733,"nodeType":"StructuredDocumentation","src":"15457:314:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6757,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:24","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"value","nameLocation":"15802:5:24","nodeType":"VariableDeclaration","scope":6757,"src":"15794:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6734,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:24"},"returnParameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"15832:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6737,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:24"},"scope":7570,"src":"15776:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6781,"nodeType":"Block","src":"16352:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"16370:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6768,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6775,"nodeType":"ExpressionStatement","src":"16362:76:24"},{"expression":{"arguments":[{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"16462:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6776,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:24","typeDescriptions":{}}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6764,"id":6780,"nodeType":"Return","src":"16448:20:24"}]},"documentation":{"id":6758,"nodeType":"StructuredDocumentation","src":"15969:314:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":6782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:24","nodeType":"FunctionDefinition","parameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"value","nameLocation":"16314:5:24","nodeType":"VariableDeclaration","scope":6782,"src":"16306:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:24"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6782,"src":"16344:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6762,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:24"},"scope":7570,"src":"16288:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6806,"nodeType":"Block","src":"16858:120:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"16876:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6793,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6792,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6800,"nodeType":"ExpressionStatement","src":"16868:74:24"},{"expression":{"arguments":[{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"16965:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6801,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:24","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6789,"id":6805,"nodeType":"Return","src":"16952:19:24"}]},"documentation":{"id":6783,"nodeType":"StructuredDocumentation","src":"16481:310:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":6807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:24","nodeType":"FunctionDefinition","parameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"value","nameLocation":"16821:5:24","nodeType":"VariableDeclaration","scope":6807,"src":"16813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6784,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:24"},"returnParameters":{"id":6789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6807,"src":"16851:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6787,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:24"},"scope":7570,"src":"16796:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"17252:103:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"17270:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":6815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"ExpressionStatement","src":"17262:55:24"},{"expression":{"arguments":[{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"17342:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:24","typeDescriptions":{}}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6814,"id":6826,"nodeType":"Return","src":"17327:21:24"}]},"documentation":{"id":6808,"nodeType":"StructuredDocumentation","src":"16984:198:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:24","nodeType":"FunctionDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6810,"mutability":"mutable","name":"value","nameLocation":"17213:5:24","nodeType":"VariableDeclaration","scope":6828,"src":"17206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6809,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:24"},"returnParameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6828,"src":"17243:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:24"},"scope":7570,"src":"17187:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"17790:124:24","statements":[{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"17800:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"17820:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6837,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:24","typeDescriptions":{}}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6842,"nodeType":"ExpressionStatement","src":"17800:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"17844:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"17858:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":6843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6849,"nodeType":"ExpressionStatement","src":"17836:71:24"}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"17361:350:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:24","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"17741:5:24","nodeType":"VariableDeclaration","scope":6851,"src":"17734:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:24"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:24","nodeType":"VariableDeclaration","scope":6851,"src":"17771:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6833,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:24"},"scope":7570,"src":"17716:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"18349:124:24","statements":[{"expression":{"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"18359:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"18379:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6860,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:24","typeDescriptions":{}}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6865,"nodeType":"ExpressionStatement","src":"18359:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"18403:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"18417:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"ExpressionStatement","src":"18395:71:24"}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"17920:350:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:24","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"18300:5:24","nodeType":"VariableDeclaration","scope":6874,"src":"18293:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6853,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:24"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:24","nodeType":"VariableDeclaration","scope":6874,"src":"18330:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6856,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:24"},"scope":7570,"src":"18275:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6896,"nodeType":"Block","src":"18908:124:24","statements":[{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"18918:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"18938:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6883,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:24","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6888,"nodeType":"ExpressionStatement","src":"18918:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"18962:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"18976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6895,"nodeType":"ExpressionStatement","src":"18954:71:24"}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"18479:350:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6897,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:24","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"value","nameLocation":"18859:5:24","nodeType":"VariableDeclaration","scope":6897,"src":"18852:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6876,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:24"},"returnParameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:24","nodeType":"VariableDeclaration","scope":6897,"src":"18889:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6879,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:24"},"scope":7570,"src":"18834:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6919,"nodeType":"Block","src":"19467:124:24","statements":[{"expression":{"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"19477:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"19497:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6906,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:24","typeDescriptions":{}}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6911,"nodeType":"ExpressionStatement","src":"19477:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"19521:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"19535:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6918,"nodeType":"ExpressionStatement","src":"19513:71:24"}]},"documentation":{"id":6898,"nodeType":"StructuredDocumentation","src":"19038:350:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":6920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:24","nodeType":"FunctionDefinition","parameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"value","nameLocation":"19418:5:24","nodeType":"VariableDeclaration","scope":6920,"src":"19411:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6899,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:24"},"returnParameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:24","nodeType":"VariableDeclaration","scope":6920,"src":"19448:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6902,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:24"},"scope":7570,"src":"19393:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6942,"nodeType":"Block","src":"20026:124:24","statements":[{"expression":{"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"20036:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"20056:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6929,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:24","typeDescriptions":{}}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6934,"nodeType":"ExpressionStatement","src":"20036:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"20080:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"20094:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6941,"nodeType":"ExpressionStatement","src":"20072:71:24"}]},"documentation":{"id":6921,"nodeType":"StructuredDocumentation","src":"19597:350:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6943,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:24","nodeType":"FunctionDefinition","parameters":{"id":6924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"value","nameLocation":"19977:5:24","nodeType":"VariableDeclaration","scope":6943,"src":"19970:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6922,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:24"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:24","nodeType":"VariableDeclaration","scope":6943,"src":"20007:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6925,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:24"},"scope":7570,"src":"19952:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6965,"nodeType":"Block","src":"20585:124:24","statements":[{"expression":{"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6951,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"20595:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"20615:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6952,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:24","typeDescriptions":{}}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6957,"nodeType":"ExpressionStatement","src":"20595:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"20639:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"20653:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6964,"nodeType":"ExpressionStatement","src":"20631:71:24"}]},"documentation":{"id":6944,"nodeType":"StructuredDocumentation","src":"20156:350:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:24","nodeType":"FunctionDefinition","parameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"value","nameLocation":"20536:5:24","nodeType":"VariableDeclaration","scope":6966,"src":"20529:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6945,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:24"},"returnParameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:24","nodeType":"VariableDeclaration","scope":6966,"src":"20566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6948,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:24"},"scope":7570,"src":"20511:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6988,"nodeType":"Block","src":"21144:124:24","statements":[{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"21154:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"21174:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6975,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:24","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6980,"nodeType":"ExpressionStatement","src":"21154:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"21198:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"21212:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6987,"nodeType":"ExpressionStatement","src":"21190:71:24"}]},"documentation":{"id":6967,"nodeType":"StructuredDocumentation","src":"20715:350:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:24","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"value","nameLocation":"21095:5:24","nodeType":"VariableDeclaration","scope":6989,"src":"21088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6968,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:24"},"returnParameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6972,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:24","nodeType":"VariableDeclaration","scope":6989,"src":"21125:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6971,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:24"},"scope":7570,"src":"21070:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7011,"nodeType":"Block","src":"21703:124:24","statements":[{"expression":{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"21713:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"21733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6998,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:24","typeDescriptions":{}}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7003,"nodeType":"ExpressionStatement","src":"21713:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"21757:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"21771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":7004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7010,"nodeType":"ExpressionStatement","src":"21749:71:24"}]},"documentation":{"id":6990,"nodeType":"StructuredDocumentation","src":"21274:350:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":7012,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:24","nodeType":"FunctionDefinition","parameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"value","nameLocation":"21654:5:24","nodeType":"VariableDeclaration","scope":7012,"src":"21647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6991,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:24"},"returnParameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:24","nodeType":"VariableDeclaration","scope":7012,"src":"21684:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6994,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:24"},"scope":7570,"src":"21629:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7034,"nodeType":"Block","src":"22262:124:24","statements":[{"expression":{"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22272:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"22292:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7021,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:24","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7026,"nodeType":"ExpressionStatement","src":"22272:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22316:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"22330:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":7027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7033,"nodeType":"ExpressionStatement","src":"22308:71:24"}]},"documentation":{"id":7013,"nodeType":"StructuredDocumentation","src":"21833:350:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":7035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:24","nodeType":"FunctionDefinition","parameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"mutability":"mutable","name":"value","nameLocation":"22213:5:24","nodeType":"VariableDeclaration","scope":7035,"src":"22206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7014,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:24"},"returnParameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:24","nodeType":"VariableDeclaration","scope":7035,"src":"22243:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7017,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:24"},"scope":7570,"src":"22188:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7057,"nodeType":"Block","src":"22821:124:24","statements":[{"expression":{"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"22831:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"22851:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7044,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:24","typeDescriptions":{}}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7049,"nodeType":"ExpressionStatement","src":"22831:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"22875:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"22889:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":7050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7056,"nodeType":"ExpressionStatement","src":"22867:71:24"}]},"documentation":{"id":7036,"nodeType":"StructuredDocumentation","src":"22392:350:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:24","nodeType":"FunctionDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"value","nameLocation":"22772:5:24","nodeType":"VariableDeclaration","scope":7058,"src":"22765:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7037,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:24"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:24","nodeType":"VariableDeclaration","scope":7058,"src":"22802:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7040,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:24"},"scope":7570,"src":"22747:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7080,"nodeType":"Block","src":"23380:124:24","statements":[{"expression":{"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"23390:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"23410:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7067,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:24","typeDescriptions":{}}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7072,"nodeType":"ExpressionStatement","src":"23390:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"23434:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"23448:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":7073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7079,"nodeType":"ExpressionStatement","src":"23426:71:24"}]},"documentation":{"id":7059,"nodeType":"StructuredDocumentation","src":"22951:350:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":7081,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:24","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"value","nameLocation":"23331:5:24","nodeType":"VariableDeclaration","scope":7081,"src":"23324:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7060,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:24"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:24","nodeType":"VariableDeclaration","scope":7081,"src":"23361:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7063,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:24"},"scope":7570,"src":"23306:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7103,"nodeType":"Block","src":"23939:124:24","statements":[{"expression":{"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"23949:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"23969:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7090,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:24","typeDescriptions":{}}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7095,"nodeType":"ExpressionStatement","src":"23949:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"23993:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"24007:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":7096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"ExpressionStatement","src":"23985:71:24"}]},"documentation":{"id":7082,"nodeType":"StructuredDocumentation","src":"23510:350:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":7104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:24","nodeType":"FunctionDefinition","parameters":{"id":7085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7084,"mutability":"mutable","name":"value","nameLocation":"23890:5:24","nodeType":"VariableDeclaration","scope":7104,"src":"23883:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7083,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:24"},"returnParameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:24","nodeType":"VariableDeclaration","scope":7104,"src":"23920:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7086,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:24"},"scope":7570,"src":"23865:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7126,"nodeType":"Block","src":"24498:124:24","statements":[{"expression":{"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"24508:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"24528:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7113,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:24","typeDescriptions":{}}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7118,"nodeType":"ExpressionStatement","src":"24508:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"24552:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"24566:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":7123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":7119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7125,"nodeType":"ExpressionStatement","src":"24544:71:24"}]},"documentation":{"id":7105,"nodeType":"StructuredDocumentation","src":"24069:350:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":7127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:24","nodeType":"FunctionDefinition","parameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"mutability":"mutable","name":"value","nameLocation":"24449:5:24","nodeType":"VariableDeclaration","scope":7127,"src":"24442:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7106,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:24"},"returnParameters":{"id":7111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7110,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:24","nodeType":"VariableDeclaration","scope":7127,"src":"24479:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7109,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:24"},"scope":7570,"src":"24424:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7149,"nodeType":"Block","src":"25057:124:24","statements":[{"expression":{"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"25067:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"25087:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7136,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:24","typeDescriptions":{}}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7141,"nodeType":"ExpressionStatement","src":"25067:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"25111:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"25125:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":7142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7148,"nodeType":"ExpressionStatement","src":"25103:71:24"}]},"documentation":{"id":7128,"nodeType":"StructuredDocumentation","src":"24628:350:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":7150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:24","nodeType":"FunctionDefinition","parameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"value","nameLocation":"25008:5:24","nodeType":"VariableDeclaration","scope":7150,"src":"25001:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7129,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:24"},"returnParameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:24","nodeType":"VariableDeclaration","scope":7150,"src":"25038:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7132,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:24"},"scope":7570,"src":"24983:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7172,"nodeType":"Block","src":"25616:124:24","statements":[{"expression":{"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"25626:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"25646:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7159,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:24","typeDescriptions":{}}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7164,"nodeType":"ExpressionStatement","src":"25626:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"25670:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"25684:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":7165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7171,"nodeType":"ExpressionStatement","src":"25662:71:24"}]},"documentation":{"id":7151,"nodeType":"StructuredDocumentation","src":"25187:350:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":7173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:24","nodeType":"FunctionDefinition","parameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"mutability":"mutable","name":"value","nameLocation":"25567:5:24","nodeType":"VariableDeclaration","scope":7173,"src":"25560:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7152,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:24"},"returnParameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:24","nodeType":"VariableDeclaration","scope":7173,"src":"25597:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7155,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:24"},"scope":7570,"src":"25542:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7195,"nodeType":"Block","src":"26175:124:24","statements":[{"expression":{"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"26185:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"26205:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7182,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:24","typeDescriptions":{}}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7187,"nodeType":"ExpressionStatement","src":"26185:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"26229:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"26243:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":7192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":7188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7194,"nodeType":"ExpressionStatement","src":"26221:71:24"}]},"documentation":{"id":7174,"nodeType":"StructuredDocumentation","src":"25746:350:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:24","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"value","nameLocation":"26126:5:24","nodeType":"VariableDeclaration","scope":7196,"src":"26119:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7175,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:24"},"returnParameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:24","nodeType":"VariableDeclaration","scope":7196,"src":"26156:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7178,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:24"},"scope":7570,"src":"26101:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7218,"nodeType":"Block","src":"26734:124:24","statements":[{"expression":{"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"26744:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"26764:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7205,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:24","typeDescriptions":{}}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7210,"nodeType":"ExpressionStatement","src":"26744:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"26788:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"26802:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":7211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"ExpressionStatement","src":"26780:71:24"}]},"documentation":{"id":7197,"nodeType":"StructuredDocumentation","src":"26305:350:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":7219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:24","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"value","nameLocation":"26685:5:24","nodeType":"VariableDeclaration","scope":7219,"src":"26678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7198,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:24"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:24","nodeType":"VariableDeclaration","scope":7219,"src":"26715:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7201,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:24"},"scope":7570,"src":"26660:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7241,"nodeType":"Block","src":"27293:124:24","statements":[{"expression":{"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"27303:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"27323:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7228,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:24","typeDescriptions":{}}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7233,"nodeType":"ExpressionStatement","src":"27303:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"27347:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"27361:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":7234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7240,"nodeType":"ExpressionStatement","src":"27339:71:24"}]},"documentation":{"id":7220,"nodeType":"StructuredDocumentation","src":"26864:350:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":7242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:24","nodeType":"FunctionDefinition","parameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"value","nameLocation":"27244:5:24","nodeType":"VariableDeclaration","scope":7242,"src":"27237:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7221,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:24"},"returnParameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:24","nodeType":"VariableDeclaration","scope":7242,"src":"27274:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7224,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:24"},"scope":7570,"src":"27219:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"27852:124:24","statements":[{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"27862:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"27882:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7251,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:24","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7256,"nodeType":"ExpressionStatement","src":"27862:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"27906:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"27920:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":7257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7263,"nodeType":"ExpressionStatement","src":"27898:71:24"}]},"documentation":{"id":7243,"nodeType":"StructuredDocumentation","src":"27423:350:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:24","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"value","nameLocation":"27803:5:24","nodeType":"VariableDeclaration","scope":7265,"src":"27796:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7244,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:24"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:24","nodeType":"VariableDeclaration","scope":7265,"src":"27833:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7247,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:24"},"scope":7570,"src":"27778:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7287,"nodeType":"Block","src":"28404:122:24","statements":[{"expression":{"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28414:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"28433:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7274,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:24","typeDescriptions":{}}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7279,"nodeType":"ExpressionStatement","src":"28414:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28457:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"28471:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":7280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7286,"nodeType":"ExpressionStatement","src":"28449:70:24"}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"27982:345:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":7288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:24","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"value","nameLocation":"28356:5:24","nodeType":"VariableDeclaration","scope":7288,"src":"28349:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7267,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:24"},"returnParameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:24","nodeType":"VariableDeclaration","scope":7288,"src":"28386:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7270,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:24"},"scope":7570,"src":"28332:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7310,"nodeType":"Block","src":"28954:122:24","statements":[{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"28964:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"28983:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7297,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:24","typeDescriptions":{}}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7302,"nodeType":"ExpressionStatement","src":"28964:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29007:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29021:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":7303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7309,"nodeType":"ExpressionStatement","src":"28999:70:24"}]},"documentation":{"id":7289,"nodeType":"StructuredDocumentation","src":"28532:345:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":7311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:24","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"value","nameLocation":"28906:5:24","nodeType":"VariableDeclaration","scope":7311,"src":"28899:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7290,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:24"},"returnParameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:24","nodeType":"VariableDeclaration","scope":7311,"src":"28936:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7293,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:24"},"scope":7570,"src":"28882:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7333,"nodeType":"Block","src":"29504:122:24","statements":[{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"29514:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"29533:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7320,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:24","typeDescriptions":{}}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7325,"nodeType":"ExpressionStatement","src":"29514:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"29557:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"29571:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":7326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7332,"nodeType":"ExpressionStatement","src":"29549:70:24"}]},"documentation":{"id":7312,"nodeType":"StructuredDocumentation","src":"29082:345:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":7334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:24","nodeType":"FunctionDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"value","nameLocation":"29456:5:24","nodeType":"VariableDeclaration","scope":7334,"src":"29449:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7313,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:24"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:24","nodeType":"VariableDeclaration","scope":7334,"src":"29486:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7316,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:24"},"scope":7570,"src":"29432:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7356,"nodeType":"Block","src":"30054:122:24","statements":[{"expression":{"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"30064:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"30083:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7343,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:24","typeDescriptions":{}}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7348,"nodeType":"ExpressionStatement","src":"30064:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"30107:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"30121:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":7353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":7349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7355,"nodeType":"ExpressionStatement","src":"30099:70:24"}]},"documentation":{"id":7335,"nodeType":"StructuredDocumentation","src":"29632:345:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":7357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:24","nodeType":"FunctionDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"value","nameLocation":"30006:5:24","nodeType":"VariableDeclaration","scope":7357,"src":"29999:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7336,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:24"},"returnParameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:24","nodeType":"VariableDeclaration","scope":7357,"src":"30036:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7339,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:24"},"scope":7570,"src":"29982:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7379,"nodeType":"Block","src":"30604:122:24","statements":[{"expression":{"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"30614:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"30633:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7366,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:24","typeDescriptions":{}}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7371,"nodeType":"ExpressionStatement","src":"30614:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"30657:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"30671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":7372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7378,"nodeType":"ExpressionStatement","src":"30649:70:24"}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"30182:345:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":7380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:24","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"value","nameLocation":"30556:5:24","nodeType":"VariableDeclaration","scope":7380,"src":"30549:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7359,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:24"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:24","nodeType":"VariableDeclaration","scope":7380,"src":"30586:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7362,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:24"},"scope":7570,"src":"30532:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7402,"nodeType":"Block","src":"31154:122:24","statements":[{"expression":{"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"31164:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"31183:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7389,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:24","typeDescriptions":{}}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7394,"nodeType":"ExpressionStatement","src":"31164:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7396,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"31207:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"31221:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":7395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"ExpressionStatement","src":"31199:70:24"}]},"documentation":{"id":7381,"nodeType":"StructuredDocumentation","src":"30732:345:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":7403,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:24","nodeType":"FunctionDefinition","parameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"value","nameLocation":"31106:5:24","nodeType":"VariableDeclaration","scope":7403,"src":"31099:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7382,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:24"},"returnParameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:24","nodeType":"VariableDeclaration","scope":7403,"src":"31136:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7385,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:24"},"scope":7570,"src":"31082:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"31704:122:24","statements":[{"expression":{"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"31714:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"31733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7412,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:24","typeDescriptions":{}}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7417,"nodeType":"ExpressionStatement","src":"31714:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"31757:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"31771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":7422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":7418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"ExpressionStatement","src":"31749:70:24"}]},"documentation":{"id":7404,"nodeType":"StructuredDocumentation","src":"31282:345:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:24","nodeType":"FunctionDefinition","parameters":{"id":7407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"mutability":"mutable","name":"value","nameLocation":"31656:5:24","nodeType":"VariableDeclaration","scope":7426,"src":"31649:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7405,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:24"},"returnParameters":{"id":7410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:24","nodeType":"VariableDeclaration","scope":7426,"src":"31686:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7408,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:24"},"scope":7570,"src":"31632:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7448,"nodeType":"Block","src":"32254:122:24","statements":[{"expression":{"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"32264:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"32283:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7435,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:24","typeDescriptions":{}}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7440,"nodeType":"ExpressionStatement","src":"32264:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"32307:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"32321:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":7441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"ExpressionStatement","src":"32299:70:24"}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"31832:345:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":7449,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:24","nodeType":"FunctionDefinition","parameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"value","nameLocation":"32206:5:24","nodeType":"VariableDeclaration","scope":7449,"src":"32199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7428,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:24"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:24","nodeType":"VariableDeclaration","scope":7449,"src":"32236:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7431,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:24"},"scope":7570,"src":"32182:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7471,"nodeType":"Block","src":"32804:122:24","statements":[{"expression":{"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"32814:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"32833:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7458,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:24","typeDescriptions":{}}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7463,"nodeType":"ExpressionStatement","src":"32814:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"32857:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"32871:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":7468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":7464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"ExpressionStatement","src":"32849:70:24"}]},"documentation":{"id":7450,"nodeType":"StructuredDocumentation","src":"32382:345:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":7472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:24","nodeType":"FunctionDefinition","parameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"value","nameLocation":"32756:5:24","nodeType":"VariableDeclaration","scope":7472,"src":"32749:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7451,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:24"},"returnParameters":{"id":7456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7455,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:24","nodeType":"VariableDeclaration","scope":7472,"src":"32786:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7454,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:24"},"scope":7570,"src":"32732:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7494,"nodeType":"Block","src":"33354:122:24","statements":[{"expression":{"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"33364:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"33383:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7481,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:24","typeDescriptions":{}}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7486,"nodeType":"ExpressionStatement","src":"33364:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"33407:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"33421:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":7487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7493,"nodeType":"ExpressionStatement","src":"33399:70:24"}]},"documentation":{"id":7473,"nodeType":"StructuredDocumentation","src":"32932:345:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":7495,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:24","nodeType":"FunctionDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"value","nameLocation":"33306:5:24","nodeType":"VariableDeclaration","scope":7495,"src":"33299:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7474,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:24"},"returnParameters":{"id":7479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7478,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:24","nodeType":"VariableDeclaration","scope":7495,"src":"33336:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7477,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:24"},"scope":7570,"src":"33282:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7517,"nodeType":"Block","src":"33904:122:24","statements":[{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"33914:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"33933:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7504,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:24","typeDescriptions":{}}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7509,"nodeType":"ExpressionStatement","src":"33914:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"33957:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"33971:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":7510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"33949:70:24"}]},"documentation":{"id":7496,"nodeType":"StructuredDocumentation","src":"33482:345:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":7518,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:24","nodeType":"FunctionDefinition","parameters":{"id":7499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7498,"mutability":"mutable","name":"value","nameLocation":"33856:5:24","nodeType":"VariableDeclaration","scope":7518,"src":"33849:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7497,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:24"},"returnParameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:24","nodeType":"VariableDeclaration","scope":7518,"src":"33886:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7500,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:24"},"scope":7570,"src":"33832:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7540,"nodeType":"Block","src":"34447:120:24","statements":[{"expression":{"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"34457:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"34475:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7527,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:24","typeDescriptions":{}}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7532,"nodeType":"ExpressionStatement","src":"34457:24:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"34499:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"34513:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":7533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7539,"nodeType":"ExpressionStatement","src":"34491:69:24"}]},"documentation":{"id":7519,"nodeType":"StructuredDocumentation","src":"34032:340:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":7541,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:24","nodeType":"FunctionDefinition","parameters":{"id":7522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7521,"mutability":"mutable","name":"value","nameLocation":"34400:5:24","nodeType":"VariableDeclaration","scope":7541,"src":"34393:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7520,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:24"},"returnParameters":{"id":7525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:24","nodeType":"VariableDeclaration","scope":7541,"src":"34430:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7523,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:24"},"scope":7570,"src":"34377:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7568,"nodeType":"Block","src":"34845:233:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"34962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7554,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7551,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:24","typeDescriptions":{}}},"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":7549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7562,"nodeType":"ExpressionStatement","src":"34954:87:24"},{"expression":{"arguments":[{"id":7565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"35065:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7563,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:24","typeDescriptions":{}}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7548,"id":7567,"nodeType":"Return","src":"35051:20:24"}]},"documentation":{"id":7542,"nodeType":"StructuredDocumentation","src":"34573:203:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":7569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:24","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"value","nameLocation":"34807:5:24","nodeType":"VariableDeclaration","scope":7569,"src":"34799:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7543,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:24"},"returnParameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7569,"src":"34837:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7546,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:24"},"scope":7570,"src":"34781:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7571,"src":"927:34153:24","usedErrors":[]}],"src":"192:34889:24"},"id":24},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[8183]},"id":8184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7572,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":7573,"nodeType":"StructuredDocumentation","src":"230:1090:25","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":8183,"linearizedBaseContracts":[8183],"name":"EnumerableSet","nameLocation":"1329:13:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":7581,"members":[{"constant":false,"id":7576,"mutability":"mutable","name":"_values","nameLocation":"1853:7:25","nodeType":"VariableDeclaration","scope":7581,"src":"1843:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1843:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7575,"nodeType":"ArrayTypeName","src":"1843:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7580,"mutability":"mutable","name":"_indexes","nameLocation":"2021:8:25","nodeType":"VariableDeclaration","scope":7581,"src":"1993:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7579,"keyType":{"id":7577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1796:3:25","nodeType":"StructDefinition","scope":8183,"src":"1789:247:25","visibility":"public"},{"body":{"id":7622,"nodeType":"Block","src":"2275:335:25","statements":[{"condition":{"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2289:22:25","subExpression":{"arguments":[{"id":7593,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"2300:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":7594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2305:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7592,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"2290:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7620,"nodeType":"Block","src":"2567:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2588:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7591,"id":7619,"nodeType":"Return","src":"2581:12:25"}]},"id":7621,"nodeType":"IfStatement","src":"2285:319:25","trueBody":{"id":7617,"nodeType":"Block","src":"2313:248:25","statements":[{"expression":{"arguments":[{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2344:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":7597,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"2327:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"2327:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2327:16:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7604,"nodeType":"ExpressionStatement","src":"2327:23:25"},{"expression":{"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7605,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"2485:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7580,"src":"2485:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7609,"indexExpression":{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2498:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2485:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":7610,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"2507:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"2507:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2507:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7614,"nodeType":"ExpressionStatement","src":"2485:40:25"},{"expression":{"hexValue":"74727565","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2546:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7591,"id":7616,"nodeType":"Return","src":"2539:11:25"}]}}]},"documentation":{"id":7582,"nodeType":"StructuredDocumentation","src":"2042:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7623,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2215:4:25","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"set","nameLocation":"2232:3:25","nodeType":"VariableDeclaration","scope":7623,"src":"2220:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7584,"nodeType":"UserDefinedTypeName","pathNode":{"id":7583,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"2220:3:25"},"referencedDeclaration":7581,"src":"2220:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7587,"mutability":"mutable","name":"value","nameLocation":"2245:5:25","nodeType":"VariableDeclaration","scope":7623,"src":"2237:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2237:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2219:32:25"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7623,"src":"2269:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7589,"name":"bool","nodeType":"ElementaryTypeName","src":"2269:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2268:6:25"},"scope":8183,"src":"2206:404:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7706,"nodeType":"Block","src":"2850:1316:25","statements":[{"assignments":[7635],"declarations":[{"constant":false,"id":7635,"mutability":"mutable","name":"valueIndex","nameLocation":"2968:10:25","nodeType":"VariableDeclaration","scope":7706,"src":"2960:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7640,"initialValue":{"baseExpression":{"expression":{"id":7636,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"2981:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7580,"src":"2981:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7639,"indexExpression":{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2994:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:40:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3015:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3015:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7704,"nodeType":"Block","src":"4123:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4144:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7633,"id":7703,"nodeType":"Return","src":"4137:12:25"}]},"id":7705,"nodeType":"IfStatement","src":"3011:1149:25","trueBody":{"id":7701,"nodeType":"Block","src":"3032:1085:25","statements":[{"assignments":[7645],"declarations":[{"constant":false,"id":7645,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3392:13:25","nodeType":"VariableDeclaration","scope":7701,"src":"3384:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7649,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7646,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3408:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3421:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3408:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3384:38:25"},{"assignments":[7651],"declarations":[{"constant":false,"id":7651,"mutability":"mutable","name":"lastIndex","nameLocation":"3444:9:25","nodeType":"VariableDeclaration","scope":7701,"src":"3436:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7657,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7652,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"3456:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"3456:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3456:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3456:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3436:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"3497:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7659,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"3510:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7685,"nodeType":"IfStatement","src":"3493:398:25","trueBody":{"id":7684,"nodeType":"Block","src":"3525:366:25","statements":[{"assignments":[7662],"declarations":[{"constant":false,"id":7662,"mutability":"mutable","name":"lastValue","nameLocation":"3551:9:25","nodeType":"VariableDeclaration","scope":7684,"src":"3543:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7667,"initialValue":{"baseExpression":{"expression":{"id":7663,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"3563:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"3563:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7666,"indexExpression":{"id":7665,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"3575:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3543:42:25"},{"expression":{"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7668,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"3685:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"3685:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7672,"indexExpression":{"id":7670,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"3697:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3685:26:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7673,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"3714:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3685:38:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7675,"nodeType":"ExpressionStatement","src":"3685:38:25"},{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7676,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"3797:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7580,"src":"3797:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7680,"indexExpression":{"id":7678,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"3810:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3797:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7681,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3823:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7683,"nodeType":"ExpressionStatement","src":"3797:36:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7686,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"3969:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"3969:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3969:15:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7692,"nodeType":"ExpressionStatement","src":"3969:17:25"},{"expression":{"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4054:26:25","subExpression":{"baseExpression":{"expression":{"id":7693,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"4061:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7580,"src":"4061:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7696,"indexExpression":{"id":7695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"4074:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4061:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7698,"nodeType":"ExpressionStatement","src":"4054:26:25"},{"expression":{"hexValue":"74727565","id":7699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4102:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7633,"id":7700,"nodeType":"Return","src":"4095:11:25"}]}}]},"documentation":{"id":7624,"nodeType":"StructuredDocumentation","src":"2616:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7707,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2787:7:25","nodeType":"FunctionDefinition","parameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7627,"mutability":"mutable","name":"set","nameLocation":"2807:3:25","nodeType":"VariableDeclaration","scope":7707,"src":"2795:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7626,"nodeType":"UserDefinedTypeName","pathNode":{"id":7625,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"2795:3:25"},"referencedDeclaration":7581,"src":"2795:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7629,"mutability":"mutable","name":"value","nameLocation":"2820:5:25","nodeType":"VariableDeclaration","scope":7707,"src":"2812:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2812:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:32:25"},"returnParameters":{"id":7633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7707,"src":"2844:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7631,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2843:6:25"},"scope":8183,"src":"2778:1388:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7725,"nodeType":"Block","src":"4326:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7718,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"4343:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7580,"src":"4343:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7721,"indexExpression":{"id":7720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"4356:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4343:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4343:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7717,"id":7724,"nodeType":"Return","src":"4336:31:25"}]},"documentation":{"id":7708,"nodeType":"StructuredDocumentation","src":"4172:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":7726,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4256:9:25","nodeType":"FunctionDefinition","parameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"set","nameLocation":"4278:3:25","nodeType":"VariableDeclaration","scope":7726,"src":"4266:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7710,"nodeType":"UserDefinedTypeName","pathNode":{"id":7709,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"4266:3:25"},"referencedDeclaration":7581,"src":"4266:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7713,"mutability":"mutable","name":"value","nameLocation":"4291:5:25","nodeType":"VariableDeclaration","scope":7726,"src":"4283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4265:32:25"},"returnParameters":{"id":7717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7726,"src":"4320:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7715,"name":"bool","nodeType":"ElementaryTypeName","src":"4320:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4319:6:25"},"scope":8183,"src":"4247:127:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7739,"nodeType":"Block","src":"4520:42:25","statements":[{"expression":{"expression":{"expression":{"id":7735,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"4537:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"4537:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4537:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7734,"id":7738,"nodeType":"Return","src":"4530:25:25"}]},"documentation":{"id":7727,"nodeType":"StructuredDocumentation","src":"4380:70:25","text":" @dev Returns the number of values on the set. O(1)."},"id":7740,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4464:7:25","nodeType":"FunctionDefinition","parameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"set","nameLocation":"4484:3:25","nodeType":"VariableDeclaration","scope":7740,"src":"4472:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7729,"nodeType":"UserDefinedTypeName","pathNode":{"id":7728,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"4472:3:25"},"referencedDeclaration":7581,"src":"4472:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4471:17:25"},"returnParameters":{"id":7734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7740,"src":"4511:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:9:25"},"scope":8183,"src":"4455:107:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7756,"nodeType":"Block","src":"4980:42:25","statements":[{"expression":{"baseExpression":{"expression":{"id":7751,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"4997:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"4997:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7754,"indexExpression":{"id":7753,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"5009:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4997:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7750,"id":7755,"nodeType":"Return","src":"4990:25:25"}]},"documentation":{"id":7741,"nodeType":"StructuredDocumentation","src":"4568:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7757,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4913:3:25","nodeType":"FunctionDefinition","parameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7744,"mutability":"mutable","name":"set","nameLocation":"4929:3:25","nodeType":"VariableDeclaration","scope":7757,"src":"4917:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7743,"nodeType":"UserDefinedTypeName","pathNode":{"id":7742,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"4917:3:25"},"referencedDeclaration":7581,"src":"4917:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7746,"mutability":"mutable","name":"index","nameLocation":"4942:5:25","nodeType":"VariableDeclaration","scope":7757,"src":"4934:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:32:25"},"returnParameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7757,"src":"4971:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4971:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4970:9:25"},"scope":8183,"src":"4904:118:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7770,"nodeType":"Block","src":"5636:35:25","statements":[{"expression":{"expression":{"id":7767,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"5653:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"5653:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":7766,"id":7769,"nodeType":"Return","src":"5646:18:25"}]},"documentation":{"id":7758,"nodeType":"StructuredDocumentation","src":"5028:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7771,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5571:7:25","nodeType":"FunctionDefinition","parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"set","nameLocation":"5591:3:25","nodeType":"VariableDeclaration","scope":7771,"src":"5579:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7760,"nodeType":"UserDefinedTypeName","pathNode":{"id":7759,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"5579:3:25"},"referencedDeclaration":7581,"src":"5579:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5578:17:25"},"returnParameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7771,"src":"5618:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7764,"nodeType":"ArrayTypeName","src":"5618:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:25"},"scope":8183,"src":"5562:109:25","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":7775,"members":[{"constant":false,"id":7774,"mutability":"mutable","name":"_inner","nameLocation":"5728:6:25","nodeType":"VariableDeclaration","scope":7775,"src":"5724:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7773,"nodeType":"UserDefinedTypeName","pathNode":{"id":7772,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"5724:3:25"},"referencedDeclaration":7581,"src":"5724:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5703:10:25","nodeType":"StructDefinition","scope":8183,"src":"5696:45:25","visibility":"public"},{"body":{"id":7792,"nodeType":"Block","src":"5987:47:25","statements":[{"expression":{"arguments":[{"expression":{"id":7787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"6009:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"6009:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"6021:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7786,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"6004:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6004:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7785,"id":7791,"nodeType":"Return","src":"5997:30:25"}]},"documentation":{"id":7776,"nodeType":"StructuredDocumentation","src":"5747:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7793,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5920:3:25","nodeType":"FunctionDefinition","parameters":{"id":7782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"set","nameLocation":"5943:3:25","nodeType":"VariableDeclaration","scope":7793,"src":"5924:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7778,"nodeType":"UserDefinedTypeName","pathNode":{"id":7777,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"5924:10:25"},"referencedDeclaration":7775,"src":"5924:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7781,"mutability":"mutable","name":"value","nameLocation":"5956:5:25","nodeType":"VariableDeclaration","scope":7793,"src":"5948:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5923:39:25"},"returnParameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7793,"src":"5981:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7783,"name":"bool","nodeType":"ElementaryTypeName","src":"5981:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5980:6:25"},"scope":8183,"src":"5911:123:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7810,"nodeType":"Block","src":"6281:50:25","statements":[{"expression":{"arguments":[{"expression":{"id":7805,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"6306:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"6306:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"6318:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7804,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"6298:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6298:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7803,"id":7809,"nodeType":"Return","src":"6291:33:25"}]},"documentation":{"id":7794,"nodeType":"StructuredDocumentation","src":"6040:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7811,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6211:6:25","nodeType":"FunctionDefinition","parameters":{"id":7800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"set","nameLocation":"6237:3:25","nodeType":"VariableDeclaration","scope":7811,"src":"6218:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7796,"nodeType":"UserDefinedTypeName","pathNode":{"id":7795,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"6218:10:25"},"referencedDeclaration":7775,"src":"6218:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7799,"mutability":"mutable","name":"value","nameLocation":"6250:5:25","nodeType":"VariableDeclaration","scope":7811,"src":"6242:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:39:25"},"returnParameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7811,"src":"6275:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7801,"name":"bool","nodeType":"ElementaryTypeName","src":"6275:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6274:6:25"},"scope":8183,"src":"6202:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7828,"nodeType":"Block","src":"6498:52:25","statements":[{"expression":{"arguments":[{"expression":{"id":7823,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"6525:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"6525:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"6537:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7822,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"6515:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6515:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7821,"id":7827,"nodeType":"Return","src":"6508:35:25"}]},"documentation":{"id":7812,"nodeType":"StructuredDocumentation","src":"6337:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":7829,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6421:8:25","nodeType":"FunctionDefinition","parameters":{"id":7818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"set","nameLocation":"6449:3:25","nodeType":"VariableDeclaration","scope":7829,"src":"6430:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7814,"nodeType":"UserDefinedTypeName","pathNode":{"id":7813,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"6430:10:25"},"referencedDeclaration":7775,"src":"6430:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7817,"mutability":"mutable","name":"value","nameLocation":"6462:5:25","nodeType":"VariableDeclaration","scope":7829,"src":"6454:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6454:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6429:39:25"},"returnParameters":{"id":7821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7829,"src":"6492:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7819,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6491:6:25"},"scope":8183,"src":"6412:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7843,"nodeType":"Block","src":"6703:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":7839,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"6728:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"6728:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7838,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"6720:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7837,"id":7842,"nodeType":"Return","src":"6713:26:25"}]},"documentation":{"id":7830,"nodeType":"StructuredDocumentation","src":"6556:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":7844,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6640:6:25","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"set","nameLocation":"6666:3:25","nodeType":"VariableDeclaration","scope":7844,"src":"6647:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7832,"nodeType":"UserDefinedTypeName","pathNode":{"id":7831,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"6647:10:25"},"referencedDeclaration":7775,"src":"6647:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6646:24:25"},"returnParameters":{"id":7837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7844,"src":"6694:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6694:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:9:25"},"scope":8183,"src":"6631:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7861,"nodeType":"Block","src":"7171:46:25","statements":[{"expression":{"arguments":[{"expression":{"id":7856,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"7192:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"7192:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7858,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"7204:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7855,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"7188:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7854,"id":7860,"nodeType":"Return","src":"7181:29:25"}]},"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"6752:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7862,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7097:2:25","nodeType":"FunctionDefinition","parameters":{"id":7851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7848,"mutability":"mutable","name":"set","nameLocation":"7119:3:25","nodeType":"VariableDeclaration","scope":7862,"src":"7100:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7847,"nodeType":"UserDefinedTypeName","pathNode":{"id":7846,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"7100:10:25"},"referencedDeclaration":7775,"src":"7100:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7850,"mutability":"mutable","name":"index","nameLocation":"7132:5:25","nodeType":"VariableDeclaration","scope":7862,"src":"7124:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7849,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7099:39:25"},"returnParameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7862,"src":"7162:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7162:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7161:9:25"},"scope":8183,"src":"7088:129:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7891,"nodeType":"Block","src":"7838:219:25","statements":[{"assignments":[7876],"declarations":[{"constant":false,"id":7876,"mutability":"mutable","name":"store","nameLocation":"7865:5:25","nodeType":"VariableDeclaration","scope":7891,"src":"7848:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7848:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7875,"nodeType":"ArrayTypeName","src":"7848:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7881,"initialValue":{"arguments":[{"expression":{"id":7878,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"7881:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7774,"src":"7881:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7877,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"7873:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7873:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7848:44:25"},{"assignments":[7886],"declarations":[{"constant":false,"id":7886,"mutability":"mutable","name":"result","nameLocation":"7919:6:25","nodeType":"VariableDeclaration","scope":7891,"src":"7902:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7885,"nodeType":"ArrayTypeName","src":"7902:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7887,"nodeType":"VariableDeclarationStatement","src":"7902:23:25"},{"AST":{"nodeType":"YulBlock","src":"7988:39:25","statements":[{"nodeType":"YulAssignment","src":"8002:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"8012:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8002:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":7886,"isOffset":false,"isSlot":false,"src":"8002:6:25","valueSize":1},{"declaration":7876,"isOffset":false,"isSlot":false,"src":"8012:5:25","valueSize":1}],"id":7888,"nodeType":"InlineAssembly","src":"7979:48:25"},{"expression":{"id":7889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"8044:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":7871,"id":7890,"nodeType":"Return","src":"8037:13:25"}]},"documentation":{"id":7863,"nodeType":"StructuredDocumentation","src":"7223:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7892,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7766:6:25","nodeType":"FunctionDefinition","parameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"set","nameLocation":"7792:3:25","nodeType":"VariableDeclaration","scope":7892,"src":"7773:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7865,"nodeType":"UserDefinedTypeName","pathNode":{"id":7864,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":7775,"src":"7773:10:25"},"referencedDeclaration":7775,"src":"7773:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7775_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7772:24:25"},"returnParameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7892,"src":"7820:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7820:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7869,"nodeType":"ArrayTypeName","src":"7820:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7819:18:25"},"scope":8183,"src":"7757:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":7896,"members":[{"constant":false,"id":7895,"mutability":"mutable","name":"_inner","nameLocation":"8114:6:25","nodeType":"VariableDeclaration","scope":7896,"src":"8110:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7894,"nodeType":"UserDefinedTypeName","pathNode":{"id":7893,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"8110:3:25"},"referencedDeclaration":7581,"src":"8110:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8089:10:25","nodeType":"StructDefinition","scope":8183,"src":"8082:45:25","visibility":"public"},{"body":{"id":7922,"nodeType":"Block","src":"8373:74:25","statements":[{"expression":{"arguments":[{"expression":{"id":7908,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"8395:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"8395:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"8431:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7914,"name":"uint160","nodeType":"ElementaryTypeName","src":"8423:7:25","typeDescriptions":{}}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:25","typeDescriptions":{}}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8407:7:25","typeDescriptions":{}}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8407:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7907,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"8390:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8390:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7906,"id":7921,"nodeType":"Return","src":"8383:57:25"}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"8133:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7923,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8306:3:25","nodeType":"FunctionDefinition","parameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"set","nameLocation":"8329:3:25","nodeType":"VariableDeclaration","scope":7923,"src":"8310:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7899,"nodeType":"UserDefinedTypeName","pathNode":{"id":7898,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"8310:10:25"},"referencedDeclaration":7896,"src":"8310:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7902,"mutability":"mutable","name":"value","nameLocation":"8342:5:25","nodeType":"VariableDeclaration","scope":7923,"src":"8334:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7901,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8309:39:25"},"returnParameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7923,"src":"8367:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7904,"name":"bool","nodeType":"ElementaryTypeName","src":"8367:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8366:6:25"},"scope":8183,"src":"8297:150:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7949,"nodeType":"Block","src":"8694:77:25","statements":[{"expression":{"arguments":[{"expression":{"id":7935,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"8719:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"8719:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"8755:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7941,"name":"uint160","nodeType":"ElementaryTypeName","src":"8747:7:25","typeDescriptions":{}}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7939,"name":"uint256","nodeType":"ElementaryTypeName","src":"8739:7:25","typeDescriptions":{}}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8731:7:25","typeDescriptions":{}}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8731:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7934,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"8711:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8711:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7933,"id":7948,"nodeType":"Return","src":"8704:60:25"}]},"documentation":{"id":7924,"nodeType":"StructuredDocumentation","src":"8453:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7950,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8624:6:25","nodeType":"FunctionDefinition","parameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"mutability":"mutable","name":"set","nameLocation":"8650:3:25","nodeType":"VariableDeclaration","scope":7950,"src":"8631:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7926,"nodeType":"UserDefinedTypeName","pathNode":{"id":7925,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"8631:10:25"},"referencedDeclaration":7896,"src":"8631:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7929,"mutability":"mutable","name":"value","nameLocation":"8663:5:25","nodeType":"VariableDeclaration","scope":7950,"src":"8655:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7928,"name":"address","nodeType":"ElementaryTypeName","src":"8655:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8630:39:25"},"returnParameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7950,"src":"8688:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7931,"name":"bool","nodeType":"ElementaryTypeName","src":"8688:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8687:6:25"},"scope":8183,"src":"8615:156:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7976,"nodeType":"Block","src":"8938:79:25","statements":[{"expression":{"arguments":[{"expression":{"id":7962,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"8965:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"8965:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"9001:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7968,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:25","typeDescriptions":{}}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7966,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:25","typeDescriptions":{}}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8977:7:25","typeDescriptions":{}}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8977:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7961,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"8955:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8955:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7960,"id":7975,"nodeType":"Return","src":"8948:62:25"}]},"documentation":{"id":7951,"nodeType":"StructuredDocumentation","src":"8777:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":7977,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8861:8:25","nodeType":"FunctionDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"set","nameLocation":"8889:3:25","nodeType":"VariableDeclaration","scope":7977,"src":"8870:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7953,"nodeType":"UserDefinedTypeName","pathNode":{"id":7952,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"8870:10:25"},"referencedDeclaration":7896,"src":"8870:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7956,"mutability":"mutable","name":"value","nameLocation":"8902:5:25","nodeType":"VariableDeclaration","scope":7977,"src":"8894:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7955,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8869:39:25"},"returnParameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7977,"src":"8932:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7958,"name":"bool","nodeType":"ElementaryTypeName","src":"8932:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8931:6:25"},"scope":8183,"src":"8852:165:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7991,"nodeType":"Block","src":"9170:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":7987,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"9195:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"9195:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7986,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"9187:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7985,"id":7990,"nodeType":"Return","src":"9180:26:25"}]},"documentation":{"id":7978,"nodeType":"StructuredDocumentation","src":"9023:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":7992,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9107:6:25","nodeType":"FunctionDefinition","parameters":{"id":7982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7981,"mutability":"mutable","name":"set","nameLocation":"9133:3:25","nodeType":"VariableDeclaration","scope":7992,"src":"9114:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7980,"nodeType":"UserDefinedTypeName","pathNode":{"id":7979,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"9114:10:25"},"referencedDeclaration":7896,"src":"9114:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9113:24:25"},"returnParameters":{"id":7985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7992,"src":"9161:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7983,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:9:25"},"scope":8183,"src":"9098:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8018,"nodeType":"Block","src":"9638:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8010,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"9683:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":8011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"9683:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":8012,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"9695:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8009,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"9679:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8007,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:25","typeDescriptions":{}}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8005,"name":"uint160","nodeType":"ElementaryTypeName","src":"9663:7:25","typeDescriptions":{}}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8003,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:25","typeDescriptions":{}}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9655:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8002,"id":8017,"nodeType":"Return","src":"9648:56:25"}]},"documentation":{"id":7993,"nodeType":"StructuredDocumentation","src":"9219:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":8019,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9564:2:25","nodeType":"FunctionDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7996,"mutability":"mutable","name":"set","nameLocation":"9586:3:25","nodeType":"VariableDeclaration","scope":8019,"src":"9567:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7995,"nodeType":"UserDefinedTypeName","pathNode":{"id":7994,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"9567:10:25"},"referencedDeclaration":7896,"src":"9567:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7998,"mutability":"mutable","name":"index","nameLocation":"9599:5:25","nodeType":"VariableDeclaration","scope":8019,"src":"9591:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9591:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:39:25"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8019,"src":"9629:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8000,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9628:9:25"},"scope":8183,"src":"9555:156:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8048,"nodeType":"Block","src":"10332:219:25","statements":[{"assignments":[8033],"declarations":[{"constant":false,"id":8033,"mutability":"mutable","name":"store","nameLocation":"10359:5:25","nodeType":"VariableDeclaration","scope":8048,"src":"10342:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10342:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8032,"nodeType":"ArrayTypeName","src":"10342:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":8038,"initialValue":{"arguments":[{"expression":{"id":8035,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"10375:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":8036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7895,"src":"10375:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":8034,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"10367:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10367:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:25"},{"assignments":[8043],"declarations":[{"constant":false,"id":8043,"mutability":"mutable","name":"result","nameLocation":"10413:6:25","nodeType":"VariableDeclaration","scope":8048,"src":"10396:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8041,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8042,"nodeType":"ArrayTypeName","src":"10396:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8044,"nodeType":"VariableDeclarationStatement","src":"10396:23:25"},{"AST":{"nodeType":"YulBlock","src":"10482:39:25","statements":[{"nodeType":"YulAssignment","src":"10496:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"10506:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10496:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":8043,"isOffset":false,"isSlot":false,"src":"10496:6:25","valueSize":1},{"declaration":8033,"isOffset":false,"isSlot":false,"src":"10506:5:25","valueSize":1}],"id":8045,"nodeType":"InlineAssembly","src":"10473:48:25"},{"expression":{"id":8046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"10538:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":8028,"id":8047,"nodeType":"Return","src":"10531:13:25"}]},"documentation":{"id":8020,"nodeType":"StructuredDocumentation","src":"9717:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":8049,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10260:6:25","nodeType":"FunctionDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8023,"mutability":"mutable","name":"set","nameLocation":"10286:3:25","nodeType":"VariableDeclaration","scope":8049,"src":"10267:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":8022,"nodeType":"UserDefinedTypeName","pathNode":{"id":8021,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7896,"src":"10267:10:25"},"referencedDeclaration":7896,"src":"10267:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7896_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10266:24:25"},"returnParameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8049,"src":"10314:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8025,"name":"address","nodeType":"ElementaryTypeName","src":"10314:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8026,"nodeType":"ArrayTypeName","src":"10314:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10313:18:25"},"scope":8183,"src":"10251:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":8053,"members":[{"constant":false,"id":8052,"mutability":"mutable","name":"_inner","nameLocation":"10602:6:25","nodeType":"VariableDeclaration","scope":8053,"src":"10598:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8051,"nodeType":"UserDefinedTypeName","pathNode":{"id":8050,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":7581,"src":"10598:3:25"},"referencedDeclaration":7581,"src":"10598:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10580:7:25","nodeType":"StructDefinition","scope":8183,"src":"10573:42:25","visibility":"public"},{"body":{"id":8073,"nodeType":"Block","src":"10858:56:25","statements":[{"expression":{"arguments":[{"expression":{"id":8065,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"10880:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"10880:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"10900:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10892:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10892:7:25","typeDescriptions":{}}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10892:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8064,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"10875:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10875:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8063,"id":8072,"nodeType":"Return","src":"10868:39:25"}]},"documentation":{"id":8054,"nodeType":"StructuredDocumentation","src":"10621:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":8074,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10794:3:25","nodeType":"FunctionDefinition","parameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"set","nameLocation":"10814:3:25","nodeType":"VariableDeclaration","scope":8074,"src":"10798:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8056,"nodeType":"UserDefinedTypeName","pathNode":{"id":8055,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"10798:7:25"},"referencedDeclaration":8053,"src":"10798:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"value","nameLocation":"10827:5:25","nodeType":"VariableDeclaration","scope":8074,"src":"10819:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10797:36:25"},"returnParameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8074,"src":"10852:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8061,"name":"bool","nodeType":"ElementaryTypeName","src":"10852:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10851:6:25"},"scope":8183,"src":"10785:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8094,"nodeType":"Block","src":"11158:59:25","statements":[{"expression":{"arguments":[{"expression":{"id":8086,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"11183:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"11183:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":8090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"11203:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11195:7:25","typeDescriptions":{}}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11195:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8085,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"11175:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11175:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8084,"id":8093,"nodeType":"Return","src":"11168:42:25"}]},"documentation":{"id":8075,"nodeType":"StructuredDocumentation","src":"10920:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":8095,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11091:6:25","nodeType":"FunctionDefinition","parameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8078,"mutability":"mutable","name":"set","nameLocation":"11114:3:25","nodeType":"VariableDeclaration","scope":8095,"src":"11098:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8077,"nodeType":"UserDefinedTypeName","pathNode":{"id":8076,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"11098:7:25"},"referencedDeclaration":8053,"src":"11098:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":8080,"mutability":"mutable","name":"value","nameLocation":"11127:5:25","nodeType":"VariableDeclaration","scope":8095,"src":"11119:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11097:36:25"},"returnParameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8095,"src":"11152:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8082,"name":"bool","nodeType":"ElementaryTypeName","src":"11152:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11151:6:25"},"scope":8183,"src":"11082:135:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8115,"nodeType":"Block","src":"11381:61:25","statements":[{"expression":{"arguments":[{"expression":{"id":8107,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"11408:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"11408:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":8111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"11428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11420:7:25","typeDescriptions":{}}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11420:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8106,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"11398:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11398:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8105,"id":8114,"nodeType":"Return","src":"11391:44:25"}]},"documentation":{"id":8096,"nodeType":"StructuredDocumentation","src":"11223:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":8116,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11307:8:25","nodeType":"FunctionDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8099,"mutability":"mutable","name":"set","nameLocation":"11332:3:25","nodeType":"VariableDeclaration","scope":8116,"src":"11316:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8098,"nodeType":"UserDefinedTypeName","pathNode":{"id":8097,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"11316:7:25"},"referencedDeclaration":8053,"src":"11316:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":8101,"mutability":"mutable","name":"value","nameLocation":"11345:5:25","nodeType":"VariableDeclaration","scope":8116,"src":"11337:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11337:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11315:36:25"},"returnParameters":{"id":8105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8116,"src":"11375:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8103,"name":"bool","nodeType":"ElementaryTypeName","src":"11375:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11374:6:25"},"scope":8183,"src":"11298:144:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8130,"nodeType":"Block","src":"11592:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":8126,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"11617:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"11617:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":8125,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"11609:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":8128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8124,"id":8129,"nodeType":"Return","src":"11602:26:25"}]},"documentation":{"id":8117,"nodeType":"StructuredDocumentation","src":"11448:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":8131,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11532:6:25","nodeType":"FunctionDefinition","parameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"mutability":"mutable","name":"set","nameLocation":"11555:3:25","nodeType":"VariableDeclaration","scope":8131,"src":"11539:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8119,"nodeType":"UserDefinedTypeName","pathNode":{"id":8118,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"11539:7:25"},"referencedDeclaration":8053,"src":"11539:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11538:21:25"},"returnParameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8131,"src":"11583:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11583:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11582:9:25"},"scope":8183,"src":"11523:112:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8151,"nodeType":"Block","src":"12057:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8145,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"12086:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"12086:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":8147,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"12098:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8144,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"12082:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12074:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8142,"name":"uint256","nodeType":"ElementaryTypeName","src":"12074:7:25","typeDescriptions":{}}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12074:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8141,"id":8150,"nodeType":"Return","src":"12067:38:25"}]},"documentation":{"id":8132,"nodeType":"StructuredDocumentation","src":"11641:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":8152,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11986:2:25","nodeType":"FunctionDefinition","parameters":{"id":8138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8135,"mutability":"mutable","name":"set","nameLocation":"12005:3:25","nodeType":"VariableDeclaration","scope":8152,"src":"11989:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8134,"nodeType":"UserDefinedTypeName","pathNode":{"id":8133,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"11989:7:25"},"referencedDeclaration":8053,"src":"11989:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":8137,"mutability":"mutable","name":"index","nameLocation":"12018:5:25","nodeType":"VariableDeclaration","scope":8152,"src":"12010:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11988:36:25"},"returnParameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8152,"src":"12048:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8139,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12047:9:25"},"scope":8183,"src":"11977:135:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8181,"nodeType":"Block","src":"12730:219:25","statements":[{"assignments":[8166],"declarations":[{"constant":false,"id":8166,"mutability":"mutable","name":"store","nameLocation":"12757:5:25","nodeType":"VariableDeclaration","scope":8181,"src":"12740:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12740:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8165,"nodeType":"ArrayTypeName","src":"12740:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":8171,"initialValue":{"arguments":[{"expression":{"id":8168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"12773:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":8169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"12773:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7581_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":8167,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"12765:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7581_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12765:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12740:44:25"},{"assignments":[8176],"declarations":[{"constant":false,"id":8176,"mutability":"mutable","name":"result","nameLocation":"12811:6:25","nodeType":"VariableDeclaration","scope":8181,"src":"12794:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8174,"name":"uint256","nodeType":"ElementaryTypeName","src":"12794:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8175,"nodeType":"ArrayTypeName","src":"12794:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8177,"nodeType":"VariableDeclarationStatement","src":"12794:23:25"},{"AST":{"nodeType":"YulBlock","src":"12880:39:25","statements":[{"nodeType":"YulAssignment","src":"12894:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"12904:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12894:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":8176,"isOffset":false,"isSlot":false,"src":"12894:6:25","valueSize":1},{"declaration":8166,"isOffset":false,"isSlot":false,"src":"12904:5:25","valueSize":1}],"id":8178,"nodeType":"InlineAssembly","src":"12871:48:25"},{"expression":{"id":8179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"12936:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":8161,"id":8180,"nodeType":"Return","src":"12929:13:25"}]},"documentation":{"id":8153,"nodeType":"StructuredDocumentation","src":"12118:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":8182,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12661:6:25","nodeType":"FunctionDefinition","parameters":{"id":8157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8156,"mutability":"mutable","name":"set","nameLocation":"12684:3:25","nodeType":"VariableDeclaration","scope":8182,"src":"12668:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":8155,"nodeType":"UserDefinedTypeName","pathNode":{"id":8154,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":8053,"src":"12668:7:25"},"referencedDeclaration":8053,"src":"12668:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$8053_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12667:21:25"},"returnParameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8182,"src":"12712:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8158,"name":"uint256","nodeType":"ElementaryTypeName","src":"12712:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8159,"nodeType":"ArrayTypeName","src":"12712:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12711:18:25"},"scope":8183,"src":"12652:297:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":8184,"src":"1321:11630:25","usedErrors":[]}],"src":"205:12747:25"},"id":25},"contracts/NFT.sol":{"ast":{"absolutePath":"contracts/NFT.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Address":[2974],"Checkpoints":[4342],"Context":[4364],"Counters":[4438],"ECDSA":[4974],"EIP712":[5128],"ERC165":[5152],"ERC721":[2015],"ERC721Burnable":[2179],"ERC721Enumerable":[2533],"ERC721Votes":[2586],"EnumerableSet":[8183],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[5164],"IERC721":[2131],"IERC721Enumerable":[2617],"IERC721Metadata":[2644],"IERC721Receiver":[2149],"IVotes":[616],"Math":[6029],"NFT":[8447],"SafeCast":[7570],"Strings":[4613],"Votes":[1070]},"id":8448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8185,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"157:23:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":8186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8448,"sourceUnit":2534,"src":"183:78:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":8187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8448,"sourceUnit":2180,"src":"262:76:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":8188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8448,"sourceUnit":4439,"src":"339:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":8189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8448,"sourceUnit":441,"src":"392:68:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol","id":8190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8448,"sourceUnit":2587,"src":"461:73:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8192,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"786:16:26"},"id":8193,"nodeType":"InheritanceSpecifier","src":"786:16:26"},{"baseName":{"id":8194,"name":"ERC721Burnable","nodeType":"IdentifierPath","referencedDeclaration":2179,"src":"808:14:26"},"id":8195,"nodeType":"InheritanceSpecifier","src":"808:14:26"},{"baseName":{"id":8196,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"829:23:26"},"id":8197,"nodeType":"InheritanceSpecifier","src":"829:23:26"},{"baseName":{"id":8198,"name":"ERC721Votes","nodeType":"IdentifierPath","referencedDeclaration":2586,"src":"858:11:26"},"id":8199,"nodeType":"InheritanceSpecifier","src":"858:11:26"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":8191,"nodeType":"StructuredDocumentation","src":"536:227:26","text":" @author  0x3pehemeralsoul\n @title   DAO Soulbound NFT contract\n @dev     Soubound token. Only burner and owner can burn token. Only 1 token allowed per address. Uri role can update tokenURI. Only minter can mint."},"fullyImplemented":true,"id":8447,"linearizedBaseContracts":[8447,2586,1070,5128,440,315,2179,2533,2617,2015,2644,2131,5152,5164,538,513,4364,616],"name":"NFT","nameLocation":"774:3:26","nodeType":"ContractDefinition","nodes":[{"id":8203,"libraryName":{"id":8200,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":4438,"src":"883:8:26"},"nodeType":"UsingForDirective","src":"877:36:26","typeName":{"id":8202,"nodeType":"UserDefinedTypeName","pathNode":{"id":8201,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"896:16:26"},"referencedDeclaration":4370,"src":"896:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":8206,"mutability":"mutable","name":"_tokenIds","nameLocation":"943:9:26","nodeType":"VariableDeclaration","scope":8447,"src":"918:34:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage","typeString":"struct Counters.Counter"},"typeName":{"id":8205,"nodeType":"UserDefinedTypeName","pathNode":{"id":8204,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4370,"src":"918:16:26"},"referencedDeclaration":4370,"src":"918:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":8208,"mutability":"mutable","name":"baseTokenURI","nameLocation":"966:12:26","nodeType":"VariableDeclaration","scope":8447,"src":"959:19:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8207,"name":"string","nodeType":"ElementaryTypeName","src":"959:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":true,"functionSelector":"d5391393","id":8213,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"1014:11:26","nodeType":"VariableDeclaration","scope":8447,"src":"990:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"990:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1038:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8210,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1028:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1028:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":8218,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"1082:10:26","nodeType":"VariableDeclaration","scope":8447,"src":"1058:68:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1058:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44454641554c545f41444d494e5f524f4c45","id":8216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1105:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1effbbff9c66c5e59634f24fe842750c60d18891155c32dd155fc2d661a4c86d","typeString":"literal_string \"DEFAULT_ADMIN_ROLE\""},"value":"DEFAULT_ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1effbbff9c66c5e59634f24fe842750c60d18891155c32dd155fc2d661a4c86d","typeString":"literal_string \"DEFAULT_ADMIN_ROLE\""}],"id":8215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1095:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1095:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":8249,"nodeType":"Block","src":"1277:135:26","statements":[{"expression":{"arguments":[{"id":8236,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"1298:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8237,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"1311:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8235,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1287:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8239,"nodeType":"ExpressionStatement","src":"1287:31:26"},{"expression":{"arguments":[{"id":8241,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1339:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8242,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"1359:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8240,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1328:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"ExpressionStatement","src":"1328:37:26"},{"expression":{"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8245,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"1375:12:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8246,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"1390:13:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1375:28:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8248,"nodeType":"ExpressionStatement","src":"1375:28:26"}]},"id":8250,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"54455354315043432044414f204d656d62657273686970","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1216:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_68320c4953a2f45c3a84a00d689956e429a646be2689eacf87e735d31503bdba","typeString":"literal_string \"TEST1PCC DAO Membership\""},"value":"TEST1PCC DAO Membership"},{"hexValue":"5431504343","id":8228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1243:7:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d6fad43cdcff1c0ed43adbbf885a629b898b3d7f59d48e96b0648b7f103522","typeString":"literal_string \"T1PCC\""},"value":"T1PCC"}],"id":8229,"kind":"baseConstructorSpecifier","modifierName":{"id":8226,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"1209:6:26"},"nodeType":"ModifierInvocation","src":"1209:42:26"},{"arguments":[{"hexValue":"5043432044414f","id":8231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1259:9:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6276ac7b79cb41d79f1a153a7e8331c764b63618887d7d7246c4e146053e395e","typeString":"literal_string \"PCC DAO\""},"value":"PCC DAO"},{"hexValue":"312e30","id":8232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1270:5:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3","typeString":"literal_string \"1.0\""},"value":"1.0"}],"id":8233,"kind":"baseConstructorSpecifier","modifierName":{"id":8230,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":5128,"src":"1252:6:26"},"nodeType":"ModifierInvocation","src":"1252:24:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"minter","nameLocation":"1157:6:26","nodeType":"VariableDeclaration","scope":8250,"src":"1149:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8219,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8222,"mutability":"mutable","name":"admin","nameLocation":"1173:5:26","nodeType":"VariableDeclaration","scope":8250,"src":"1165:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8221,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8224,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1194:13:26","nodeType":"VariableDeclaration","scope":8250,"src":"1180:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8223,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1148:60:26"},"returnParameters":{"id":8234,"nodeType":"ParameterList","parameters":[],"src":"1277:0:26"},"scope":8447,"src":"1137:275:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8279,"nodeType":"Block","src":"1747:165:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8261,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"1766:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage","typeString":"struct Counters.Counter storage ref"}},"id":8263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":4396,"src":"1766:19:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$4370_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4370_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1766:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8265,"nodeType":"ExpressionStatement","src":"1766:21:26"},{"assignments":[8267],"declarations":[{"constant":false,"id":8267,"mutability":"mutable","name":"newItemId","nameLocation":"1806:9:26","nodeType":"VariableDeclaration","scope":8279,"src":"1798:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8271,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8268,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"1818:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4370_storage","typeString":"struct Counters.Counter storage ref"}},"id":8269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"1818:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4370_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1818:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:39:26"},{"expression":{"arguments":[{"id":8273,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"1857:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8274,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"1868:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8272,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1565,1594],"referencedDeclaration":1565,"src":"1847:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1847:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8276,"nodeType":"ExpressionStatement","src":"1847:31:26"},{"expression":{"id":8277,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"1896:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8260,"id":8278,"nodeType":"Return","src":"1889:16:26"}]},"documentation":{"id":8251,"nodeType":"StructuredDocumentation","src":"1418:212:26","text":" @notice  Mints only 1 token to recipient. \n @dev     Reverts if receipient owns already 1 token\n @param   recipient  token holder\n @return  uint256  tokenId assigned to holder"},"functionSelector":"54ba0f27","id":8280,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8256,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"1695:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8257,"kind":"modifierInvocation","modifierName":{"id":8255,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1686:8:26"},"nodeType":"ModifierInvocation","src":"1686:21:26"}],"name":"mintNFT","nameLocation":"1644:7:26","nodeType":"FunctionDefinition","parameters":{"id":8254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8253,"mutability":"mutable","name":"recipient","nameLocation":"1660:9:26","nodeType":"VariableDeclaration","scope":8280,"src":"1652:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8252,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1651:19:26"},"returnParameters":{"id":8260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8280,"src":"1725:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:9:26"},"scope":8447,"src":"1635:277:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2001,2371],"body":{"id":8337,"nodeType":"Block","src":"2262:234:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8296,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"2280:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2288:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8297,"name":"address","nodeType":"ElementaryTypeName","src":"2288:7:26","typeDescriptions":{}}},"id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2288:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2280:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"2302:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2316:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2308:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8303,"name":"address","nodeType":"ElementaryTypeName","src":"2308:7:26","typeDescriptions":{}}},"id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2302:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2280:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657220697320424c4f434b4544","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2320:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e","typeString":"literal_string \"Transfer is BLOCKED\""},"value":"Transfer is BLOCKED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e","typeString":"literal_string \"Transfer is BLOCKED\""}],"id":8295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2272:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2272:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8311,"nodeType":"ExpressionStatement","src":"2272:70:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"2362:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8314,"name":"address","nodeType":"ElementaryTypeName","src":"2368:7:26","typeDescriptions":{}}},"id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2368:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2362:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8320,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"2392:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8319,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"2382:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2382:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2399:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2382:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2362:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206f776e206120746f6b656e","id":8325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2402:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262","typeString":"literal_string \"You own a token\""},"value":"You own a token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262","typeString":"literal_string \"You own a token\""}],"id":8312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2354:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2354:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8327,"nodeType":"ExpressionStatement","src":"2354:66:26"},{"expression":{"arguments":[{"id":8331,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"2458:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8332,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"2464:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"2468:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8334,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"2477:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8328,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2431:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFT_$8447_$","typeString":"type(contract super NFT)"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"2431:26:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2431:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8336,"nodeType":"ExpressionStatement","src":"2431:56:26"}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"1918:137:26","text":" @dev     Here is where we enforce the soulbound. The 2 require stataments allow for burning by owner or by BURNER_ROLE"},"id":8338,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2069:20:26","nodeType":"FunctionDefinition","overrides":{"id":8293,"nodeType":"OverrideSpecifier","overrides":[{"id":8291,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"2235:6:26"},{"id":8292,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"2243:16:26"}],"src":"2226:34:26"},"parameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"from","nameLocation":"2107:4:26","nodeType":"VariableDeclaration","scope":8338,"src":"2099:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8282,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8285,"mutability":"mutable","name":"to","nameLocation":"2129:2:26","nodeType":"VariableDeclaration","scope":8338,"src":"2121:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8284,"name":"address","nodeType":"ElementaryTypeName","src":"2121:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"tokenId","nameLocation":"2149:7:26","nodeType":"VariableDeclaration","scope":8338,"src":"2141:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"batchSize","nameLocation":"2193:9:26","nodeType":"VariableDeclaration","scope":8338,"src":"2185:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2089:119:26"},"returnParameters":{"id":8294,"nodeType":"ParameterList","parameters":[],"src":"2262:0:26"},"scope":8447,"src":"2060:436:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2014,2571],"body":{"id":8368,"nodeType":"Block","src":"2847:128:26","statements":[{"expression":{"arguments":[{"id":8354,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"2878:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"2884:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8356,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"2888:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8353,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"2857:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8358,"nodeType":"ExpressionStatement","src":"2857:41:26"},{"expression":{"arguments":[{"id":8362,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"2934:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"2940:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8364,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"2944:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8365,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"2958:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8359,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2908:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFT_$8447_$","typeString":"type(contract super NFT)"}},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2571,"src":"2908:25:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":8366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2908:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8367,"nodeType":"ExpressionStatement","src":"2908:60:26"}]},"documentation":{"id":8339,"nodeType":"StructuredDocumentation","src":"2502:159:26","text":" @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":8369,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"2675:19:26","nodeType":"FunctionDefinition","overrides":{"id":8351,"nodeType":"OverrideSpecifier","overrides":[{"id":8349,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"2826:6:26"},{"id":8350,"name":"ERC721Votes","nodeType":"IdentifierPath","referencedDeclaration":2586,"src":"2834:11:26"}],"src":"2817:29:26"},"parameters":{"id":8348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8341,"mutability":"mutable","name":"from","nameLocation":"2712:4:26","nodeType":"VariableDeclaration","scope":8369,"src":"2704:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8340,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"to","nameLocation":"2734:2:26","nodeType":"VariableDeclaration","scope":8369,"src":"2726:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8342,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8345,"mutability":"mutable","name":"firstTokenId","nameLocation":"2754:12:26","nodeType":"VariableDeclaration","scope":8369,"src":"2746:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8347,"mutability":"mutable","name":"batchSize","nameLocation":"2784:9:26","nodeType":"VariableDeclaration","scope":8369,"src":"2776:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:105:26"},"returnParameters":{"id":8352,"nodeType":"ParameterList","parameters":[],"src":"2847:0:26"},"scope":8447,"src":"2666:309:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2178],"body":{"id":8397,"nodeType":"Block","src":"3415:164:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8378,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3441:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8379,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3461:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3461:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8377,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3433:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8383,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3497:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3497:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"3511:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8382,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3478:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3478:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3433:86:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c65722063616e6e6f74206275726e","id":8388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3521:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf","typeString":"literal_string \"Caller cannot burn\""},"value":"Caller cannot burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf","typeString":"literal_string \"Caller cannot burn\""}],"id":8376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3425:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3425:117:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8390,"nodeType":"ExpressionStatement","src":"3425:117:26"},{"expression":{"arguments":[{"id":8394,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"3564:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8391,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3552:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFT_$8447_$","typeString":"type(contract super NFT)"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1738,"src":"3552:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3552:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8396,"nodeType":"ExpressionStatement","src":"3552:20:26"}]},"documentation":{"id":8370,"nodeType":"StructuredDocumentation","src":"2982:373:26","text":" @notice  Owner can burn token in order to enforce the right to be forgotten. Also BURNER_ROLE can burn in order to kick out a member from a DAO.\n @dev     Override to include BURNER_ROLE, the _beforeTokenTransfer function is overriden to comply also with BURNER_ROLE. These 2 functions go hand in hand.\n @param   tokenId  tokenID to be burned"},"functionSelector":"42966c68","id":8398,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3369:4:26","nodeType":"FunctionDefinition","overrides":{"id":8374,"nodeType":"OverrideSpecifier","overrides":[],"src":"3406:8:26"},"parameters":{"id":8373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8372,"mutability":"mutable","name":"tokenId","nameLocation":"3382:7:26","nodeType":"VariableDeclaration","scope":8398,"src":"3374:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3373:17:26"},"returnParameters":{"id":8375,"nodeType":"ParameterList","parameters":[],"src":"3415:0:26"},"scope":8447,"src":"3360:219:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":8413,"nodeType":"Block","src":"3778:70:26","statements":[{"expression":{"arguments":[{"id":8408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"3803:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8407,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3788:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3788:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8410,"nodeType":"ExpressionStatement","src":"3788:23:26"},{"expression":{"id":8411,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"3829:12:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8406,"id":8412,"nodeType":"Return","src":"3822:19:26"}]},"documentation":{"id":8399,"nodeType":"StructuredDocumentation","src":"3585:100:26","text":" @dev See {IERC721Metadata-tokenURI}. the baseTokenURI is the same for all tokens."},"functionSelector":"c87b56dd","id":8414,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3699:8:26","nodeType":"FunctionDefinition","overrides":{"id":8403,"nodeType":"OverrideSpecifier","overrides":[],"src":"3745:8:26"},"parameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"tokenId","nameLocation":"3716:7:26","nodeType":"VariableDeclaration","scope":8414,"src":"3708:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3708:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3707:17:26"},"returnParameters":{"id":8406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8414,"src":"3763:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8404,"name":"string","nodeType":"ElementaryTypeName","src":"3763:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3762:15:26"},"scope":8447,"src":"3690:158:26","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8427,"nodeType":"Block","src":"4001:45:26","statements":[{"expression":{"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8423,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"4011:12:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8424,"name":"_baseTokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"4026:13:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4011:28:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8426,"nodeType":"ExpressionStatement","src":"4011:28:26"}]},"documentation":{"id":8415,"nodeType":"StructuredDocumentation","src":"3854:53:26","text":" @dev setter for the NFT token URI."},"functionSelector":"87f350b8","id":8428,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8420,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3981:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8421,"kind":"modifierInvocation","modifierName":{"id":8419,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"3972:8:26"},"nodeType":"ModifierInvocation","src":"3972:28:26"}],"name":"_setTokenURI","nameLocation":"3921:12:26","nodeType":"FunctionDefinition","parameters":{"id":8418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8417,"mutability":"mutable","name":"_baseTokenUri","nameLocation":"3948:13:26","nodeType":"VariableDeclaration","scope":8428,"src":"3934:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8416,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3933:29:26"},"returnParameters":{"id":8422,"nodeType":"ParameterList","parameters":[],"src":"4001:0:26"},"scope":8447,"src":"3912:134:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[356,1164,2229],"body":{"id":8445,"nodeType":"Block","src":"4298:60:26","statements":[{"expression":{"arguments":[{"id":8442,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"4339:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8440,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4315:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFT_$8447_$","typeString":"type(contract super NFT)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":356,"src":"4315:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4315:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8439,"id":8444,"nodeType":"Return","src":"4308:43:26"}]},"documentation":{"id":8429,"nodeType":"StructuredDocumentation","src":"4052:55:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":8446,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4121:17:26","nodeType":"FunctionDefinition","overrides":{"id":8436,"nodeType":"OverrideSpecifier","overrides":[{"id":8433,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"4220:23:26"},{"id":8434,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"4245:6:26"},{"id":8435,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"4253:16:26"}],"src":"4211:59:26"},"parameters":{"id":8432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8431,"mutability":"mutable","name":"interfaceId","nameLocation":"4146:11:26","nodeType":"VariableDeclaration","scope":8446,"src":"4139:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8430,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4139:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4138:20:26"},"returnParameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8446,"src":"4288:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8437,"name":"bool","nodeType":"ElementaryTypeName","src":"4288:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4287:6:26"},"scope":8447,"src":"4112:246:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":8448,"src":"765:3595:26","usedErrors":[]}],"src":"157:4204:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_beforeTokenTransfer}). _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x676d65383d5311b6c1fe9c6b580a32abd0a5582d1d5d2b67f388153578a9bbc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ee8207d98ba4aae20941a8d48673e60c89b8aaf4e91eb99c6d7fc2d57ce2e\",\"dweb:/ipfs/QmTCZisUyrBMkVMDY7nQ8jCaV87yZhsQ5dG7QNbbD6ViJe\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1133":{"entryPoint":null,"id":1133,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:27","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:27","statements":[{"nodeType":"YulAssignment","src":"112:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:27"},"nodeType":"YulFunctionCall","src":"137:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:27"},"nodeType":"YulFunctionCall","src":"121:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:27"},"nodeType":"YulFunctionCall","src":"196:21:27"},"nodeType":"YulExpressionStatement","src":"196:21:27"},{"nodeType":"YulVariableDeclaration","src":"226:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:27"},"nodeType":"YulFunctionCall","src":"237:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:27"},"nodeType":"YulFunctionCall","src":"293:79:27"},"nodeType":"YulExpressionStatement","src":"293:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:27"},"nodeType":"YulFunctionCall","src":"268:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:27"},"nodeType":"YulFunctionCall","src":"265:25:27"},"nodeType":"YulIf","src":"262:2:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:27"},"nodeType":"YulFunctionCall","src":"383:39:27"},"nodeType":"YulExpressionStatement","src":"383:39:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:27","type":""}],"src":"7:421:27"},{"body":{"nodeType":"YulBlock","src":"521:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:27"},"nodeType":"YulFunctionCall","src":"572:79:27"},"nodeType":"YulExpressionStatement","src":"572:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:27"},"nodeType":"YulFunctionCall","src":"545:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:27"},"nodeType":"YulFunctionCall","src":"541:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:27"},"nodeType":"YulFunctionCall","src":"534:35:27"},"nodeType":"YulIf","src":"531:2:27"},{"nodeType":"YulVariableDeclaration","src":"662:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:27"},"nodeType":"YulFunctionCall","src":"676:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:27","type":""}]},{"nodeType":"YulAssignment","src":"698:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:27"},"nodeType":"YulFunctionCall","src":"766:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:27"},"nodeType":"YulFunctionCall","src":"707:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:27","type":""}],"src":"448:355:27"},{"body":{"nodeType":"YulBlock","src":"923:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:27"},"nodeType":"YulFunctionCall","src":"971:79:27"},"nodeType":"YulExpressionStatement","src":"971:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:27"},"nodeType":"YulFunctionCall","src":"940:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:27"},"nodeType":"YulFunctionCall","src":"936:32:27"},"nodeType":"YulIf","src":"933:2:27"},{"nodeType":"YulBlock","src":"1062:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:27"},"nodeType":"YulFunctionCall","src":"1097:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:27"},"nodeType":"YulFunctionCall","src":"1091:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:27"},"nodeType":"YulFunctionCall","src":"1164:79:27"},"nodeType":"YulExpressionStatement","src":"1164:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:27"},"nodeType":"YulFunctionCall","src":"1131:30:27"},"nodeType":"YulIf","src":"1128:2:27"},{"nodeType":"YulAssignment","src":"1259:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:27"},"nodeType":"YulFunctionCall","src":"1311:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:27"},"nodeType":"YulFunctionCall","src":"1269:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:27"}]}]},{"nodeType":"YulBlock","src":"1363:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:27"},"nodeType":"YulFunctionCall","src":"1398:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:27"},"nodeType":"YulFunctionCall","src":"1392:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:27"},"nodeType":"YulFunctionCall","src":"1466:79:27"},"nodeType":"YulExpressionStatement","src":"1466:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:27"},"nodeType":"YulFunctionCall","src":"1433:30:27"},"nodeType":"YulIf","src":"1430:2:27"},{"nodeType":"YulAssignment","src":"1561:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:27"},"nodeType":"YulFunctionCall","src":"1613:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:27"},"nodeType":"YulFunctionCall","src":"1571:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:27","type":""}],"src":"809:853:27"},{"body":{"nodeType":"YulBlock","src":"1709:88:27","statements":[{"nodeType":"YulAssignment","src":"1719:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:27"},"nodeType":"YulFunctionCall","src":"1729:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:27"},"nodeType":"YulFunctionCall","src":"1758:33:27"},"nodeType":"YulExpressionStatement","src":"1758:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:27","type":""}],"src":"1668:129:27"},{"body":{"nodeType":"YulBlock","src":"1843:35:27","statements":[{"nodeType":"YulAssignment","src":"1853:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:27"},"nodeType":"YulFunctionCall","src":"1863:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:27","type":""}],"src":"1803:75:27"},{"body":{"nodeType":"YulBlock","src":"1951:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:27"},"nodeType":"YulFunctionCall","src":"2058:18:27"},"nodeType":"YulExpressionStatement","src":"2058:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:27"},"nodeType":"YulFunctionCall","src":"2025:30:27"},"nodeType":"YulIf","src":"2022:2:27"},{"nodeType":"YulAssignment","src":"2088:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:27"},"nodeType":"YulFunctionCall","src":"2096:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:27"}]},{"nodeType":"YulAssignment","src":"2162:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:27"},"nodeType":"YulFunctionCall","src":"2170:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:27","type":""}],"src":"1884:308:27"},{"body":{"nodeType":"YulBlock","src":"2247:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:27"},"nodeType":"YulFunctionCall","src":"2347:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:27"},"nodeType":"YulFunctionCall","src":"2366:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:27"},"nodeType":"YulFunctionCall","src":"2360:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:27"},"nodeType":"YulFunctionCall","src":"2340:39:27"},"nodeType":"YulExpressionStatement","src":"2340:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:27"},"nodeType":"YulFunctionCall","src":"2284:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:27","statements":[{"nodeType":"YulAssignment","src":"2300:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:27"},"nodeType":"YulFunctionCall","src":"2305:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:27","statements":[]},"src":"2276:113:27"},{"body":{"nodeType":"YulBlock","src":"2423:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:27"},"nodeType":"YulFunctionCall","src":"2469:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:27"},"nodeType":"YulFunctionCall","src":"2462:27:27"},"nodeType":"YulExpressionStatement","src":"2462:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:27"},"nodeType":"YulFunctionCall","src":"2401:13:27"},"nodeType":"YulIf","src":"2398:2:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:27","type":""}],"src":"2198:307:27"},{"body":{"nodeType":"YulBlock","src":"2562:269:27","statements":[{"nodeType":"YulAssignment","src":"2572:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:27"},"nodeType":"YulFunctionCall","src":"2582:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:27"},"nodeType":"YulFunctionCall","src":"2629:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:27","statements":[{"nodeType":"YulAssignment","src":"2694:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:27"},"nodeType":"YulFunctionCall","src":"2704:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:27"},"nodeType":"YulFunctionCall","src":"2653:26:27"},"nodeType":"YulIf","src":"2650:2:27"},{"body":{"nodeType":"YulBlock","src":"2783:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:27"},"nodeType":"YulFunctionCall","src":"2797:18:27"},"nodeType":"YulExpressionStatement","src":"2797:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:27"},"nodeType":"YulFunctionCall","src":"2767:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:27"},"nodeType":"YulFunctionCall","src":"2744:38:27"},"nodeType":"YulIf","src":"2741:2:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:27","type":""}],"src":"2511:320:27"},{"body":{"nodeType":"YulBlock","src":"2880:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:27"},"nodeType":"YulFunctionCall","src":"2920:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:27"},"nodeType":"YulFunctionCall","src":"2908:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:27"},"nodeType":"YulFunctionCall","src":"3061:18:27"},"nodeType":"YulExpressionStatement","src":"3061:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:27"},"nodeType":"YulFunctionCall","src":"2999:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:27"},"nodeType":"YulFunctionCall","src":"3035:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:27"},"nodeType":"YulFunctionCall","src":"2996:62:27"},"nodeType":"YulIf","src":"2993:2:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:27"},"nodeType":"YulFunctionCall","src":"3090:22:27"},"nodeType":"YulExpressionStatement","src":"3090:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:27","type":""}],"src":"2837:281:27"},{"body":{"nodeType":"YulBlock","src":"3152:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:27"},"nodeType":"YulFunctionCall","src":"3162:88:27"},"nodeType":"YulExpressionStatement","src":"3162:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:27"},"nodeType":"YulFunctionCall","src":"3259:15:27"},"nodeType":"YulExpressionStatement","src":"3259:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:27"},"nodeType":"YulFunctionCall","src":"3283:15:27"},"nodeType":"YulExpressionStatement","src":"3283:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:27"},{"body":{"nodeType":"YulBlock","src":"3338:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:27"},"nodeType":"YulFunctionCall","src":"3348:88:27"},"nodeType":"YulExpressionStatement","src":"3348:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:27"},"nodeType":"YulFunctionCall","src":"3445:15:27"},"nodeType":"YulExpressionStatement","src":"3445:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:27"},"nodeType":"YulFunctionCall","src":"3469:15:27"},"nodeType":"YulExpressionStatement","src":"3469:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:27"},{"body":{"nodeType":"YulBlock","src":"3585:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:27"},"nodeType":"YulFunctionCall","src":"3595:12:27"},"nodeType":"YulExpressionStatement","src":"3595:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:27"},{"body":{"nodeType":"YulBlock","src":"3708:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:27"},"nodeType":"YulFunctionCall","src":"3718:12:27"},"nodeType":"YulExpressionStatement","src":"3718:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:27"},{"body":{"nodeType":"YulBlock","src":"3831:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:27"},"nodeType":"YulFunctionCall","src":"3841:12:27"},"nodeType":"YulExpressionStatement","src":"3841:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:27"},{"body":{"nodeType":"YulBlock","src":"3954:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:27"},"nodeType":"YulFunctionCall","src":"3964:12:27"},"nodeType":"YulExpressionStatement","src":"3964:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:27"},{"body":{"nodeType":"YulBlock","src":"4036:54:27","statements":[{"nodeType":"YulAssignment","src":"4046:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:27"},"nodeType":"YulFunctionCall","src":"4060:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:27"},"nodeType":"YulFunctionCall","src":"4076:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:27"},"nodeType":"YulFunctionCall","src":"4056:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:27","type":""}],"src":"3988:102:27"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da83398181016040528101906200003791906200019f565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea26469706673582212201344a3b56bd46ac8e3be564a426cb60a67b3c62e5ef64c39e40cf4d3779e30b464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DIFFICULTY LOG3 0xB5 PUSH12 0xD46AC8E3BE564A426CB60A67 0xB3 0xC6 0x2E 0x5E 0xF6 0x4C CODECOPY 0xE4 0xC DELEGATECALL 0xD3 PUSH24 0x9E30B464736F6C6343000806003300000000000000000000 ","sourceMap":"628:16327:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:27:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:2;;572:79;;:::i;:::-;531:2;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:2;;;971:79;;:::i;:::-;933:2;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:2;;;1164:79;;:::i;:::-;1128:2;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:2;;;1466:79;;:::i;:::-;1430:2;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;923:739;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1709:88;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1843:35;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:2;;;2058:18;;:::i;:::-;2022:2;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1951:241;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:2;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:2;2247:258;;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:2;;2716:4;2708:6;2704:17;2694:27;;2650:2;2778;2770:6;2767:14;2747:18;2744:38;2741:2;;;2797:18;;:::i;:::-;2741:2;2562:269;;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:2;;;3061:18;;:::i;:::-;2993:2;3101:10;3097:2;3090:22;2880:238;;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;4036:54;;;:::o;628:16327:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2014":{"entryPoint":4788,"id":2014,"parameterSlots":4,"returnSlots":0},"@_approve_1847":{"entryPoint":2576,"id":1847,"parameterSlots":2,"returnSlots":0},"@_baseURI_1284":{"entryPoint":4190,"id":1284,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2001":{"entryPoint":4494,"id":2001,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1955":{"entryPoint":4794,"id":1955,"parameterSlots":4,"returnSlots":1},"@_exists_1516":{"entryPoint":4429,"id":1516,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1550":{"entryPoint":2761,"id":1550,"parameterSlots":2,"returnSlots":1},"@_msgSender_4354":{"entryPoint":2568,"id":4354,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1498":{"entryPoint":3672,"id":1498,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1893":{"entryPoint":2493,"id":1893,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1485":{"entryPoint":4098,"id":1485,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1879":{"entryPoint":3733,"id":1879,"parameterSlots":3,"returnSlots":0},"@_transfer_1823":{"entryPoint":2910,"id":1823,"parameterSlots":3,"returnSlots":0},"@approve_1327":{"entryPoint":1142,"id":1327,"parameterSlots":2,"returnSlots":0},"@balanceOf_1188":{"entryPoint":1685,"id":1188,"parameterSlots":1,"returnSlots":1},"@getApproved_1345":{"entryPoint":1072,"id":1345,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1380":{"entryPoint":2239,"id":1380,"parameterSlots":2,"returnSlots":1},"@isContract_2662":{"entryPoint":5540,"id":2662,"parameterSlots":1,"returnSlots":1},"@log10_5866":{"entryPoint":5201,"id":5866,"parameterSlots":1,"returnSlots":1},"@name_1226":{"entryPoint":926,"id":1226,"parameterSlots":0,"returnSlots":1},"@ownerOf_1216":{"entryPoint":1550,"id":1216,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1426":{"entryPoint":1518,"id":1426,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1456":{"entryPoint":2037,"id":1456,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1362":{"entryPoint":2015,"id":1362,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1164":{"entryPoint":700,"id":1164,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5151":{"entryPoint":2387,"id":5151,"parameterSlots":1,"returnSlots":1},"@symbol_1236":{"entryPoint":1869,"id":1236,"parameterSlots":0,"returnSlots":1},"@toString_4496":{"entryPoint":4213,"id":4496,"parameterSlots":1,"returnSlots":1},"@tokenURI_1275":{"entryPoint":2135,"id":1275,"parameterSlots":1,"returnSlots":1},"@transferFrom_1407":{"entryPoint":1422,"id":1407,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5575,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5984,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6115,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6179,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6886,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6964,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7389,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7416,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7443,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7453,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7502,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7513,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7524,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7541,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7558,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7569,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7655,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7707,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7781,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7823,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7838,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7889,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7939,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7988,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8035,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8129,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8176,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8181,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8186,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8191,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8196,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8213,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8292,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8371,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8769,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8871,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8917,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:27","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:27","statements":[{"nodeType":"YulAssignment","src":"100:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:27"},"nodeType":"YulFunctionCall","src":"125:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:27"},"nodeType":"YulFunctionCall","src":"109:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:27"},"nodeType":"YulFunctionCall","src":"183:21:27"},"nodeType":"YulExpressionStatement","src":"183:21:27"},{"nodeType":"YulVariableDeclaration","src":"213:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:27"},"nodeType":"YulFunctionCall","src":"224:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:27"},"nodeType":"YulFunctionCall","src":"280:79:27"},"nodeType":"YulExpressionStatement","src":"280:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:27"},"nodeType":"YulFunctionCall","src":"255:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:27"},"nodeType":"YulFunctionCall","src":"252:25:27"},"nodeType":"YulIf","src":"249:2:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:27"},"nodeType":"YulFunctionCall","src":"370:41:27"},"nodeType":"YulExpressionStatement","src":"370:41:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:27","type":""}],"src":"7:410:27"},{"body":{"nodeType":"YulBlock","src":"475:87:27","statements":[{"nodeType":"YulAssignment","src":"485:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:27"},"nodeType":"YulFunctionCall","src":"494:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:27"},"nodeType":"YulFunctionCall","src":"523:33:27"},"nodeType":"YulExpressionStatement","src":"523:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:27","type":""}],"src":"423:139:27"},{"body":{"nodeType":"YulBlock","src":"617:84:27","statements":[{"nodeType":"YulAssignment","src":"627:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:27"},"nodeType":"YulFunctionCall","src":"636:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:27"},"nodeType":"YulFunctionCall","src":"665:30:27"},"nodeType":"YulExpressionStatement","src":"665:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"src":"568:133:27"},{"body":{"nodeType":"YulBlock","src":"758:86:27","statements":[{"nodeType":"YulAssignment","src":"768:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:27"},"nodeType":"YulFunctionCall","src":"777:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:27"},"nodeType":"YulFunctionCall","src":"806:32:27"},"nodeType":"YulExpressionStatement","src":"806:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:27","type":""}],"src":"707:137:27"},{"body":{"nodeType":"YulBlock","src":"912:79:27","statements":[{"nodeType":"YulAssignment","src":"922:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:27"},"nodeType":"YulFunctionCall","src":"931:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:27"},"nodeType":"YulFunctionCall","src":"953:32:27"},"nodeType":"YulExpressionStatement","src":"953:32:27"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:27","type":""}],"src":"850:141:27"},{"body":{"nodeType":"YulBlock","src":"1071:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:27"},"nodeType":"YulFunctionCall","src":"1122:79:27"},"nodeType":"YulExpressionStatement","src":"1122:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:27"},"nodeType":"YulFunctionCall","src":"1095:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:27"},"nodeType":"YulFunctionCall","src":"1091:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:27"},"nodeType":"YulFunctionCall","src":"1084:35:27"},"nodeType":"YulIf","src":"1081:2:27"},{"nodeType":"YulVariableDeclaration","src":"1212:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:27"},"nodeType":"YulFunctionCall","src":"1226:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:27"},"nodeType":"YulFunctionCall","src":"1311:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:27"},"nodeType":"YulFunctionCall","src":"1264:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:27","type":""}],"src":"1010:338:27"},{"body":{"nodeType":"YulBlock","src":"1406:87:27","statements":[{"nodeType":"YulAssignment","src":"1416:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:27"},"nodeType":"YulFunctionCall","src":"1425:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:27"},"nodeType":"YulFunctionCall","src":"1454:33:27"},"nodeType":"YulExpressionStatement","src":"1454:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:27","type":""}],"src":"1354:139:27"},{"body":{"nodeType":"YulBlock","src":"1565:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:27"},"nodeType":"YulFunctionCall","src":"1613:79:27"},"nodeType":"YulExpressionStatement","src":"1613:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:27"},"nodeType":"YulFunctionCall","src":"1578:32:27"},"nodeType":"YulIf","src":"1575:2:27"},{"nodeType":"YulBlock","src":"1704:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:27"},"nodeType":"YulFunctionCall","src":"1779:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:27"},"nodeType":"YulFunctionCall","src":"1758:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:27","type":""}],"src":"1499:329:27"},{"body":{"nodeType":"YulBlock","src":"1917:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:27"},"nodeType":"YulFunctionCall","src":"1965:79:27"},"nodeType":"YulExpressionStatement","src":"1965:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:27"},"nodeType":"YulFunctionCall","src":"1934:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:27"},"nodeType":"YulFunctionCall","src":"1930:32:27"},"nodeType":"YulIf","src":"1927:2:27"},{"nodeType":"YulBlock","src":"2056:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:27"},"nodeType":"YulFunctionCall","src":"2131:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:27"},"nodeType":"YulFunctionCall","src":"2110:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:27"}]}]},{"nodeType":"YulBlock","src":"2183:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:27"},"nodeType":"YulFunctionCall","src":"2259:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:27"},"nodeType":"YulFunctionCall","src":"2238:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:27","type":""}],"src":"1834:474:27"},{"body":{"nodeType":"YulBlock","src":"2414:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:27"},"nodeType":"YulFunctionCall","src":"2462:79:27"},"nodeType":"YulExpressionStatement","src":"2462:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:27"},"nodeType":"YulFunctionCall","src":"2431:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:27"},"nodeType":"YulFunctionCall","src":"2427:32:27"},"nodeType":"YulIf","src":"2424:2:27"},{"nodeType":"YulBlock","src":"2553:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:27"},"nodeType":"YulFunctionCall","src":"2628:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:27"},"nodeType":"YulFunctionCall","src":"2607:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:27"}]}]},{"nodeType":"YulBlock","src":"2680:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:27"},"nodeType":"YulFunctionCall","src":"2756:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:27"},"nodeType":"YulFunctionCall","src":"2735:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:27"}]}]},{"nodeType":"YulBlock","src":"2808:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:27"},"nodeType":"YulFunctionCall","src":"2884:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:27"},"nodeType":"YulFunctionCall","src":"2863:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:27","type":""}],"src":"2314:619:27"},{"body":{"nodeType":"YulBlock","src":"3065:817:27","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:27"},"nodeType":"YulFunctionCall","src":"3114:79:27"},"nodeType":"YulExpressionStatement","src":"3114:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:27"},"nodeType":"YulFunctionCall","src":"3082:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:27"},"nodeType":"YulFunctionCall","src":"3078:33:27"},"nodeType":"YulIf","src":"3075:2:27"},{"nodeType":"YulBlock","src":"3205:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:27"},"nodeType":"YulFunctionCall","src":"3280:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:27"},"nodeType":"YulFunctionCall","src":"3259:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:27"}]}]},{"nodeType":"YulBlock","src":"3332:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:27"},"nodeType":"YulFunctionCall","src":"3408:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:27"},"nodeType":"YulFunctionCall","src":"3387:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:27"}]}]},{"nodeType":"YulBlock","src":"3460:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:27"},"nodeType":"YulFunctionCall","src":"3536:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:27"},"nodeType":"YulFunctionCall","src":"3515:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:27"}]}]},{"nodeType":"YulBlock","src":"3588:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:27"},"nodeType":"YulFunctionCall","src":"3630:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:27"},"nodeType":"YulFunctionCall","src":"3617:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:27"},"nodeType":"YulFunctionCall","src":"3698:79:27"},"nodeType":"YulExpressionStatement","src":"3698:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:27"},"nodeType":"YulFunctionCall","src":"3665:30:27"},"nodeType":"YulIf","src":"3662:2:27"},{"nodeType":"YulAssignment","src":"3793:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:27"},"nodeType":"YulFunctionCall","src":"3833:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:27"},"nodeType":"YulFunctionCall","src":"3803:62:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:27","type":""}],"src":"2939:943:27"},{"body":{"nodeType":"YulBlock","src":"3968:388:27","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:27"},"nodeType":"YulFunctionCall","src":"4016:79:27"},"nodeType":"YulExpressionStatement","src":"4016:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:27"},"nodeType":"YulFunctionCall","src":"3985:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:27"},"nodeType":"YulFunctionCall","src":"3981:32:27"},"nodeType":"YulIf","src":"3978:2:27"},{"nodeType":"YulBlock","src":"4107:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:27"},"nodeType":"YulFunctionCall","src":"4182:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:27"},"nodeType":"YulFunctionCall","src":"4161:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:27"}]}]},{"nodeType":"YulBlock","src":"4234:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:27"},"nodeType":"YulFunctionCall","src":"4307:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:27"},"nodeType":"YulFunctionCall","src":"4289:50:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:27","type":""}],"src":"3888:468:27"},{"body":{"nodeType":"YulBlock","src":"4445:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:27"},"nodeType":"YulFunctionCall","src":"4493:79:27"},"nodeType":"YulExpressionStatement","src":"4493:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:27"},"nodeType":"YulFunctionCall","src":"4462:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:27"},"nodeType":"YulFunctionCall","src":"4458:32:27"},"nodeType":"YulIf","src":"4455:2:27"},{"nodeType":"YulBlock","src":"4584:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:27"},"nodeType":"YulFunctionCall","src":"4659:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:27"},"nodeType":"YulFunctionCall","src":"4638:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:27"}]}]},{"nodeType":"YulBlock","src":"4711:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:27"},"nodeType":"YulFunctionCall","src":"4787:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:27"},"nodeType":"YulFunctionCall","src":"4766:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:27","type":""}],"src":"4362:474:27"},{"body":{"nodeType":"YulBlock","src":"4907:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:27"},"nodeType":"YulFunctionCall","src":"4955:79:27"},"nodeType":"YulExpressionStatement","src":"4955:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:27"},"nodeType":"YulFunctionCall","src":"4924:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:27"},"nodeType":"YulFunctionCall","src":"4920:32:27"},"nodeType":"YulIf","src":"4917:2:27"},{"nodeType":"YulBlock","src":"5046:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:27"},"nodeType":"YulFunctionCall","src":"5120:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:27"},"nodeType":"YulFunctionCall","src":"5100:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:27","type":""}],"src":"4842:327:27"},{"body":{"nodeType":"YulBlock","src":"5251:273:27","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:27"},"nodeType":"YulFunctionCall","src":"5299:79:27"},"nodeType":"YulExpressionStatement","src":"5299:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:27"},"nodeType":"YulFunctionCall","src":"5268:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:27"},"nodeType":"YulFunctionCall","src":"5264:32:27"},"nodeType":"YulIf","src":"5261:2:27"},{"nodeType":"YulBlock","src":"5390:127:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:27"},"nodeType":"YulFunctionCall","src":"5475:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:27"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:27"},"nodeType":"YulFunctionCall","src":"5444:63:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:27","type":""}],"src":"5175:349:27"},{"body":{"nodeType":"YulBlock","src":"5596:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:27"},"nodeType":"YulFunctionCall","src":"5644:79:27"},"nodeType":"YulExpressionStatement","src":"5644:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:27"},"nodeType":"YulFunctionCall","src":"5613:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:27"},"nodeType":"YulFunctionCall","src":"5609:32:27"},"nodeType":"YulIf","src":"5606:2:27"},{"nodeType":"YulBlock","src":"5735:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:27"},"nodeType":"YulFunctionCall","src":"5810:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:27"},"nodeType":"YulFunctionCall","src":"5789:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:27","type":""}],"src":"5530:329:27"},{"body":{"nodeType":"YulBlock","src":"5930:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:27"},"nodeType":"YulFunctionCall","src":"5952:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:27"},"nodeType":"YulFunctionCall","src":"5940:37:27"},"nodeType":"YulExpressionStatement","src":"5940:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:27","type":""}],"src":"5865:118:27"},{"body":{"nodeType":"YulBlock","src":"6048:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:27"},"nodeType":"YulFunctionCall","src":"6070:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:27"},"nodeType":"YulFunctionCall","src":"6058:34:27"},"nodeType":"YulExpressionStatement","src":"6058:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:27","type":""}],"src":"5989:109:27"},{"body":{"nodeType":"YulBlock","src":"6194:270:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:27"},"nodeType":"YulFunctionCall","src":"6218:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:27"},"nodeType":"YulFunctionCall","src":"6272:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:27"},"nodeType":"YulFunctionCall","src":"6373:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:27"},"nodeType":"YulFunctionCall","src":"6351:52:27"},"nodeType":"YulExpressionStatement","src":"6351:52:27"},{"nodeType":"YulAssignment","src":"6412:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:27"},"nodeType":"YulFunctionCall","src":"6428:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:27"},"nodeType":"YulFunctionCall","src":"6419:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:27","type":""}],"src":"6104:360:27"},{"body":{"nodeType":"YulBlock","src":"6562:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:27"},"nodeType":"YulFunctionCall","src":"6586:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:27"},"nodeType":"YulFunctionCall","src":"6641:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:27"},"nodeType":"YulFunctionCall","src":"6743:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:27"},"nodeType":"YulFunctionCall","src":"6721:52:27"},"nodeType":"YulExpressionStatement","src":"6721:52:27"},{"nodeType":"YulAssignment","src":"6782:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:27"},"nodeType":"YulFunctionCall","src":"6798:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:27"},"nodeType":"YulFunctionCall","src":"6789:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:27","type":""}],"src":"6470:364:27"},{"body":{"nodeType":"YulBlock","src":"6950:267:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:27"},"nodeType":"YulFunctionCall","src":"6974:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:27"},"nodeType":"YulFunctionCall","src":"7029:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:27"},"nodeType":"YulFunctionCall","src":"7149:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:27"},"nodeType":"YulFunctionCall","src":"7127:52:27"},"nodeType":"YulExpressionStatement","src":"7127:52:27"},{"nodeType":"YulAssignment","src":"7188:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:27"},"nodeType":"YulFunctionCall","src":"7195:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:27","type":""}],"src":"6840:377:27"},{"body":{"nodeType":"YulBlock","src":"7369:220:27","statements":[{"nodeType":"YulAssignment","src":"7379:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:27","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:27"},"nodeType":"YulFunctionCall","src":"7386:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:27"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:27"},"nodeType":"YulFunctionCall","src":"7462:93:27"},"nodeType":"YulExpressionStatement","src":"7462:93:27"},{"nodeType":"YulAssignment","src":"7564:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:27"},"nodeType":"YulFunctionCall","src":"7571:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:27"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:27","type":""}],"src":"7223:366:27"},{"body":{"nodeType":"YulBlock","src":"7741:220:27","statements":[{"nodeType":"YulAssignment","src":"7751:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7822:2:27","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7758:58:27"},"nodeType":"YulFunctionCall","src":"7758:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7751:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:27"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7834:88:27"},"nodeType":"YulFunctionCall","src":"7834:93:27"},"nodeType":"YulExpressionStatement","src":"7834:93:27"},{"nodeType":"YulAssignment","src":"7936:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7947:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7952:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:27"},"nodeType":"YulFunctionCall","src":"7943:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7936:3:27"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7729:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7737:3:27","type":""}],"src":"7595:366:27"},{"body":{"nodeType":"YulBlock","src":"8113:220:27","statements":[{"nodeType":"YulAssignment","src":"8123:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8189:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8194:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8130:58:27"},"nodeType":"YulFunctionCall","src":"8130:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8123:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:27"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8206:88:27"},"nodeType":"YulFunctionCall","src":"8206:93:27"},"nodeType":"YulExpressionStatement","src":"8206:93:27"},{"nodeType":"YulAssignment","src":"8308:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8319:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8324:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:27"},"nodeType":"YulFunctionCall","src":"8315:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8308:3:27"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8101:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8109:3:27","type":""}],"src":"7967:366:27"},{"body":{"nodeType":"YulBlock","src":"8485:220:27","statements":[{"nodeType":"YulAssignment","src":"8495:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8561:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8502:58:27"},"nodeType":"YulFunctionCall","src":"8502:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:27"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8578:88:27"},"nodeType":"YulFunctionCall","src":"8578:93:27"},"nodeType":"YulExpressionStatement","src":"8578:93:27"},{"nodeType":"YulAssignment","src":"8680:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8687:3:27"},"nodeType":"YulFunctionCall","src":"8687:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8680:3:27"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8473:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8481:3:27","type":""}],"src":"8339:366:27"},{"body":{"nodeType":"YulBlock","src":"8857:220:27","statements":[{"nodeType":"YulAssignment","src":"8867:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8933:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:58:27"},"nodeType":"YulFunctionCall","src":"8874:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:27"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8950:88:27"},"nodeType":"YulFunctionCall","src":"8950:93:27"},"nodeType":"YulExpressionStatement","src":"8950:93:27"},{"nodeType":"YulAssignment","src":"9052:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:27"},"nodeType":"YulFunctionCall","src":"9059:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9052:3:27"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8845:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8853:3:27","type":""}],"src":"8711:366:27"},{"body":{"nodeType":"YulBlock","src":"9229:220:27","statements":[{"nodeType":"YulAssignment","src":"9239:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:27","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9246:58:27"},"nodeType":"YulFunctionCall","src":"9246:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9239:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:27"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9322:88:27"},"nodeType":"YulFunctionCall","src":"9322:93:27"},"nodeType":"YulExpressionStatement","src":"9322:93:27"},{"nodeType":"YulAssignment","src":"9424:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9435:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9440:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:27"},"nodeType":"YulFunctionCall","src":"9431:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9424:3:27"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9225:3:27","type":""}],"src":"9083:366:27"},{"body":{"nodeType":"YulBlock","src":"9601:220:27","statements":[{"nodeType":"YulAssignment","src":"9611:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9677:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9618:58:27"},"nodeType":"YulFunctionCall","src":"9618:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:27"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"9694:88:27"},"nodeType":"YulFunctionCall","src":"9694:93:27"},"nodeType":"YulExpressionStatement","src":"9694:93:27"},{"nodeType":"YulAssignment","src":"9796:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:27"},"nodeType":"YulFunctionCall","src":"9803:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9796:3:27"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9589:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9597:3:27","type":""}],"src":"9455:366:27"},{"body":{"nodeType":"YulBlock","src":"9973:220:27","statements":[{"nodeType":"YulAssignment","src":"9983:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10054:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9990:58:27"},"nodeType":"YulFunctionCall","src":"9990:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9983:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:27"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10066:88:27"},"nodeType":"YulFunctionCall","src":"10066:93:27"},"nodeType":"YulExpressionStatement","src":"10066:93:27"},{"nodeType":"YulAssignment","src":"10168:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:27"},"nodeType":"YulFunctionCall","src":"10175:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10168:3:27"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9961:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9969:3:27","type":""}],"src":"9827:366:27"},{"body":{"nodeType":"YulBlock","src":"10345:220:27","statements":[{"nodeType":"YulAssignment","src":"10355:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10421:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10426:2:27","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10362:58:27"},"nodeType":"YulFunctionCall","src":"10362:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:27"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10438:88:27"},"nodeType":"YulFunctionCall","src":"10438:93:27"},"nodeType":"YulExpressionStatement","src":"10438:93:27"},{"nodeType":"YulAssignment","src":"10540:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10556:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:27"},"nodeType":"YulFunctionCall","src":"10547:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10540:3:27"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10333:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10341:3:27","type":""}],"src":"10199:366:27"},{"body":{"nodeType":"YulBlock","src":"10636:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10653:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10676:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10658:17:27"},"nodeType":"YulFunctionCall","src":"10658:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10646:6:27"},"nodeType":"YulFunctionCall","src":"10646:37:27"},"nodeType":"YulExpressionStatement","src":"10646:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10624:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10631:3:27","type":""}],"src":"10571:118:27"},{"body":{"nodeType":"YulBlock","src":"10879:251:27","statements":[{"nodeType":"YulAssignment","src":"10890:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10988:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10897:81:27"},"nodeType":"YulFunctionCall","src":"10897:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10890:3:27"}]},{"nodeType":"YulAssignment","src":"11002:102:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11091:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"11100:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11009:81:27"},"nodeType":"YulFunctionCall","src":"11009:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11002:3:27"}]},{"nodeType":"YulAssignment","src":"11114:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"11121:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11114:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10850:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10856:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10864:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10875:3:27","type":""}],"src":"10695:435:27"},{"body":{"nodeType":"YulBlock","src":"11234:124:27","statements":[{"nodeType":"YulAssignment","src":"11244:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:27"},"nodeType":"YulFunctionCall","src":"11252:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11244:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11324:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11337:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11348:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:27"},"nodeType":"YulFunctionCall","src":"11333:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11280:43:27"},"nodeType":"YulFunctionCall","src":"11280:71:27"},"nodeType":"YulExpressionStatement","src":"11280:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11206:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11218:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11229:4:27","type":""}],"src":"11136:222:27"},{"body":{"nodeType":"YulBlock","src":"11564:440:27","statements":[{"nodeType":"YulAssignment","src":"11574:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11597:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:27"},"nodeType":"YulFunctionCall","src":"11582:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11574:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11679:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:27"},"nodeType":"YulFunctionCall","src":"11664:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11611:43:27"},"nodeType":"YulFunctionCall","src":"11611:71:27"},"nodeType":"YulExpressionStatement","src":"11611:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11736:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:27"},"nodeType":"YulFunctionCall","src":"11745:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11692:43:27"},"nodeType":"YulFunctionCall","src":"11692:72:27"},"nodeType":"YulExpressionStatement","src":"11692:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11818:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:27"},"nodeType":"YulFunctionCall","src":"11827:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11774:43:27"},"nodeType":"YulFunctionCall","src":"11774:72:27"},"nodeType":"YulExpressionStatement","src":"11774:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11878:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11863:3:27"},"nodeType":"YulFunctionCall","src":"11863:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11883:3:27"},"nodeType":"YulFunctionCall","src":"11883:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11856:6:27"},"nodeType":"YulFunctionCall","src":"11856:48:27"},"nodeType":"YulExpressionStatement","src":"11856:48:27"},{"nodeType":"YulAssignment","src":"11913:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11983:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11992:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11921:61:27"},"nodeType":"YulFunctionCall","src":"11921:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11913:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11524:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11532:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11540:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11548:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11559:4:27","type":""}],"src":"11364:640:27"},{"body":{"nodeType":"YulBlock","src":"12102:118:27","statements":[{"nodeType":"YulAssignment","src":"12112:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:27"},"nodeType":"YulFunctionCall","src":"12120:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12112:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12186:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12199:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12210:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12195:3:27"},"nodeType":"YulFunctionCall","src":"12195:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12148:37:27"},"nodeType":"YulFunctionCall","src":"12148:65:27"},"nodeType":"YulExpressionStatement","src":"12148:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12074:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12086:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12097:4:27","type":""}],"src":"12010:210:27"},{"body":{"nodeType":"YulBlock","src":"12344:195:27","statements":[{"nodeType":"YulAssignment","src":"12354:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:27"},"nodeType":"YulFunctionCall","src":"12362:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:27"},"nodeType":"YulFunctionCall","src":"12397:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12416:3:27"},"nodeType":"YulFunctionCall","src":"12416:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12390:6:27"},"nodeType":"YulFunctionCall","src":"12390:47:27"},"nodeType":"YulExpressionStatement","src":"12390:47:27"},{"nodeType":"YulAssignment","src":"12446:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"12527:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12454:63:27"},"nodeType":"YulFunctionCall","src":"12454:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12316:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:27","type":""}],"src":"12226:313:27"},{"body":{"nodeType":"YulBlock","src":"12716:248:27","statements":[{"nodeType":"YulAssignment","src":"12726:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12749:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:27"},"nodeType":"YulFunctionCall","src":"12734:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12726:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12784:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:27"},"nodeType":"YulFunctionCall","src":"12769:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12788:3:27"},"nodeType":"YulFunctionCall","src":"12788:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:27"},"nodeType":"YulFunctionCall","src":"12762:47:27"},"nodeType":"YulExpressionStatement","src":"12762:47:27"},{"nodeType":"YulAssignment","src":"12818:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12952:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12826:124:27"},"nodeType":"YulFunctionCall","src":"12826:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12696:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:27","type":""}],"src":"12545:419:27"},{"body":{"nodeType":"YulBlock","src":"13141:248:27","statements":[{"nodeType":"YulAssignment","src":"13151:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13163:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13174:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13159:3:27"},"nodeType":"YulFunctionCall","src":"13159:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13151:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13209:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13194:3:27"},"nodeType":"YulFunctionCall","src":"13194:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13217:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13213:3:27"},"nodeType":"YulFunctionCall","src":"13213:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13187:6:27"},"nodeType":"YulFunctionCall","src":"13187:47:27"},"nodeType":"YulExpressionStatement","src":"13187:47:27"},{"nodeType":"YulAssignment","src":"13243:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13251:124:27"},"nodeType":"YulFunctionCall","src":"13251:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13121:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13136:4:27","type":""}],"src":"12970:419:27"},{"body":{"nodeType":"YulBlock","src":"13566:248:27","statements":[{"nodeType":"YulAssignment","src":"13576:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13599:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:27"},"nodeType":"YulFunctionCall","src":"13584:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13576:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13623:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13634:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:27"},"nodeType":"YulFunctionCall","src":"13619:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13642:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13648:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13638:3:27"},"nodeType":"YulFunctionCall","src":"13638:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:27"},"nodeType":"YulFunctionCall","src":"13612:47:27"},"nodeType":"YulExpressionStatement","src":"13612:47:27"},{"nodeType":"YulAssignment","src":"13668:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13802:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13676:124:27"},"nodeType":"YulFunctionCall","src":"13676:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13668:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13546:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13561:4:27","type":""}],"src":"13395:419:27"},{"body":{"nodeType":"YulBlock","src":"13991:248:27","statements":[{"nodeType":"YulAssignment","src":"14001:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14009:3:27"},"nodeType":"YulFunctionCall","src":"14009:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14001:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:27"},"nodeType":"YulFunctionCall","src":"14044:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14067:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14063:3:27"},"nodeType":"YulFunctionCall","src":"14063:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:27"},"nodeType":"YulFunctionCall","src":"14037:47:27"},"nodeType":"YulExpressionStatement","src":"14037:47:27"},{"nodeType":"YulAssignment","src":"14093:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14101:124:27"},"nodeType":"YulFunctionCall","src":"14101:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14093:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13971:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13986:4:27","type":""}],"src":"13820:419:27"},{"body":{"nodeType":"YulBlock","src":"14416:248:27","statements":[{"nodeType":"YulAssignment","src":"14426:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:27"},"nodeType":"YulFunctionCall","src":"14434:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14426:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14484:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:27"},"nodeType":"YulFunctionCall","src":"14469:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14498:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14488:3:27"},"nodeType":"YulFunctionCall","src":"14488:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:27"},"nodeType":"YulFunctionCall","src":"14462:47:27"},"nodeType":"YulExpressionStatement","src":"14462:47:27"},{"nodeType":"YulAssignment","src":"14518:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14652:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14526:124:27"},"nodeType":"YulFunctionCall","src":"14526:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14518:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14396:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14411:4:27","type":""}],"src":"14245:419:27"},{"body":{"nodeType":"YulBlock","src":"14841:248:27","statements":[{"nodeType":"YulAssignment","src":"14851:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14874:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:27"},"nodeType":"YulFunctionCall","src":"14859:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14851:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14909:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14894:3:27"},"nodeType":"YulFunctionCall","src":"14894:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14913:3:27"},"nodeType":"YulFunctionCall","src":"14913:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14887:6:27"},"nodeType":"YulFunctionCall","src":"14887:47:27"},"nodeType":"YulExpressionStatement","src":"14887:47:27"},{"nodeType":"YulAssignment","src":"14943:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15077:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14951:124:27"},"nodeType":"YulFunctionCall","src":"14951:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14821:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14836:4:27","type":""}],"src":"14670:419:27"},{"body":{"nodeType":"YulBlock","src":"15266:248:27","statements":[{"nodeType":"YulAssignment","src":"15276:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:27"},"nodeType":"YulFunctionCall","src":"15284:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15323:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15319:3:27"},"nodeType":"YulFunctionCall","src":"15319:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15342:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15338:3:27"},"nodeType":"YulFunctionCall","src":"15338:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15312:6:27"},"nodeType":"YulFunctionCall","src":"15312:47:27"},"nodeType":"YulExpressionStatement","src":"15312:47:27"},{"nodeType":"YulAssignment","src":"15368:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15376:124:27"},"nodeType":"YulFunctionCall","src":"15376:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15368:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15246:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:27","type":""}],"src":"15095:419:27"},{"body":{"nodeType":"YulBlock","src":"15691:248:27","statements":[{"nodeType":"YulAssignment","src":"15701:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15713:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15724:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:27"},"nodeType":"YulFunctionCall","src":"15709:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15701:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15748:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:27"},"nodeType":"YulFunctionCall","src":"15744:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15763:3:27"},"nodeType":"YulFunctionCall","src":"15763:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15737:6:27"},"nodeType":"YulFunctionCall","src":"15737:47:27"},"nodeType":"YulExpressionStatement","src":"15737:47:27"},{"nodeType":"YulAssignment","src":"15793:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15927:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15801:124:27"},"nodeType":"YulFunctionCall","src":"15801:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15793:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15671:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15686:4:27","type":""}],"src":"15520:419:27"},{"body":{"nodeType":"YulBlock","src":"16116:248:27","statements":[{"nodeType":"YulAssignment","src":"16126:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:27"},"nodeType":"YulFunctionCall","src":"16134:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16126:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:27"},"nodeType":"YulFunctionCall","src":"16169:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16188:3:27"},"nodeType":"YulFunctionCall","src":"16188:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16162:6:27"},"nodeType":"YulFunctionCall","src":"16162:47:27"},"nodeType":"YulExpressionStatement","src":"16162:47:27"},{"nodeType":"YulAssignment","src":"16218:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16352:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16226:124:27"},"nodeType":"YulFunctionCall","src":"16226:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16096:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16111:4:27","type":""}],"src":"15945:419:27"},{"body":{"nodeType":"YulBlock","src":"16468:124:27","statements":[{"nodeType":"YulAssignment","src":"16478:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16501:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16486:3:27"},"nodeType":"YulFunctionCall","src":"16486:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16558:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16571:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16582:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:27"},"nodeType":"YulFunctionCall","src":"16567:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16514:43:27"},"nodeType":"YulFunctionCall","src":"16514:71:27"},"nodeType":"YulExpressionStatement","src":"16514:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16452:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16463:4:27","type":""}],"src":"16370:222:27"},{"body":{"nodeType":"YulBlock","src":"16639:88:27","statements":[{"nodeType":"YulAssignment","src":"16649:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16659:18:27"},"nodeType":"YulFunctionCall","src":"16659:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16649:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16708:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"16716:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16688:19:27"},"nodeType":"YulFunctionCall","src":"16688:33:27"},"nodeType":"YulExpressionStatement","src":"16688:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16623:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16632:6:27","type":""}],"src":"16598:129:27"},{"body":{"nodeType":"YulBlock","src":"16773:35:27","statements":[{"nodeType":"YulAssignment","src":"16783:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16799:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16793:5:27"},"nodeType":"YulFunctionCall","src":"16793:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16783:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16766:6:27","type":""}],"src":"16733:75:27"},{"body":{"nodeType":"YulBlock","src":"16880:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"16985:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16987:16:27"},"nodeType":"YulFunctionCall","src":"16987:18:27"},"nodeType":"YulExpressionStatement","src":"16987:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16965:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16954:2:27"},"nodeType":"YulFunctionCall","src":"16954:30:27"},"nodeType":"YulIf","src":"16951:2:27"},{"nodeType":"YulAssignment","src":"17017:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17047:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17025:21:27"},"nodeType":"YulFunctionCall","src":"17025:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17017:4:27"}]},{"nodeType":"YulAssignment","src":"17091:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17103:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17099:3:27"},"nodeType":"YulFunctionCall","src":"17099:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17091:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16864:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16875:4:27","type":""}],"src":"16814:307:27"},{"body":{"nodeType":"YulBlock","src":"17185:40:27","statements":[{"nodeType":"YulAssignment","src":"17196:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17212:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17206:5:27"},"nodeType":"YulFunctionCall","src":"17206:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17196:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17168:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17178:6:27","type":""}],"src":"17127:98:27"},{"body":{"nodeType":"YulBlock","src":"17290:40:27","statements":[{"nodeType":"YulAssignment","src":"17301:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17317:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17311:5:27"},"nodeType":"YulFunctionCall","src":"17311:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17301:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17273:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17283:6:27","type":""}],"src":"17231:99:27"},{"body":{"nodeType":"YulBlock","src":"17431:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17448:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"17453:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17441:6:27"},"nodeType":"YulFunctionCall","src":"17441:19:27"},"nodeType":"YulExpressionStatement","src":"17441:19:27"},{"nodeType":"YulAssignment","src":"17469:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17493:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:27"},"nodeType":"YulFunctionCall","src":"17484:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17469:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17403:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17408:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17419:11:27","type":""}],"src":"17336:168:27"},{"body":{"nodeType":"YulBlock","src":"17606:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"17628:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:27"},"nodeType":"YulFunctionCall","src":"17616:19:27"},"nodeType":"YulExpressionStatement","src":"17616:19:27"},{"nodeType":"YulAssignment","src":"17644:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17668:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:27"},"nodeType":"YulFunctionCall","src":"17659:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17644:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:27","type":""}],"src":"17510:169:27"},{"body":{"nodeType":"YulBlock","src":"17799:34:27","statements":[{"nodeType":"YulAssignment","src":"17809:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17809:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17771:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17776:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17787:11:27","type":""}],"src":"17685:148:27"},{"body":{"nodeType":"YulBlock","src":"17883:261:27","statements":[{"nodeType":"YulAssignment","src":"17893:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17916:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17898:17:27"},"nodeType":"YulFunctionCall","src":"17898:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17893:1:27"}]},{"nodeType":"YulAssignment","src":"17927:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17950:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17932:17:27"},"nodeType":"YulFunctionCall","src":"17932:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17927:1:27"}]},{"body":{"nodeType":"YulBlock","src":"18090:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18092:16:27"},"nodeType":"YulFunctionCall","src":"18092:18:27"},"nodeType":"YulExpressionStatement","src":"18092:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18011:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18018:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"18086:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18014:3:27"},"nodeType":"YulFunctionCall","src":"18014:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18008:2:27"},"nodeType":"YulFunctionCall","src":"18008:81:27"},"nodeType":"YulIf","src":"18005:2:27"},{"nodeType":"YulAssignment","src":"18122:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18133:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"18136:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:27"},"nodeType":"YulFunctionCall","src":"18129:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18122:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17870:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"17873:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17879:3:27","type":""}],"src":"17839:305:27"},{"body":{"nodeType":"YulBlock","src":"18195:146:27","statements":[{"nodeType":"YulAssignment","src":"18205:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18228:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18210:17:27"},"nodeType":"YulFunctionCall","src":"18210:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18205:1:27"}]},{"nodeType":"YulAssignment","src":"18239:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18262:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18244:17:27"},"nodeType":"YulFunctionCall","src":"18244:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18239:1:27"}]},{"body":{"nodeType":"YulBlock","src":"18286:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18288:16:27"},"nodeType":"YulFunctionCall","src":"18288:18:27"},"nodeType":"YulExpressionStatement","src":"18288:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18280:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"18283:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18277:2:27"},"nodeType":"YulFunctionCall","src":"18277:8:27"},"nodeType":"YulIf","src":"18274:2:27"},{"nodeType":"YulAssignment","src":"18318:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18330:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"18333:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18326:3:27"},"nodeType":"YulFunctionCall","src":"18326:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18318:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18181:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"18184:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18190:4:27","type":""}],"src":"18150:191:27"},{"body":{"nodeType":"YulBlock","src":"18392:51:27","statements":[{"nodeType":"YulAssignment","src":"18402:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18431:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18413:17:27"},"nodeType":"YulFunctionCall","src":"18413:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18402:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18374:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18384:7:27","type":""}],"src":"18347:96:27"},{"body":{"nodeType":"YulBlock","src":"18491:48:27","statements":[{"nodeType":"YulAssignment","src":"18501:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18526:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18519:6:27"},"nodeType":"YulFunctionCall","src":"18519:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18512:6:27"},"nodeType":"YulFunctionCall","src":"18512:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18501:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18473:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18483:7:27","type":""}],"src":"18449:90:27"},{"body":{"nodeType":"YulBlock","src":"18589:105:27","statements":[{"nodeType":"YulAssignment","src":"18599:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18614:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18621:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18610:3:27"},"nodeType":"YulFunctionCall","src":"18610:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18599:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18571:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18581:7:27","type":""}],"src":"18545:149:27"},{"body":{"nodeType":"YulBlock","src":"18745:81:27","statements":[{"nodeType":"YulAssignment","src":"18755:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18770:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18777:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18766:3:27"},"nodeType":"YulFunctionCall","src":"18766:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18755:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18727:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18737:7:27","type":""}],"src":"18700:126:27"},{"body":{"nodeType":"YulBlock","src":"18877:32:27","statements":[{"nodeType":"YulAssignment","src":"18887:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"18898:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18887:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18859:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18869:7:27","type":""}],"src":"18832:77:27"},{"body":{"nodeType":"YulBlock","src":"18966:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18989:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"18994:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18999:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18976:12:27"},"nodeType":"YulFunctionCall","src":"18976:30:27"},"nodeType":"YulExpressionStatement","src":"18976:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19047:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"19052:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19043:3:27"},"nodeType":"YulFunctionCall","src":"19043:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"19061:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19036:6:27"},"nodeType":"YulFunctionCall","src":"19036:27:27"},"nodeType":"YulExpressionStatement","src":"19036:27:27"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18948:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18953:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"18958:6:27","type":""}],"src":"18915:154:27"},{"body":{"nodeType":"YulBlock","src":"19124:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19134:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19143:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19138:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19203:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19228:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"19233:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19224:3:27"},"nodeType":"YulFunctionCall","src":"19224:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19247:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"19252:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19243:3:27"},"nodeType":"YulFunctionCall","src":"19243:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19237:5:27"},"nodeType":"YulFunctionCall","src":"19237:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19217:6:27"},"nodeType":"YulFunctionCall","src":"19217:39:27"},"nodeType":"YulExpressionStatement","src":"19217:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19164:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"19167:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19161:2:27"},"nodeType":"YulFunctionCall","src":"19161:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19175:19:27","statements":[{"nodeType":"YulAssignment","src":"19177:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19186:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"19189:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19182:3:27"},"nodeType":"YulFunctionCall","src":"19182:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19177:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"19157:3:27","statements":[]},"src":"19153:113:27"},{"body":{"nodeType":"YulBlock","src":"19300:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19350:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"19355:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19346:3:27"},"nodeType":"YulFunctionCall","src":"19346:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"19364:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19339:6:27"},"nodeType":"YulFunctionCall","src":"19339:27:27"},"nodeType":"YulExpressionStatement","src":"19339:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19281:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"19284:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19278:2:27"},"nodeType":"YulFunctionCall","src":"19278:13:27"},"nodeType":"YulIf","src":"19275:2:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19106:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19111:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"19116:6:27","type":""}],"src":"19075:307:27"},{"body":{"nodeType":"YulBlock","src":"19439:269:27","statements":[{"nodeType":"YulAssignment","src":"19449:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19463:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"19469:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19459:3:27"},"nodeType":"YulFunctionCall","src":"19459:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19449:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"19480:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19510:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"19516:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19506:3:27"},"nodeType":"YulFunctionCall","src":"19506:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19484:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19557:51:27","statements":[{"nodeType":"YulAssignment","src":"19571:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19585:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19581:3:27"},"nodeType":"YulFunctionCall","src":"19581:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19571:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19537:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19530:6:27"},"nodeType":"YulFunctionCall","src":"19530:26:27"},"nodeType":"YulIf","src":"19527:2:27"},{"body":{"nodeType":"YulBlock","src":"19660:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19674:16:27"},"nodeType":"YulFunctionCall","src":"19674:18:27"},"nodeType":"YulExpressionStatement","src":"19674:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19624:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19647:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19655:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19644:2:27"},"nodeType":"YulFunctionCall","src":"19644:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19621:2:27"},"nodeType":"YulFunctionCall","src":"19621:38:27"},"nodeType":"YulIf","src":"19618:2:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19423:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19432:6:27","type":""}],"src":"19388:320:27"},{"body":{"nodeType":"YulBlock","src":"19757:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19767:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19789:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19819:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19797:21:27"},"nodeType":"YulFunctionCall","src":"19797:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19785:3:27"},"nodeType":"YulFunctionCall","src":"19785:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19771:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19936:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19938:16:27"},"nodeType":"YulFunctionCall","src":"19938:18:27"},"nodeType":"YulExpressionStatement","src":"19938:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19879:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"19891:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19876:2:27"},"nodeType":"YulFunctionCall","src":"19876:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19915:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19927:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19912:2:27"},"nodeType":"YulFunctionCall","src":"19912:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19873:2:27"},"nodeType":"YulFunctionCall","src":"19873:62:27"},"nodeType":"YulIf","src":"19870:2:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19974:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19978:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19967:6:27"},"nodeType":"YulFunctionCall","src":"19967:22:27"},"nodeType":"YulExpressionStatement","src":"19967:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19743:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"19751:4:27","type":""}],"src":"19714:281:27"},{"body":{"nodeType":"YulBlock","src":"20029:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20046:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20049:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20039:6:27"},"nodeType":"YulFunctionCall","src":"20039:88:27"},"nodeType":"YulExpressionStatement","src":"20039:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20143:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20146:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20136:6:27"},"nodeType":"YulFunctionCall","src":"20136:15:27"},"nodeType":"YulExpressionStatement","src":"20136:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20167:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20170:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20160:6:27"},"nodeType":"YulFunctionCall","src":"20160:15:27"},"nodeType":"YulExpressionStatement","src":"20160:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20001:180:27"},{"body":{"nodeType":"YulBlock","src":"20215:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20232:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20235:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20225:6:27"},"nodeType":"YulFunctionCall","src":"20225:88:27"},"nodeType":"YulExpressionStatement","src":"20225:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20329:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20332:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20322:6:27"},"nodeType":"YulFunctionCall","src":"20322:15:27"},"nodeType":"YulExpressionStatement","src":"20322:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20356:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20346:6:27"},"nodeType":"YulFunctionCall","src":"20346:15:27"},"nodeType":"YulExpressionStatement","src":"20346:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20187:180:27"},{"body":{"nodeType":"YulBlock","src":"20401:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20418:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20421:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20411:6:27"},"nodeType":"YulFunctionCall","src":"20411:88:27"},"nodeType":"YulExpressionStatement","src":"20411:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20515:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20518:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20508:6:27"},"nodeType":"YulFunctionCall","src":"20508:15:27"},"nodeType":"YulExpressionStatement","src":"20508:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20539:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20542:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20532:6:27"},"nodeType":"YulFunctionCall","src":"20532:15:27"},"nodeType":"YulExpressionStatement","src":"20532:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20373:180:27"},{"body":{"nodeType":"YulBlock","src":"20587:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20604:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20607:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20597:6:27"},"nodeType":"YulFunctionCall","src":"20597:88:27"},"nodeType":"YulExpressionStatement","src":"20597:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20701:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20704:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20694:6:27"},"nodeType":"YulFunctionCall","src":"20694:15:27"},"nodeType":"YulExpressionStatement","src":"20694:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20725:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20728:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20718:6:27"},"nodeType":"YulFunctionCall","src":"20718:15:27"},"nodeType":"YulExpressionStatement","src":"20718:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20559:180:27"},{"body":{"nodeType":"YulBlock","src":"20834:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20851:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20854:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20844:6:27"},"nodeType":"YulFunctionCall","src":"20844:12:27"},"nodeType":"YulExpressionStatement","src":"20844:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20745:117:27"},{"body":{"nodeType":"YulBlock","src":"20957:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20974:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20977:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20967:6:27"},"nodeType":"YulFunctionCall","src":"20967:12:27"},"nodeType":"YulExpressionStatement","src":"20967:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20868:117:27"},{"body":{"nodeType":"YulBlock","src":"21080:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21097:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21100:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21090:6:27"},"nodeType":"YulFunctionCall","src":"21090:12:27"},"nodeType":"YulExpressionStatement","src":"21090:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20991:117:27"},{"body":{"nodeType":"YulBlock","src":"21203:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21220:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21223:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21213:6:27"},"nodeType":"YulFunctionCall","src":"21213:12:27"},"nodeType":"YulExpressionStatement","src":"21213:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21114:117:27"},{"body":{"nodeType":"YulBlock","src":"21285:54:27","statements":[{"nodeType":"YulAssignment","src":"21295:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21313:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21309:3:27"},"nodeType":"YulFunctionCall","src":"21309:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21329:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21325:3:27"},"nodeType":"YulFunctionCall","src":"21325:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21305:3:27"},"nodeType":"YulFunctionCall","src":"21305:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21295:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21268:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21278:6:27","type":""}],"src":"21237:102:27"},{"body":{"nodeType":"YulBlock","src":"21451:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21473:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21481:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21469:3:27"},"nodeType":"YulFunctionCall","src":"21469:14:27"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"21485:34:27","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21462:6:27"},"nodeType":"YulFunctionCall","src":"21462:58:27"},"nodeType":"YulExpressionStatement","src":"21462:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21541:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21549:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21537:3:27"},"nodeType":"YulFunctionCall","src":"21537:15:27"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21554:15:27","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21530:6:27"},"nodeType":"YulFunctionCall","src":"21530:40:27"},"nodeType":"YulExpressionStatement","src":"21530:40:27"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21443:6:27","type":""}],"src":"21345:232:27"},{"body":{"nodeType":"YulBlock","src":"21689:131:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21711:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21719:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21707:3:27"},"nodeType":"YulFunctionCall","src":"21707:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21723:34:27","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21700:6:27"},"nodeType":"YulFunctionCall","src":"21700:58:27"},"nodeType":"YulExpressionStatement","src":"21700:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21779:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21787:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21775:3:27"},"nodeType":"YulFunctionCall","src":"21775:15:27"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21792:20:27","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21768:6:27"},"nodeType":"YulFunctionCall","src":"21768:45:27"},"nodeType":"YulExpressionStatement","src":"21768:45:27"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21681:6:27","type":""}],"src":"21583:237:27"},{"body":{"nodeType":"YulBlock","src":"21932:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21954:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21962:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21950:3:27"},"nodeType":"YulFunctionCall","src":"21950:14:27"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"21966:34:27","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21943:6:27"},"nodeType":"YulFunctionCall","src":"21943:58:27"},"nodeType":"YulExpressionStatement","src":"21943:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22022:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22030:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:27"},"nodeType":"YulFunctionCall","src":"22018:15:27"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22035:7:27","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22011:6:27"},"nodeType":"YulFunctionCall","src":"22011:32:27"},"nodeType":"YulExpressionStatement","src":"22011:32:27"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21924:6:27","type":""}],"src":"21826:224:27"},{"body":{"nodeType":"YulBlock","src":"22162:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22184:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22192:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22180:3:27"},"nodeType":"YulFunctionCall","src":"22180:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22196:34:27","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22173:6:27"},"nodeType":"YulFunctionCall","src":"22173:58:27"},"nodeType":"YulExpressionStatement","src":"22173:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22252:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22260:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22248:3:27"},"nodeType":"YulFunctionCall","src":"22248:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22265:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22241:6:27"},"nodeType":"YulFunctionCall","src":"22241:31:27"},"nodeType":"YulExpressionStatement","src":"22241:31:27"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22154:6:27","type":""}],"src":"22056:223:27"},{"body":{"nodeType":"YulBlock","src":"22391:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22413:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22421:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22409:3:27"},"nodeType":"YulFunctionCall","src":"22409:14:27"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"22425:27:27","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22402:6:27"},"nodeType":"YulFunctionCall","src":"22402:51:27"},"nodeType":"YulExpressionStatement","src":"22402:51:27"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22383:6:27","type":""}],"src":"22285:175:27"},{"body":{"nodeType":"YulBlock","src":"22572:122:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22594:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22602:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22590:3:27"},"nodeType":"YulFunctionCall","src":"22590:14:27"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"22606:34:27","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22583:6:27"},"nodeType":"YulFunctionCall","src":"22583:58:27"},"nodeType":"YulExpressionStatement","src":"22583:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22662:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22670:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22658:3:27"},"nodeType":"YulFunctionCall","src":"22658:15:27"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22675:11:27","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22651:6:27"},"nodeType":"YulFunctionCall","src":"22651:36:27"},"nodeType":"YulExpressionStatement","src":"22651:36:27"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22564:6:27","type":""}],"src":"22466:228:27"},{"body":{"nodeType":"YulBlock","src":"22806:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22828:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22836:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22824:3:27"},"nodeType":"YulFunctionCall","src":"22824:14:27"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22840:26:27","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22817:6:27"},"nodeType":"YulFunctionCall","src":"22817:50:27"},"nodeType":"YulExpressionStatement","src":"22817:50:27"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22798:6:27","type":""}],"src":"22700:174:27"},{"body":{"nodeType":"YulBlock","src":"22986:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23008:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23016:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23004:3:27"},"nodeType":"YulFunctionCall","src":"23004:14:27"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"23020:34:27","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22997:6:27"},"nodeType":"YulFunctionCall","src":"22997:58:27"},"nodeType":"YulExpressionStatement","src":"22997:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23076:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23084:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23072:3:27"},"nodeType":"YulFunctionCall","src":"23072:15:27"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"23089:3:27","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23065:6:27"},"nodeType":"YulFunctionCall","src":"23065:28:27"},"nodeType":"YulExpressionStatement","src":"23065:28:27"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22978:6:27","type":""}],"src":"22880:220:27"},{"body":{"nodeType":"YulBlock","src":"23212:142:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23234:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23242:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23230:3:27"},"nodeType":"YulFunctionCall","src":"23230:14:27"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"23246:34:27","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23223:6:27"},"nodeType":"YulFunctionCall","src":"23223:58:27"},"nodeType":"YulExpressionStatement","src":"23223:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23302:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23310:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23298:3:27"},"nodeType":"YulFunctionCall","src":"23298:15:27"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"23315:31:27","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23291:6:27"},"nodeType":"YulFunctionCall","src":"23291:56:27"},"nodeType":"YulExpressionStatement","src":"23291:56:27"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23204:6:27","type":""}],"src":"23106:248:27"},{"body":{"nodeType":"YulBlock","src":"23403:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"23460:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23469:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23472:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23462:6:27"},"nodeType":"YulFunctionCall","src":"23462:12:27"},"nodeType":"YulExpressionStatement","src":"23462:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23426:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23451:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23433:17:27"},"nodeType":"YulFunctionCall","src":"23433:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23423:2:27"},"nodeType":"YulFunctionCall","src":"23423:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23416:6:27"},"nodeType":"YulFunctionCall","src":"23416:43:27"},"nodeType":"YulIf","src":"23413:2:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23396:5:27","type":""}],"src":"23360:122:27"},{"body":{"nodeType":"YulBlock","src":"23528:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"23582:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23591:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23594:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23584:6:27"},"nodeType":"YulFunctionCall","src":"23584:12:27"},"nodeType":"YulExpressionStatement","src":"23584:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23551:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23573:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"23558:14:27"},"nodeType":"YulFunctionCall","src":"23558:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23548:2:27"},"nodeType":"YulFunctionCall","src":"23548:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23541:6:27"},"nodeType":"YulFunctionCall","src":"23541:40:27"},"nodeType":"YulIf","src":"23538:2:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23521:5:27","type":""}],"src":"23488:116:27"},{"body":{"nodeType":"YulBlock","src":"23652:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"23708:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23717:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23720:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23710:6:27"},"nodeType":"YulFunctionCall","src":"23710:12:27"},"nodeType":"YulExpressionStatement","src":"23710:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23675:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23699:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23682:16:27"},"nodeType":"YulFunctionCall","src":"23682:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23672:2:27"},"nodeType":"YulFunctionCall","src":"23672:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23665:6:27"},"nodeType":"YulFunctionCall","src":"23665:42:27"},"nodeType":"YulIf","src":"23662:2:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23645:5:27","type":""}],"src":"23610:120:27"},{"body":{"nodeType":"YulBlock","src":"23779:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"23836:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23845:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23848:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23838:6:27"},"nodeType":"YulFunctionCall","src":"23838:12:27"},"nodeType":"YulExpressionStatement","src":"23838:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23802:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23827:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23809:17:27"},"nodeType":"YulFunctionCall","src":"23809:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23799:2:27"},"nodeType":"YulFunctionCall","src":"23799:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23792:6:27"},"nodeType":"YulFunctionCall","src":"23792:43:27"},"nodeType":"YulIf","src":"23789:2:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23772:5:27","type":""}],"src":"23736:122:27"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea26469706673582212201344a3b56bd46ac8e3be564a426cb60a67b3c62e5ef64c39e40cf4d3779e30b464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DIFFICULTY LOG3 0xB5 PUSH12 0xD46AC8E3BE564A426CB60A67 0xB3 0xC6 0x2E 0x5E 0xF6 0x4C CODECOPY 0xE4 0xC DELEGATECALL 0xD3 PUSH24 0x9E30B464736F6C6343000806003300000000000000000000 ","sourceMap":"628:16327:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:6:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:18:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:6:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:23:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:27:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;280:79;;:::i;:::-;249:2;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;475:87;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;617:84;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;758:86;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;912:79;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:2;;1122:79;;:::i;:::-;1081:2;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1406:87;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:2;;;1613:79;;:::i;:::-;1575:2;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1565:263;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:2;;;1965:79;;:::i;:::-;1927:2;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1917:391;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:2;;;2462:79;;:::i;:::-;2424:2;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2414:519;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:2;;;3114:79;;:::i;:::-;3075:2;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:2;;;3698:79;;:::i;:::-;3662:2;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;3065:817;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:2;;;4016:79;;:::i;:::-;3978:2;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3968:388;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:2;;;4493:79;;:::i;:::-;4455:2;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4445:391;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:2;;;4955:79;;:::i;:::-;4917:2;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4907:262;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:2;;;5299:79;;:::i;:::-;5261:2;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5251:273;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:2;;;5644:79;;:::i;:::-;5606:2;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5596:263;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5930:53;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;6048:50;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7369:220;;;:::o;7595:366::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7741:220;;;:::o;7967:366::-;8109:3;8130:67;8194:2;8189:3;8130:67;:::i;:::-;8123:74;;8206:93;8295:3;8206:93;:::i;:::-;8324:2;8319:3;8315:12;8308:19;;8113:220;;;:::o;8339:366::-;8481:3;8502:67;8566:2;8561:3;8502:67;:::i;:::-;8495:74;;8578:93;8667:3;8578:93;:::i;:::-;8696:2;8691:3;8687:12;8680:19;;8485:220;;;:::o;8711:366::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8857:220;;;:::o;9083:366::-;9225:3;9246:67;9310:2;9305:3;9246:67;:::i;:::-;9239:74;;9322:93;9411:3;9322:93;:::i;:::-;9440:2;9435:3;9431:12;9424:19;;9229:220;;;:::o;9455:366::-;9597:3;9618:67;9682:2;9677:3;9618:67;:::i;:::-;9611:74;;9694:93;9783:3;9694:93;:::i;:::-;9812:2;9807:3;9803:12;9796:19;;9601:220;;;:::o;9827:366::-;9969:3;9990:67;10054:2;10049:3;9990:67;:::i;:::-;9983:74;;10066:93;10155:3;10066:93;:::i;:::-;10184:2;10179:3;10175:12;10168:19;;9973:220;;;:::o;10199:366::-;10341:3;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10345:220;;;:::o;10571:118::-;10658:24;10676:5;10658:24;:::i;:::-;10653:3;10646:37;10636:53;;:::o;10695:435::-;10875:3;10897:95;10988:3;10979:6;10897:95;:::i;:::-;10890:102;;11009:95;11100:3;11091:6;11009:95;:::i;:::-;11002:102;;11121:3;11114:10;;10879:251;;;;;:::o;11136:222::-;11229:4;11267:2;11256:9;11252:18;11244:26;;11280:71;11348:1;11337:9;11333:17;11324:6;11280:71;:::i;:::-;11234:124;;;;:::o;11364:640::-;11559:4;11597:3;11586:9;11582:19;11574:27;;11611:71;11679:1;11668:9;11664:17;11655:6;11611:71;:::i;:::-;11692:72;11760:2;11749:9;11745:18;11736:6;11692:72;:::i;:::-;11774;11842:2;11831:9;11827:18;11818:6;11774:72;:::i;:::-;11893:9;11887:4;11883:20;11878:2;11867:9;11863:18;11856:48;11921:76;11992:4;11983:6;11921:76;:::i;:::-;11913:84;;11564:440;;;;;;;:::o;12010:210::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:65;12210:1;12199:9;12195:17;12186:6;12148:65;:::i;:::-;12102:118;;;;:::o;12226:313::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12426:9;12420:4;12416:20;12412:1;12401:9;12397:17;12390:47;12454:78;12527:4;12518:6;12454:78;:::i;:::-;12446:86;;12344:195;;;;:::o;12545:419::-;12711:4;12749:2;12738:9;12734:18;12726:26;;12798:9;12792:4;12788:20;12784:1;12773:9;12769:17;12762:47;12826:131;12952:4;12826:131;:::i;:::-;12818:139;;12716:248;;;:::o;12970:419::-;13136:4;13174:2;13163:9;13159:18;13151:26;;13223:9;13217:4;13213:20;13209:1;13198:9;13194:17;13187:47;13251:131;13377:4;13251:131;:::i;:::-;13243:139;;13141:248;;;:::o;13395:419::-;13561:4;13599:2;13588:9;13584:18;13576:26;;13648:9;13642:4;13638:20;13634:1;13623:9;13619:17;13612:47;13676:131;13802:4;13676:131;:::i;:::-;13668:139;;13566:248;;;:::o;13820:419::-;13986:4;14024:2;14013:9;14009:18;14001:26;;14073:9;14067:4;14063:20;14059:1;14048:9;14044:17;14037:47;14101:131;14227:4;14101:131;:::i;:::-;14093:139;;13991:248;;;:::o;14245:419::-;14411:4;14449:2;14438:9;14434:18;14426:26;;14498:9;14492:4;14488:20;14484:1;14473:9;14469:17;14462:47;14526:131;14652:4;14526:131;:::i;:::-;14518:139;;14416:248;;;:::o;14670:419::-;14836:4;14874:2;14863:9;14859:18;14851:26;;14923:9;14917:4;14913:20;14909:1;14898:9;14894:17;14887:47;14951:131;15077:4;14951:131;:::i;:::-;14943:139;;14841:248;;;:::o;15095:419::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15348:9;15342:4;15338:20;15334:1;15323:9;15319:17;15312:47;15376:131;15502:4;15376:131;:::i;:::-;15368:139;;15266:248;;;:::o;15520:419::-;15686:4;15724:2;15713:9;15709:18;15701:26;;15773:9;15767:4;15763:20;15759:1;15748:9;15744:17;15737:47;15801:131;15927:4;15801:131;:::i;:::-;15793:139;;15691:248;;;:::o;15945:419::-;16111:4;16149:2;16138:9;16134:18;16126:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16226:131;16352:4;16226:131;:::i;:::-;16218:139;;16116:248;;;:::o;16370:222::-;16463:4;16501:2;16490:9;16486:18;16478:26;;16514:71;16582:1;16571:9;16567:17;16558:6;16514:71;:::i;:::-;16468:124;;;;:::o;16598:129::-;16632:6;16659:20;;:::i;:::-;16649:30;;16688:33;16716:4;16708:6;16688:33;:::i;:::-;16639:88;;;:::o;16733:75::-;16766:6;16799:2;16793:9;16783:19;;16773:35;:::o;16814:307::-;16875:4;16965:18;16957:6;16954:30;16951:2;;;16987:18;;:::i;:::-;16951:2;17025:29;17047:6;17025:29;:::i;:::-;17017:37;;17109:4;17103;17099:15;17091:23;;16880:241;;;:::o;17127:98::-;17178:6;17212:5;17206:12;17196:22;;17185:40;;;:::o;17231:99::-;17283:6;17317:5;17311:12;17301:22;;17290:40;;;:::o;17336:168::-;17419:11;17453:6;17448:3;17441:19;17493:4;17488:3;17484:14;17469:29;;17431:73;;;;:::o;17510:169::-;17594:11;17628:6;17623:3;17616:19;17668:4;17663:3;17659:14;17644:29;;17606:73;;;;:::o;17685:148::-;17787:11;17824:3;17809:18;;17799:34;;;;:::o;17839:305::-;17879:3;17898:20;17916:1;17898:20;:::i;:::-;17893:25;;17932:20;17950:1;17932:20;:::i;:::-;17927:25;;18086:1;18018:66;18014:74;18011:1;18008:81;18005:2;;;18092:18;;:::i;:::-;18005:2;18136:1;18133;18129:9;18122:16;;17883:261;;;;:::o;18150:191::-;18190:4;18210:20;18228:1;18210:20;:::i;:::-;18205:25;;18244:20;18262:1;18244:20;:::i;:::-;18239:25;;18283:1;18280;18277:8;18274:2;;;18288:18;;:::i;:::-;18274:2;18333:1;18330;18326:9;18318:17;;18195:146;;;;:::o;18347:96::-;18384:7;18413:24;18431:5;18413:24;:::i;:::-;18402:35;;18392:51;;;:::o;18449:90::-;18483:7;18526:5;18519:13;18512:21;18501:32;;18491:48;;;:::o;18545:149::-;18581:7;18621:66;18614:5;18610:78;18599:89;;18589:105;;;:::o;18700:126::-;18737:7;18777:42;18770:5;18766:54;18755:65;;18745:81;;;:::o;18832:77::-;18869:7;18898:5;18887:16;;18877:32;;;:::o;18915:154::-;18999:6;18994:3;18989;18976:30;19061:1;19052:6;19047:3;19043:16;19036:27;18966:103;;;:::o;19075:307::-;19143:1;19153:113;19167:6;19164:1;19161:13;19153:113;;;19252:1;19247:3;19243:11;19237:18;19233:1;19228:3;19224:11;19217:39;19189:2;19186:1;19182:10;19177:15;;19153:113;;;19284:6;19281:1;19278:13;19275:2;;;19364:1;19355:6;19350:3;19346:16;19339:27;19275:2;19124:258;;;;:::o;19388:320::-;19432:6;19469:1;19463:4;19459:12;19449:22;;19516:1;19510:4;19506:12;19537:18;19527:2;;19593:4;19585:6;19581:17;19571:27;;19527:2;19655;19647:6;19644:14;19624:18;19621:38;19618:2;;;19674:18;;:::i;:::-;19618:2;19439:269;;;;:::o;19714:281::-;19797:27;19819:4;19797:27;:::i;:::-;19789:6;19785:40;19927:6;19915:10;19912:22;19891:18;19879:10;19876:34;19873:62;19870:2;;;19938:18;;:::i;:::-;19870:2;19978:10;19974:2;19967:22;19757:238;;;:::o;20001:180::-;20049:77;20046:1;20039:88;20146:4;20143:1;20136:15;20170:4;20167:1;20160:15;20187:180;20235:77;20232:1;20225:88;20332:4;20329:1;20322:15;20356:4;20353:1;20346:15;20373:180;20421:77;20418:1;20411:88;20518:4;20515:1;20508:15;20542:4;20539:1;20532:15;20559:180;20607:77;20604:1;20597:88;20704:4;20701:1;20694:15;20728:4;20725:1;20718:15;20745:117;20854:1;20851;20844:12;20868:117;20977:1;20974;20967:12;20991:117;21100:1;21097;21090:12;21114:117;21223:1;21220;21213:12;21237:102;21278:6;21329:2;21325:7;21320:2;21313:5;21309:14;21305:28;21295:38;;21285:54;;;:::o;21345:232::-;21485:34;21481:1;21473:6;21469:14;21462:58;21554:15;21549:2;21541:6;21537:15;21530:40;21451:126;:::o;21583:237::-;21723:34;21719:1;21711:6;21707:14;21700:58;21792:20;21787:2;21779:6;21775:15;21768:45;21689:131;:::o;21826:224::-;21966:34;21962:1;21954:6;21950:14;21943:58;22035:7;22030:2;22022:6;22018:15;22011:32;21932:118;:::o;22056:223::-;22196:34;22192:1;22184:6;22180:14;22173:58;22265:6;22260:2;22252:6;22248:15;22241:31;22162:117;:::o;22285:175::-;22425:27;22421:1;22413:6;22409:14;22402:51;22391:69;:::o;22466:228::-;22606:34;22602:1;22594:6;22590:14;22583:58;22675:11;22670:2;22662:6;22658:15;22651:36;22572:122;:::o;22700:174::-;22840:26;22836:1;22828:6;22824:14;22817:50;22806:68;:::o;22880:220::-;23020:34;23016:1;23008:6;23004:14;22997:58;23089:3;23084:2;23076:6;23072:15;23065:28;22986:114;:::o;23106:248::-;23246:34;23242:1;23234:6;23230:14;23223:58;23315:31;23310:2;23302:6;23298:15;23291:56;23212:142;:::o;23360:122::-;23433:24;23451:5;23433:24;:::i;:::-;23426:5;23423:35;23413:2;;23472:1;23469;23462:12;23413:2;23403:79;:::o;23488:116::-;23558:21;23573:5;23558:21;:::i;:::-;23551:5;23548:32;23538:2;;23594:1;23591;23584:12;23538:2;23528:76;:::o;23610:120::-;23682:23;23699:5;23682:23;:::i;:::-;23675:5;23672:34;23662:2;;23720:1;23717;23710:12;23662:2;23652:78;:::o;23736:122::-;23809:24;23827:5;23809:24;:::i;:::-;23802:5;23799:35;23789:2;;23848:1;23845;23838:12;23789:2;23779:79;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"ERC721Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getApproved(uint256)":"081812fc","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nonces(address)":"7ecebe00","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts as 1 vote unit. Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of the votes in governance decisions, or they can delegate to themselves to be their own representative. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":\"ERC721Votes\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":{\"keccak256\":\"0x19cf96045e935b99fe8fc15018af1d74203ad6ae1b301b950da4e90ddec05f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6233da69d82699c102aa28e6f63ff2935655918ce8f44ae555185be73a1a3fbd\",\"dweb:/ipfs/QmPc2QL2xWY3UsbmAKV3KWREXU4omp3dodW6hSpzdMiqFC\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x676d65383d5311b6c1fe9c6b580a32abd0a5582d1d5d2b67f388153578a9bbc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ee8207d98ba4aae20941a8d48673e60c89b8aaf4e91eb99c6d7fc2d57ce2e\",\"dweb:/ipfs/QmTCZisUyrBMkVMDY7nQ8jCaV87yZhsQ5dG7QNbbD6ViJe\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201aca2005f840cdf6c519fb853d45cbcba068da33d69918cef846561f970ac19d64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xCA KECCAK256 SDIV 0xF8 BLOCKHASH 0xCD 0xF6 0xC5 NOT 0xFB DUP6 RETURNDATASIZE GASLIMIT 0xCB 0xCB LOG0 PUSH9 0xDA33D69918CEF84656 0x1F SWAP8 EXP 0xC1 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"194:8964:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201aca2005f840cdf6c519fb853d45cbcba068da33d69918cef846561f970ac19d64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xCA KECCAK256 SDIV 0xF8 BLOCKHASH 0xCD 0xF6 0xC5 NOT 0xFB DUP6 RETURNDATASIZE GASLIMIT 0xCB 0xCB LOG0 PUSH9 0xDA33D69918CEF84656 0x1F SWAP8 EXP 0xC1 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"194:8964:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Checkpoints.sol":{"Checkpoints":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea191317927c43590a537c042224218a598c09f08d55ceb37a83a4a6dd65084764736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA NOT SGT OR SWAP3 PUSH29 0x43590A537C042224218A598C09F08D55CEB37A83A4A6DD65084764736F PUSH13 0x63430008060033000000000000 ","sourceMap":"708:17571:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea191317927c43590a537c042224218a598c09f08d55ceb37a83a4a6dd65084764736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA NOT SGT OR SWAP3 PUSH29 0x43590A537C042224218A598C09F08D55CEB37A83A4A6DD65084764736F PUSH13 0x63430008060033000000000000 ","sourceMap":"708:17571:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x676d65383d5311b6c1fe9c6b580a32abd0a5582d1d5d2b67f388153578a9bbc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ee8207d98ba4aae20941a8d48673e60c89b8aaf4e91eb99c6d7fc2d57ce2e\",\"dweb:/ipfs/QmTCZisUyrBMkVMDY7nQ8jCaV87yZhsQ5dG7QNbbD6ViJe\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT ISZERO PUSH9 0xD64F3CBD009470B339 0xD6 0xDC SWAP2 0x2D 0xAC SWAP3 0x5E EXP 0xC5 EQ DUP7 SAR DUP4 0xE5 0xE7 PUSH5 0xB8DF3B6473 PUSH16 0x6C634300080600330000000000000000 ","sourceMap":"424:971:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT ISZERO PUSH9 0xD64F3CBD009470B339 0xD6 0xDC SWAP2 0x2D 0xAC SWAP3 0x5E EXP 0xC5 EQ DUP7 SAR DUP4 0xE5 0xE7 PUSH5 0xB8DF3B6473 PUSH16 0x6C634300080600330000000000000000 ","sourceMap":"424:971:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220484a85608860d05b836516c7c7912bf5c5667805e6ac9fc3f363229e2ae459df64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 0x4A DUP6 PUSH1 0x88 PUSH1 0xD0 JUMPDEST DUP4 PUSH6 0x16C7C7912BF5 0xC5 PUSH7 0x7805E6AC9FC3F3 PUSH4 0x229E2AE4 MSIZE 0xDF PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"188:2065:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220484a85608860d05b836516c7c7912bf5c5667805e6ac9fc3f363229e2ae459df64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 0x4A DUP6 PUSH1 0x88 PUSH1 0xD0 JUMPDEST DUP4 PUSH6 0x16C7C7912BF5 0xC5 PUSH7 0x7805E6AC9FC3F3 PUSH4 0x229E2AE4 MSIZE 0xDF PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"188:2065:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006d96036196b288a185f91e86a30f935be31b778643401f1c39b2dd8cd903eaf64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xD9 PUSH1 0x36 NOT PUSH12 0x288A185F91E86A30F935BE31 0xB7 PUSH25 0x643401F1C39B2DD8CD903EAF64736F6C634300080600330000 ","sourceMap":"369:8168:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006d96036196b288a185f91e86a30f935be31b778643401f1c39b2dd8cd903eaf64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xD9 PUSH1 0x36 NOT PUSH12 0x288A185F91E86A30F935BE31 0xB7 PUSH25 0x643401F1C39B2DD8CD903EAF64736F6C634300080600330000 ","sourceMap":"369:8168:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919550953bbc38b9bbb2e0f0f39dd825f0c4b3e0f3e24318fb60431609a8f53264736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP6 POP SWAP6 EXTCODESIZE 0xBC CODESIZE 0xB9 0xBB 0xB2 0xE0 CREATE RETURN SWAP14 0xD8 0x25 CREATE 0xC4 0xB3 0xE0 RETURN 0xE2 NUMBER XOR 0xFB PUSH1 0x43 AND MULMOD 0xA8 CREATE2 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"202:12302:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919550953bbc38b9bbb2e0f0f39dd825f0c4b3e0f3e24318fb60431609a8f53264736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP6 POP SWAP6 EXTCODESIZE 0xBC CODESIZE 0xB9 0xBB 0xB2 0xE0 CREATE RETURN SWAP14 0xD8 0x25 CREATE 0xC4 0xB3 0xE0 RETURN 0xE2 NUMBER XOR 0xFB PUSH1 0x43 AND MULMOD 0xA8 CREATE2 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"202:12302:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205470a212c45fa2495e2bbf4a90f318935031ea29e8dcf5939e8a7d8c8447cab764736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH17 0xA212C45FA2495E2BBF4A90F318935031EA 0x29 0xE8 0xDC CREATE2 SWAP4 SWAP15 DUP11 PUSH30 0x8C8447CAB764736F6C634300080600330000000000000000000000000000 ","sourceMap":"927:34153:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205470a212c45fa2495e2bbf4a90f318935031ea29e8dcf5939e8a7d8c8447cab764736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH17 0xA212C45FA2495E2BBF4A90F318935031EA 0x29 0xE8 0xDC CREATE2 SWAP4 SWAP15 DUP11 PUSH30 0x8C8447CAB764736F6C634300080600330000000000000000000000000000 ","sourceMap":"927:34153:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba6af0154110cf9684add2c2a1a8ae03a2d995d32a45390074e8e590697b8c8164736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH11 0xF0154110CF9684ADD2C2A1 0xA8 0xAE SUB LOG2 0xD9 SWAP6 0xD3 0x2A GASLIMIT CODECOPY STOP PUSH21 0xE8E590697B8C8164736F6C63430008060033000000 ","sourceMap":"1321:11630:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba6af0154110cf9684add2c2a1a8ae03a2d995d32a45390074e8e590697b8c8164736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH11 0xF0154110CF9684ADD2C2A1 0xA8 0xAE SUB LOG2 0xD9 SWAP6 0xD3 0x2A GASLIMIT CODECOPY STOP PUSH21 0xE8E590697B8C8164736F6C63430008060033000000 ","sourceMap":"1321:11630:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"contracts/NFT.sol":{"NFT":{"abi":[{"inputs":[{"internalType":"address","name":"minter","type":"address"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"string","name":"_baseTokenURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_baseTokenUri","type":"string"}],"name":"_setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"mintNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1133":{"entryPoint":null,"id":1133,"parameterSlots":2,"returnSlots":0},"@_5055":{"entryPoint":null,"id":5055,"parameterSlots":2,"returnSlots":0},"@_8250":{"entryPoint":null,"id":8250,"parameterSlots":3,"returnSlots":0},"@_add_7623":{"entryPoint":1177,"id":7623,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_5111":{"entryPoint":610,"id":5111,"parameterSlots":3,"returnSlots":1},"@_contains_7726":{"entryPoint":1299,"id":7726,"parameterSlots":2,"returnSlots":1},"@_grantRole_283":{"entryPoint":764,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":692,"id":415,"parameterSlots":2,"returnSlots":0},"@_msgSender_4354":{"entryPoint":1169,"id":4354,"parameterSlots":0,"returnSlots":1},"@_setupRole_223":{"entryPoint":670,"id":223,"parameterSlots":2,"returnSlots":0},"@add_7923":{"entryPoint":1006,"id":7923,"parameterSlots":2,"returnSlots":1},"@hasRole_79":{"entryPoint":1062,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1510,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory":{"entryPoint":1659,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1816,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1833,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":1926,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1957,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":2021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2041,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2051,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2083,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2093,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2147,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2201,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2255,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2302,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2349,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2354,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2359,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2364,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2369,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2386,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5795:27","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:27","statements":[{"nodeType":"YulAssignment","src":"112:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:27"},"nodeType":"YulFunctionCall","src":"137:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:27"},"nodeType":"YulFunctionCall","src":"121:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:27"},"nodeType":"YulFunctionCall","src":"196:21:27"},"nodeType":"YulExpressionStatement","src":"196:21:27"},{"nodeType":"YulVariableDeclaration","src":"226:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:27"},"nodeType":"YulFunctionCall","src":"237:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:27"},"nodeType":"YulFunctionCall","src":"293:79:27"},"nodeType":"YulExpressionStatement","src":"293:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:27"},"nodeType":"YulFunctionCall","src":"268:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:27"},"nodeType":"YulFunctionCall","src":"265:25:27"},"nodeType":"YulIf","src":"262:2:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:27"},"nodeType":"YulFunctionCall","src":"383:39:27"},"nodeType":"YulExpressionStatement","src":"383:39:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:27","type":""}],"src":"7:421:27"},{"body":{"nodeType":"YulBlock","src":"497:80:27","statements":[{"nodeType":"YulAssignment","src":"507:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"522:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"516:5:27"},"nodeType":"YulFunctionCall","src":"516:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"507:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"538:26:27"},"nodeType":"YulFunctionCall","src":"538:33:27"},"nodeType":"YulExpressionStatement","src":"538:33:27"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"475:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"483:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"491:5:27","type":""}],"src":"434:143:27"},{"body":{"nodeType":"YulBlock","src":"670:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"719:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"721:77:27"},"nodeType":"YulFunctionCall","src":"721:79:27"},"nodeType":"YulExpressionStatement","src":"721:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"706:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"694:3:27"},"nodeType":"YulFunctionCall","src":"694:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"713:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"690:3:27"},"nodeType":"YulFunctionCall","src":"690:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"683:6:27"},"nodeType":"YulFunctionCall","src":"683:35:27"},"nodeType":"YulIf","src":"680:2:27"},{"nodeType":"YulVariableDeclaration","src":"811:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"831:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"825:5:27"},"nodeType":"YulFunctionCall","src":"825:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"815:6:27","type":""}]},{"nodeType":"YulAssignment","src":"847:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"919:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"927:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"915:3:27"},"nodeType":"YulFunctionCall","src":"915:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"934:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"942:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"856:58:27"},"nodeType":"YulFunctionCall","src":"856:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"847:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"648:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"656:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"664:5:27","type":""}],"src":"597:355:27"},{"body":{"nodeType":"YulBlock","src":"1079:715:27","statements":[{"body":{"nodeType":"YulBlock","src":"1125:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1127:77:27"},"nodeType":"YulFunctionCall","src":"1127:79:27"},"nodeType":"YulExpressionStatement","src":"1127:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1100:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1096:3:27"},"nodeType":"YulFunctionCall","src":"1096:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1121:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1092:3:27"},"nodeType":"YulFunctionCall","src":"1092:32:27"},"nodeType":"YulIf","src":"1089:2:27"},{"nodeType":"YulBlock","src":"1218:128:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1233:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1247:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1237:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1262:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1308:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1319:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1304:3:27"},"nodeType":"YulFunctionCall","src":"1304:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1328:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1272:31:27"},"nodeType":"YulFunctionCall","src":"1272:64:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1262:6:27"}]}]},{"nodeType":"YulBlock","src":"1356:129:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1371:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1385:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1375:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1401:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1447:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:27"},"nodeType":"YulFunctionCall","src":"1443:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1467:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1411:31:27"},"nodeType":"YulFunctionCall","src":"1411:64:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1401:6:27"}]}]},{"nodeType":"YulBlock","src":"1495:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1510:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1534:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1545:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:27"},"nodeType":"YulFunctionCall","src":"1530:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1524:5:27"},"nodeType":"YulFunctionCall","src":"1524:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1514:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1596:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1598:77:27"},"nodeType":"YulFunctionCall","src":"1598:79:27"},"nodeType":"YulExpressionStatement","src":"1598:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1568:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1576:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1565:2:27"},"nodeType":"YulFunctionCall","src":"1565:30:27"},"nodeType":"YulIf","src":"1562:2:27"},{"nodeType":"YulAssignment","src":"1693:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1749:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1760:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1745:3:27"},"nodeType":"YulFunctionCall","src":"1745:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1769:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1703:41:27"},"nodeType":"YulFunctionCall","src":"1703:74:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1693:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1033:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1044:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1056:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1064:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1072:6:27","type":""}],"src":"958:836:27"},{"body":{"nodeType":"YulBlock","src":"1865:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1882:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1905:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1887:17:27"},"nodeType":"YulFunctionCall","src":"1887:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1875:6:27"},"nodeType":"YulFunctionCall","src":"1875:37:27"},"nodeType":"YulExpressionStatement","src":"1875:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1853:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1860:3:27","type":""}],"src":"1800:118:27"},{"body":{"nodeType":"YulBlock","src":"1989:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2006:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2029:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2011:17:27"},"nodeType":"YulFunctionCall","src":"2011:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1999:6:27"},"nodeType":"YulFunctionCall","src":"1999:37:27"},"nodeType":"YulExpressionStatement","src":"1999:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1977:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1984:3:27","type":""}],"src":"1924:118:27"},{"body":{"nodeType":"YulBlock","src":"2113:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2130:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2153:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2135:17:27"},"nodeType":"YulFunctionCall","src":"2135:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2123:6:27"},"nodeType":"YulFunctionCall","src":"2123:37:27"},"nodeType":"YulExpressionStatement","src":"2123:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2101:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2108:3:27","type":""}],"src":"2048:118:27"},{"body":{"nodeType":"YulBlock","src":"2382:454:27","statements":[{"nodeType":"YulAssignment","src":"2392:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2404:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2415:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2400:3:27"},"nodeType":"YulFunctionCall","src":"2400:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2392:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2473:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2486:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2497:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2482:3:27"},"nodeType":"YulFunctionCall","src":"2482:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2429:43:27"},"nodeType":"YulFunctionCall","src":"2429:71:27"},"nodeType":"YulExpressionStatement","src":"2429:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2554:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2567:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2578:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2563:3:27"},"nodeType":"YulFunctionCall","src":"2563:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2510:43:27"},"nodeType":"YulFunctionCall","src":"2510:72:27"},"nodeType":"YulExpressionStatement","src":"2510:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2636:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2660:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2645:3:27"},"nodeType":"YulFunctionCall","src":"2645:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2592:43:27"},"nodeType":"YulFunctionCall","src":"2592:72:27"},"nodeType":"YulExpressionStatement","src":"2592:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2718:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2731:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2742:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2727:3:27"},"nodeType":"YulFunctionCall","src":"2727:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2674:43:27"},"nodeType":"YulFunctionCall","src":"2674:72:27"},"nodeType":"YulExpressionStatement","src":"2674:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2800:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2813:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2824:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2809:3:27"},"nodeType":"YulFunctionCall","src":"2809:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2756:43:27"},"nodeType":"YulFunctionCall","src":"2756:73:27"},"nodeType":"YulExpressionStatement","src":"2756:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2322:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2334:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2342:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2350:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2358:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2366:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2377:4:27","type":""}],"src":"2172:664:27"},{"body":{"nodeType":"YulBlock","src":"2883:88:27","statements":[{"nodeType":"YulAssignment","src":"2893:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2903:18:27"},"nodeType":"YulFunctionCall","src":"2903:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2893:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2952:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"2960:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2932:19:27"},"nodeType":"YulFunctionCall","src":"2932:33:27"},"nodeType":"YulExpressionStatement","src":"2932:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2867:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2876:6:27","type":""}],"src":"2842:129:27"},{"body":{"nodeType":"YulBlock","src":"3017:35:27","statements":[{"nodeType":"YulAssignment","src":"3027:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3043:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3037:5:27"},"nodeType":"YulFunctionCall","src":"3037:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3027:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3010:6:27","type":""}],"src":"2977:75:27"},{"body":{"nodeType":"YulBlock","src":"3125:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"3230:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3232:16:27"},"nodeType":"YulFunctionCall","src":"3232:18:27"},"nodeType":"YulExpressionStatement","src":"3232:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3202:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3210:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:27"},"nodeType":"YulFunctionCall","src":"3199:30:27"},"nodeType":"YulIf","src":"3196:2:27"},{"nodeType":"YulAssignment","src":"3262:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3292:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3270:21:27"},"nodeType":"YulFunctionCall","src":"3270:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3262:4:27"}]},{"nodeType":"YulAssignment","src":"3336:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3348:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3354:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:27"},"nodeType":"YulFunctionCall","src":"3344:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3336:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3109:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3120:4:27","type":""}],"src":"3058:308:27"},{"body":{"nodeType":"YulBlock","src":"3417:51:27","statements":[{"nodeType":"YulAssignment","src":"3427:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3456:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3438:17:27"},"nodeType":"YulFunctionCall","src":"3438:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3427:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3399:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3409:7:27","type":""}],"src":"3372:96:27"},{"body":{"nodeType":"YulBlock","src":"3519:32:27","statements":[{"nodeType":"YulAssignment","src":"3529:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3540:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3529:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3501:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3511:7:27","type":""}],"src":"3474:77:27"},{"body":{"nodeType":"YulBlock","src":"3602:81:27","statements":[{"nodeType":"YulAssignment","src":"3612:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3627:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3634:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3623:3:27"},"nodeType":"YulFunctionCall","src":"3623:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3612:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3584:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3594:7:27","type":""}],"src":"3557:126:27"},{"body":{"nodeType":"YulBlock","src":"3734:32:27","statements":[{"nodeType":"YulAssignment","src":"3744:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3755:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3744:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3716:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3726:7:27","type":""}],"src":"3689:77:27"},{"body":{"nodeType":"YulBlock","src":"3821:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3831:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3840:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3835:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3900:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3925:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"3930:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3921:3:27"},"nodeType":"YulFunctionCall","src":"3921:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3944:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"3949:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3940:3:27"},"nodeType":"YulFunctionCall","src":"3940:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3934:5:27"},"nodeType":"YulFunctionCall","src":"3934:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3914:6:27"},"nodeType":"YulFunctionCall","src":"3914:39:27"},"nodeType":"YulExpressionStatement","src":"3914:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3861:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"3864:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3858:2:27"},"nodeType":"YulFunctionCall","src":"3858:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3872:19:27","statements":[{"nodeType":"YulAssignment","src":"3874:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3883:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"3886:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3879:3:27"},"nodeType":"YulFunctionCall","src":"3879:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3874:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"3854:3:27","statements":[]},"src":"3850:113:27"},{"body":{"nodeType":"YulBlock","src":"3997:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4047:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4052:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:27"},"nodeType":"YulFunctionCall","src":"4043:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"4061:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4036:6:27"},"nodeType":"YulFunctionCall","src":"4036:27:27"},"nodeType":"YulExpressionStatement","src":"4036:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3978:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"3981:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:27"},"nodeType":"YulFunctionCall","src":"3975:13:27"},"nodeType":"YulIf","src":"3972:2:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3803:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3808:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"3813:6:27","type":""}],"src":"3772:307:27"},{"body":{"nodeType":"YulBlock","src":"4136:269:27","statements":[{"nodeType":"YulAssignment","src":"4146:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4160:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"4166:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4156:3:27"},"nodeType":"YulFunctionCall","src":"4156:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4146:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"4177:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4207:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"4213:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4203:3:27"},"nodeType":"YulFunctionCall","src":"4203:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4181:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4254:51:27","statements":[{"nodeType":"YulAssignment","src":"4268:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4282:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4290:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4278:3:27"},"nodeType":"YulFunctionCall","src":"4278:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4268:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4234:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4227:6:27"},"nodeType":"YulFunctionCall","src":"4227:26:27"},"nodeType":"YulIf","src":"4224:2:27"},{"body":{"nodeType":"YulBlock","src":"4357:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4371:16:27"},"nodeType":"YulFunctionCall","src":"4371:18:27"},"nodeType":"YulExpressionStatement","src":"4371:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4321:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4344:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4352:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4341:2:27"},"nodeType":"YulFunctionCall","src":"4341:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4318:2:27"},"nodeType":"YulFunctionCall","src":"4318:38:27"},"nodeType":"YulIf","src":"4315:2:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4120:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4129:6:27","type":""}],"src":"4085:320:27"},{"body":{"nodeType":"YulBlock","src":"4454:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4464:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4486:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4516:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4494:21:27"},"nodeType":"YulFunctionCall","src":"4494:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:27"},"nodeType":"YulFunctionCall","src":"4482:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4468:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4633:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4635:16:27"},"nodeType":"YulFunctionCall","src":"4635:18:27"},"nodeType":"YulExpressionStatement","src":"4635:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4576:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4588:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4573:2:27"},"nodeType":"YulFunctionCall","src":"4573:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4612:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4624:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4609:2:27"},"nodeType":"YulFunctionCall","src":"4609:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4570:2:27"},"nodeType":"YulFunctionCall","src":"4570:62:27"},"nodeType":"YulIf","src":"4567:2:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4671:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4675:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4664:6:27"},"nodeType":"YulFunctionCall","src":"4664:22:27"},"nodeType":"YulExpressionStatement","src":"4664:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4440:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"4448:4:27","type":""}],"src":"4411:281:27"},{"body":{"nodeType":"YulBlock","src":"4726:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4743:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4746:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4736:6:27"},"nodeType":"YulFunctionCall","src":"4736:88:27"},"nodeType":"YulExpressionStatement","src":"4736:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4840:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4843:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4833:6:27"},"nodeType":"YulFunctionCall","src":"4833:15:27"},"nodeType":"YulExpressionStatement","src":"4833:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4864:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4867:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4857:6:27"},"nodeType":"YulFunctionCall","src":"4857:15:27"},"nodeType":"YulExpressionStatement","src":"4857:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4698:180:27"},{"body":{"nodeType":"YulBlock","src":"4912:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4929:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4932:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4922:6:27"},"nodeType":"YulFunctionCall","src":"4922:88:27"},"nodeType":"YulExpressionStatement","src":"4922:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5026:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5029:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5019:6:27"},"nodeType":"YulFunctionCall","src":"5019:15:27"},"nodeType":"YulExpressionStatement","src":"5019:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5050:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5053:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5043:6:27"},"nodeType":"YulFunctionCall","src":"5043:15:27"},"nodeType":"YulExpressionStatement","src":"5043:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4884:180:27"},{"body":{"nodeType":"YulBlock","src":"5159:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5176:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5179:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5169:6:27"},"nodeType":"YulFunctionCall","src":"5169:12:27"},"nodeType":"YulExpressionStatement","src":"5169:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5070:117:27"},{"body":{"nodeType":"YulBlock","src":"5282:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5299:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5302:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5292:6:27"},"nodeType":"YulFunctionCall","src":"5292:12:27"},"nodeType":"YulExpressionStatement","src":"5292:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5193:117:27"},{"body":{"nodeType":"YulBlock","src":"5405:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5422:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5425:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5415:6:27"},"nodeType":"YulFunctionCall","src":"5415:12:27"},"nodeType":"YulExpressionStatement","src":"5415:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"5316:117:27"},{"body":{"nodeType":"YulBlock","src":"5528:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5545:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5548:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5538:6:27"},"nodeType":"YulFunctionCall","src":"5538:12:27"},"nodeType":"YulExpressionStatement","src":"5538:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"5439:117:27"},{"body":{"nodeType":"YulBlock","src":"5610:54:27","statements":[{"nodeType":"YulAssignment","src":"5620:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5638:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5645:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5634:3:27"},"nodeType":"YulFunctionCall","src":"5634:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5654:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5650:3:27"},"nodeType":"YulFunctionCall","src":"5650:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5630:3:27"},"nodeType":"YulFunctionCall","src":"5630:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5620:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5593:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5603:6:27","type":""}],"src":"5562:102:27"},{"body":{"nodeType":"YulBlock","src":"5713:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"5770:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5779:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5782:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5772:6:27"},"nodeType":"YulFunctionCall","src":"5772:12:27"},"nodeType":"YulExpressionStatement","src":"5772:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5736:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5761:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5743:17:27"},"nodeType":"YulFunctionCall","src":"5743:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5733:2:27"},"nodeType":"YulFunctionCall","src":"5733:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5726:6:27"},"nodeType":"YulFunctionCall","src":"5726:43:27"},"nodeType":"YulIf","src":"5723:2:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5706:5:27","type":""}],"src":"5670:122:27"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x6C6F CODESIZE SUB DUP1 PUSH3 0x6C6F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5043432044414F00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54455354315043432044414F204D656D62657273686970000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5431504343000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x128 SWAP3 SWAP2 SWAP1 PUSH3 0x536 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x141 SWAP3 SWAP2 SWAP1 PUSH3 0x536 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1AD DUP2 DUP5 DUP5 PUSH3 0x262 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x22B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP5 PUSH3 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x240 PUSH1 0x0 DUP1 SHL DUP4 PUSH3 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x11 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x258 SWAP3 SWAP2 SWAP1 PUSH3 0x536 JUMP JUMPDEST POP POP POP POP PUSH3 0x96C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x27F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x2B0 DUP3 DUP3 PUSH3 0x2B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2CB DUP3 DUP3 PUSH3 0x2FC PUSH1 0x20 SHL PUSH3 0x14C4 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2F7 DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x3EE PUSH1 0x20 SHL PUSH3 0x15A5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x30E DUP3 DUP3 PUSH3 0x426 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3EA JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x38F PUSH3 0x491 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x41E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x499 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AD DUP4 DUP4 PUSH3 0x513 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x508 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x50D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x544 SWAP1 PUSH3 0x863 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x568 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x5B4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x583 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x5B4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x5B4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x5B3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x596 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x5C7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x5E2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x5C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FD PUSH3 0x5F7 DUP5 PUSH3 0x7AF JUMP JUMPDEST PUSH3 0x786 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x61C JUMPI PUSH3 0x61B PUSH3 0x932 JUMP JUMPDEST JUMPDEST PUSH3 0x629 DUP5 DUP3 DUP6 PUSH3 0x82D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x642 DUP2 PUSH3 0x952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x660 JUMPI PUSH3 0x65F PUSH3 0x92D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x672 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x697 JUMPI PUSH3 0x696 PUSH3 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x6A7 DUP7 DUP3 DUP8 ADD PUSH3 0x631 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x6BA DUP7 DUP3 DUP8 ADD PUSH3 0x631 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6DE JUMPI PUSH3 0x6DD PUSH3 0x937 JUMP JUMPDEST JUMPDEST PUSH3 0x6EC DUP7 DUP3 DUP8 ADD PUSH3 0x648 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x701 DUP2 PUSH3 0x7E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x712 DUP2 PUSH3 0x7F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x723 DUP2 PUSH3 0x823 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x740 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x707 JUMP JUMPDEST PUSH3 0x74F PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x707 JUMP JUMPDEST PUSH3 0x75E PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x707 JUMP JUMPDEST PUSH3 0x76D PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x718 JUMP JUMPDEST PUSH3 0x77C PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x6F6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x792 PUSH3 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH3 0x7A0 DUP3 DUP3 PUSH3 0x899 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x7CD JUMPI PUSH3 0x7CC PUSH3 0x8FE JUMP JUMPDEST JUMPDEST PUSH3 0x7D8 DUP3 PUSH3 0x941 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F2 DUP3 PUSH3 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x84D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x830 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x85D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x87C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x893 JUMPI PUSH3 0x892 PUSH3 0x8CF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8A4 DUP3 PUSH3 0x941 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x8C6 JUMPI PUSH3 0x8C5 PUSH3 0x8FE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x95D DUP2 PUSH3 0x7E5 JUMP JUMPDEST DUP2 EQ PUSH3 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x62B0 PUSH3 0x9BF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1BE0 ADD MSTORE PUSH1 0x0 PUSH2 0x1C22 ADD MSTORE PUSH1 0x0 PUSH2 0x1C01 ADD MSTORE PUSH1 0x0 PUSH2 0x1B36 ADD MSTORE PUSH1 0x0 PUSH2 0x1B8C ADD MSTORE PUSH1 0x0 PUSH2 0x1BB5 ADD MSTORE PUSH2 0x62B0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x762 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x77E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6C8 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x87F350B8 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x87F350B8 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x624 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x548 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x54BA0F27 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4AE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3E6 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x34C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x49E5 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x592 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x4A3F JUMP JUMPDEST PUSH2 0xF86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x49A5 JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62C PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x482B JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x47A8 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x48AB JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74C PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7CF SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x848 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x848 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85D DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP1 PUSH2 0x54C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x962 JUMPI POP PUSH2 0x961 DUP2 PUSH2 0x95C PUSH2 0x169A JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP1 PUSH2 0x5527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP4 DUP4 PUSH2 0x16A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x9C8 PUSH2 0x169A JUMP JUMPDEST DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x5267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA18 DUP4 DUP4 DUP4 PUSH2 0x17F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP3 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0xA59 DUP4 DUP4 PUSH2 0x1AFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 DUP4 PUSH2 0xE5A JUMP JUMPDEST DUP3 LT PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D PUSH2 0x1B32 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1A PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x55A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB91 DUP3 DUP3 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC24 PUSH1 0x0 DUP1 SHL PUSH2 0xC1F PUSH2 0x169A JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST DUP1 PUSH2 0xC3C JUMPI POP PUSH2 0xC3B PUSH2 0xC35 PUSH2 0x169A JUMP JUMPDEST DUP3 PUSH2 0x175B JUMP JUMPDEST JUMPDEST PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP1 PUSH2 0x5307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 PUSH2 0x9B0 JUMP JUMPDEST DUP3 LT PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0x5567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD24 DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x10 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A PUSH1 0x10 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 POP PUSH2 0xD46 DUP5 DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH2 0x169A JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF DUP2 DUP4 PUSH2 0x1F75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDDF DUP4 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x54A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1EFFBBFF9C66C5E59634F24FE842750C60D18891155C32DD155FC2D661A4C86D DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7F PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xF93 DUP2 PUSH2 0x1AEA JUMP JUMPDEST DUP2 PUSH1 0x11 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xFA9 SWAP3 SWAP2 SWAP1 PUSH2 0x44D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP1 PUSH2 0x5447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 DUP3 PUSH1 0xE PUSH2 0x1C80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x20C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x10B6 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10E2 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x112F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1104 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x112F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1112 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1182 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x20E0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x11B9 PUSH2 0x169A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x214A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11D5 PUSH2 0x11CF PUSH2 0x169A JUMP JUMPDEST DUP4 PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x5267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1220 DUP5 DUP5 DUP5 DUP5 PUSH2 0x22B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1260 SWAP1 PUSH2 0x5407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12CB PUSH2 0x12C3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2313 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP PUSH2 0x12D6 DUP2 PUSH2 0x2358 JUMP JUMPDEST DUP7 EQ PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130E SWAP1 PUSH2 0x5287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1321 DUP2 DUP9 PUSH2 0x1F75 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1335 DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0x1342 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x136E SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x139E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E4 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1418 DUP3 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x1421 DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x142B DUP4 DUP4 PUSH2 0x1C4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14CE DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x15A1 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1546 PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x23CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1648 JUMPI POP PUSH2 0x1647 DUP3 PUSH2 0x243B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x1697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP1 PUSH2 0x54A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1715 DUP4 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1767 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x17A9 JUMPI POP PUSH2 0x17A8 DUP2 DUP6 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17E7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17CF DUP5 PUSH2 0x852 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1810 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1866 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185D SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CD SWAP1 PUSH2 0x5367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1903 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1950 SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1AE5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AFB DUP2 PUSH2 0x1AF6 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x264D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B08 DUP3 DUP3 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x1B2D DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1BAE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1BDB JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x1C46 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1CC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBB SWAP1 PUSH2 0x53C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CCF DUP4 PUSH2 0x281E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x0 PUSH2 0x1CF7 DUP5 PUSH2 0x2871 JUMP JUMPDEST DUP5 PUSH2 0x1D02 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D11 DUP9 PUSH1 0x0 ADD DUP3 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1D40 JUMPI DUP1 SWAP2 POP PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1D4D SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP9 PUSH1 0x0 ADD DUP7 DUP6 DUP6 PUSH2 0x2980 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1DB7 JUMPI PUSH2 0x1D86 DUP9 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E00 DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1E09 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F2F DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x29F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2084 DUP2 DUP4 PUSH2 0x207F DUP7 PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2A60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D5 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2C6D JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x213F JUMPI PUSH2 0x210E DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x2109 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B0 SWAP1 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22AA SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP5 DUP5 DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x22CE DUP5 DUP5 DUP5 DUP5 PUSH2 0x2C98 JUMP JUMPDEST PUSH2 0x230D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2304 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2326 PUSH2 0x2320 PUSH2 0x1B32 JUMP JUMPDEST DUP4 PUSH2 0x2E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x233E DUP8 DUP8 DUP8 DUP8 PUSH2 0x2E62 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x234B DUP2 PUSH2 0x2F45 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x23A5 DUP2 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B0 DUP2 PUSH2 0x1F33 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 DUP3 PUSH1 0x0 ADD PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP4 DUP4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x2430 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2435 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x24AE JUMPI POP PUSH2 0x24AD DUP3 PUSH2 0x30E7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24D7 DUP4 PUSH2 0x2089 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x255D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2593 SWAP1 PUSH2 0x5507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x25DF JUMPI POP PUSH1 0x0 PUSH2 0x25DD DUP5 PUSH2 0xE5A JUMP JUMPDEST EQ JUMPDEST PUSH2 0x261E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2615 SWAP1 PUSH2 0x5427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262A DUP5 DUP5 DUP5 DUP5 PUSH2 0x3161 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x263B DUP5 DUP5 DUP4 PUSH2 0x32C1 JUMP JUMPDEST PUSH2 0x2647 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3381 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2657 DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x26CE JUMPI PUSH2 0x2664 DUP2 PUSH2 0x339E JUMP JUMPDEST PUSH2 0x2672 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2683 SWAP3 SWAP2 SWAP1 PUSH2 0x5051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26ED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x516D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2716 DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x278F PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2816 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3607 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2860 SWAP1 PUSH2 0x5547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x2884 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2891 DUP5 PUSH2 0x371B JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28AB JUMPI PUSH2 0x28AA PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C4 JUMPI PUSH2 0x28C3 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28F6 JUMPI PUSH2 0x28F5 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x290F JUMPI PUSH2 0x290E PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2928 JUMPI PUSH2 0x2927 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2941 JUMPI PUSH2 0x2940 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2962 DUP2 DUP3 DUP6 DUP2 PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV PUSH2 0x37FC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x29E8 JUMPI PUSH1 0x0 PUSH2 0x2997 DUP5 DUP5 PUSH2 0x3815 JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x29AA DUP8 DUP4 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x29D2 JUMPI DUP1 SWAP3 POP PUSH2 0x29E2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x29DF SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x2983 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x29FD DUP4 DUP4 PUSH2 0x383B JUMP JUMPDEST PUSH2 0x2A0A PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2C98 JUMP JUMPDEST PUSH2 0x2A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A40 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP3 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2A9C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2C68 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B84 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B2D PUSH2 0x3A59 DUP5 PUSH1 0xD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B79 SWAP3 SWAP2 SWAP1 PUSH2 0x55E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C67 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C10 PUSH2 0x3ABB DUP5 PUSH1 0xD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C5C SWAP3 SWAP2 SWAP1 PUSH2 0x55E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB9 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AD1 JUMP JUMPDEST ISZERO PUSH2 0x2E22 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2CE2 PUSH2 0x169A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D04 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x50A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2D4F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D4C SWAP2 SWAP1 PUSH2 0x4A12 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2DD2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D7F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D84 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2DCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC1 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E44 SWAP3 SWAP2 SWAP1 PUSH2 0x501A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2E9D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2F3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2EC2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F33 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2F3C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F6C JUMPI PUSH2 0x2F6B PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2F77 JUMPI PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F8B JUMPI PUSH2 0x2F8A PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F9E JUMPI PUSH2 0x2F9D PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2FDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD6 SWAP1 PUSH2 0x5227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FF3 JUMPI PUSH2 0x2FF2 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3006 JUMPI PUSH2 0x3005 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303E SWAP1 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305A PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x306E JUMPI PUSH2 0x306D PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x30AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A6 SWAP1 PUSH2 0x53A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x315A JUMPI POP PUSH2 0x3159 DUP3 PUSH2 0x3AF4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316D DUP5 DUP5 DUP5 DUP5 PUSH2 0x3BD6 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A8 SWAP1 PUSH2 0x5587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F9 JUMPI PUSH2 0x31F4 DUP2 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0x3238 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3237 JUMPI PUSH2 0x3236 DUP6 DUP3 PUSH2 0x3D45 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x327B JUMPI PUSH2 0x3276 DUP2 PUSH2 0x3EB2 JUMP JUMPDEST PUSH2 0x32BA JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32B9 JUMPI PUSH2 0x32B8 DUP5 DUP3 PUSH2 0x3F83 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3311 JUMPI PUSH2 0x330E PUSH2 0x3ABB DUP3 PUSH1 0xE PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3361 JUMPI PUSH2 0x335E PUSH2 0x3A59 DUP3 PUSH1 0xE PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x337C PUSH2 0x336D DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x3376 DUP5 PUSH2 0xD50 JUMP JUMPDEST DUP4 PUSH2 0x2A60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x338C DUP5 DUP5 DUP4 PUSH2 0x32C1 JUMP JUMPDEST PUSH2 0x3398 DUP5 DUP5 DUP5 DUP5 PUSH2 0x4002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x33C4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x33DE SWAP2 SWAP1 PUSH2 0x575C JUMP JUMPDEST PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3401 JUMPI PUSH2 0x3400 PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3433 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x346B JUMPI PUSH2 0x346A PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x34CF JUMPI PUSH2 0x34CE PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x350F SWAP2 SWAP1 PUSH2 0x575C JUMP JUMPDEST PUSH2 0x3519 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x35B9 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x355B JUMPI PUSH2 0x355A PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3572 JUMPI PUSH2 0x3571 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x35B2 SWAP1 PUSH2 0x58B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x351C JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x35FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F4 SWAP1 PUSH2 0x5247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x370F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3639 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3651 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x36C0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3672 JUMPI PUSH2 0x3671 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3696 JUMPI PUSH2 0x3695 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x36D4 JUMPI PUSH2 0x36D3 PUSH2 0x5A0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3715 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x373D JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3758 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3773 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x378E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37A9 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37C4 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37F3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x380B JUMPI DUP2 PUSH2 0x380D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x3826 SWAP2 SWAP1 PUSH2 0x572B JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x3833 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x38AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A2 SWAP1 PUSH2 0x5467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B4 DUP2 PUSH2 0x24B5 JUMP JUMPDEST ISZERO PUSH2 0x38F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38EB SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3902 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x390B DUP2 PUSH2 0x24B5 JUMP JUMPDEST ISZERO PUSH2 0x394B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3942 SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3A55 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A67 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AAF DUP6 PUSH2 0x3AAA PUSH2 0x3A82 DUP9 PUSH2 0x20E0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4008 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3AC9 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BBF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3BCF JUMPI POP PUSH2 0x3BCE DUP3 PUSH2 0x4076 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3CF6 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C6A JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C62 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CF5 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3CED SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3D52 DUP5 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x3D5C SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3E41 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x3EC6 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EF6 JUMPI PUSH2 0x3EF5 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x3F67 JUMPI PUSH2 0x3F66 PUSH2 0x5A0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP4 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4029 DUP5 PUSH1 0x0 ADD PUSH2 0x401B NUMBER PUSH2 0x281E JUMP JUMPDEST PUSH2 0x4024 DUP7 PUSH2 0x40E0 JUMP JUMPDEST PUSH2 0x414B JUMP JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413A SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x43E2 JUMPI PUSH1 0x0 PUSH2 0x4178 DUP8 PUSH1 0x1 DUP5 PUSH2 0x4173 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x426C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4263 SWAP1 PUSH2 0x54E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x42F1 JUMPI DUP5 PUSH2 0x429B DUP9 PUSH1 0x1 DUP6 PUSH2 0x4296 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x43D1 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x44CA JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x44DE SWAP1 PUSH2 0x58E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4500 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4547 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4519 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4547 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4547 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4546 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x452B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4554 SWAP2 SWAP1 PUSH2 0x4558 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4571 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4559 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4588 PUSH2 0x4583 DUP5 PUSH2 0x5630 JUMP JUMPDEST PUSH2 0x560B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A3 PUSH2 0x5A9C JUMP JUMPDEST JUMPDEST PUSH2 0x45AF DUP5 DUP3 DUP6 PUSH2 0x5875 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45CA PUSH2 0x45C5 DUP5 PUSH2 0x5661 JUMP JUMPDEST PUSH2 0x560B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45E6 JUMPI PUSH2 0x45E5 PUSH2 0x5A9C JUMP JUMPDEST JUMPDEST PUSH2 0x45F1 DUP5 DUP3 DUP6 PUSH2 0x5875 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4608 DUP2 PUSH2 0x61F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x461D DUP2 PUSH2 0x6207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4632 DUP2 PUSH2 0x621E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4647 DUP2 PUSH2 0x6235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x465C DUP2 PUSH2 0x6235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4677 JUMPI PUSH2 0x4676 PUSH2 0x5A97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4687 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46A5 JUMPI PUSH2 0x46A4 PUSH2 0x5A97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46CD DUP2 PUSH2 0x624C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46E2 DUP2 PUSH2 0x6263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46FE JUMPI PUSH2 0x46FD PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x470C DUP5 DUP3 DUP6 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472B PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x473A DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x474B DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x476E JUMPI PUSH2 0x476D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477C DUP7 DUP3 DUP8 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x478D DUP7 DUP3 DUP8 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x479E DUP7 DUP3 DUP8 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x47C2 JUMPI PUSH2 0x47C1 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47D0 DUP8 DUP3 DUP9 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x47E1 DUP8 DUP3 DUP9 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x47F2 DUP8 DUP3 DUP9 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4813 JUMPI PUSH2 0x4812 PUSH2 0x5AA1 JUMP JUMPDEST JUMPDEST PUSH2 0x481F DUP8 DUP3 DUP9 ADD PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4842 JUMPI PUSH2 0x4841 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4850 DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4861 DUP6 DUP3 DUP7 ADD PUSH2 0x460E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4882 JUMPI PUSH2 0x4881 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4890 DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x48A1 DUP6 DUP3 DUP7 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x48C8 JUMPI PUSH2 0x48C7 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D6 DUP10 DUP3 DUP11 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x48E7 DUP10 DUP3 DUP11 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x48F8 DUP10 DUP3 DUP11 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4909 DUP10 DUP3 DUP11 ADD PUSH2 0x46D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x491A DUP10 DUP3 DUP11 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x492B DUP10 DUP3 DUP11 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x494E JUMPI PUSH2 0x494D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x495C DUP5 DUP3 DUP6 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497C JUMPI PUSH2 0x497B PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498A DUP6 DUP3 DUP7 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499B DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49BC JUMPI PUSH2 0x49BB PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49CA DUP6 DUP3 DUP7 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49DB DUP6 DUP3 DUP7 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49FB JUMPI PUSH2 0x49FA PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A09 DUP5 DUP3 DUP6 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A28 JUMPI PUSH2 0x4A27 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A36 DUP5 DUP3 DUP6 ADD PUSH2 0x464D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A55 JUMPI PUSH2 0x4A54 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A73 JUMPI PUSH2 0x4A72 PUSH2 0x5AA1 JUMP JUMPDEST JUMPDEST PUSH2 0x4A7F DUP5 DUP3 DUP6 ADD PUSH2 0x4690 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A9E JUMPI PUSH2 0x4A9D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AAC DUP5 DUP3 DUP6 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4ABE DUP2 PUSH2 0x57EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ACD DUP2 PUSH2 0x57FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ADC DUP2 PUSH2 0x5808 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AF3 PUSH2 0x4AEE DUP3 PUSH2 0x5808 JUMP JUMPDEST PUSH2 0x5944 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B04 DUP3 PUSH2 0x5692 JUMP JUMPDEST PUSH2 0x4B0E DUP2 DUP6 PUSH2 0x56A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B1E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST PUSH2 0x4B27 DUP2 PUSH2 0x5AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3D DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x4B47 DUP2 DUP6 PUSH2 0x56B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST PUSH2 0x4B60 DUP2 PUSH2 0x5AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B76 DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x4B80 DUP2 DUP6 PUSH2 0x56CA JUMP JUMPDEST SWAP4 POP PUSH2 0x4B90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA9 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB4 DUP3 PUSH2 0x5ABC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BCC PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD7 DUP3 PUSH2 0x5AE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BEF PUSH1 0x2D DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BFA DUP3 PUSH2 0x5B0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C12 PUSH1 0x14 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C1D DUP3 PUSH2 0x5B5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C35 PUSH1 0x1F DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C40 DUP3 PUSH2 0x5B86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C58 PUSH1 0x2B DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C63 DUP3 PUSH2 0x5BAF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7B PUSH1 0x32 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C86 DUP3 PUSH2 0x5BFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9E PUSH1 0x12 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA9 DUP3 PUSH2 0x5C4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC1 PUSH1 0x25 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CCC DUP3 PUSH2 0x5C76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE4 PUSH1 0x1C DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CEF DUP3 PUSH2 0x5CC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D07 PUSH1 0x2 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4D12 DUP3 PUSH2 0x5CEE JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2A PUSH1 0x24 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D35 DUP3 PUSH2 0x5D17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4D PUSH1 0x19 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D58 DUP3 PUSH2 0x5D66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D70 PUSH1 0x22 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7B DUP3 PUSH2 0x5D8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D93 PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9E DUP3 PUSH2 0x5DDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB6 PUSH1 0x29 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DC1 DUP3 PUSH2 0x5E07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD9 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DE4 DUP3 PUSH2 0x5E56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DFC PUSH1 0xF DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E07 DUP3 PUSH2 0x5E7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1F PUSH1 0x1A DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2A DUP3 PUSH2 0x5EA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E42 PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E4D DUP3 PUSH2 0x5ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E65 PUSH1 0x27 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E70 DUP3 PUSH2 0x5EFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E88 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E93 DUP3 PUSH2 0x5F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EAB PUSH1 0x21 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB6 DUP3 PUSH2 0x5F72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ECE PUSH1 0x17 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ED9 DUP3 PUSH2 0x5FC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EF1 PUSH1 0x13 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EFC DUP3 PUSH2 0x5FEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F14 PUSH1 0x3D DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F1F DUP3 PUSH2 0x6013 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F37 PUSH1 0x26 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F42 DUP3 PUSH2 0x6062 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5A PUSH1 0x2C DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F65 DUP3 PUSH2 0x60B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7D PUSH1 0x17 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4F88 DUP3 PUSH2 0x6100 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA0 PUSH1 0x35 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FAB DUP3 PUSH2 0x6129 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC3 PUSH1 0x11 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCE DUP3 PUSH2 0x6178 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FE6 PUSH1 0x2F DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF1 DUP3 PUSH2 0x61A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5005 DUP2 PUSH2 0x585E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5014 DUP2 PUSH2 0x5868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5025 DUP3 PUSH2 0x4CFA JUMP JUMPDEST SWAP2 POP PUSH2 0x5031 DUP3 DUP6 PUSH2 0x4AE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5041 DUP3 DUP5 PUSH2 0x4AE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x505C DUP3 PUSH2 0x4F70 JUMP JUMPDEST SWAP2 POP PUSH2 0x5068 DUP3 DUP6 PUSH2 0x4B6B JUMP JUMPDEST SWAP2 POP PUSH2 0x5073 DUP3 PUSH2 0x4FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x507F DUP3 DUP5 PUSH2 0x4B6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x50BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x50C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x50D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x50E7 DUP2 DUP5 PUSH2 0x4AF9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5107 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5122 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x513D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x514A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x5157 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x5164 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5182 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x518F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x519C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51A9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x51B6 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4AB5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51D5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51E2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x500B JUMP JUMPDEST PUSH2 0x51EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51FC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4AD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x521F DUP2 DUP5 PUSH2 0x4B32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5240 DUP2 PUSH2 0x4B9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5260 DUP2 PUSH2 0x4BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5280 DUP2 PUSH2 0x4BE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52A0 DUP2 PUSH2 0x4C05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52C0 DUP2 PUSH2 0x4C28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E0 DUP2 PUSH2 0x4C4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5300 DUP2 PUSH2 0x4C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5320 DUP2 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5340 DUP2 PUSH2 0x4CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5360 DUP2 PUSH2 0x4CD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5380 DUP2 PUSH2 0x4D1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53A0 DUP2 PUSH2 0x4D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C0 DUP2 PUSH2 0x4D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53E0 DUP2 PUSH2 0x4D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5400 DUP2 PUSH2 0x4DA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5420 DUP2 PUSH2 0x4DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5440 DUP2 PUSH2 0x4DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5460 DUP2 PUSH2 0x4E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5480 DUP2 PUSH2 0x4E35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54A0 DUP2 PUSH2 0x4E58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54C0 DUP2 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E0 DUP2 PUSH2 0x4E9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5500 DUP2 PUSH2 0x4EC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5520 DUP2 PUSH2 0x4EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5540 DUP2 PUSH2 0x4F07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5560 DUP2 PUSH2 0x4F2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5580 DUP2 PUSH2 0x4F4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55A0 DUP2 PUSH2 0x4F93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C0 DUP2 PUSH2 0x4FD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x55F7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x5604 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5615 PUSH2 0x5626 JUMP JUMPDEST SWAP1 POP PUSH2 0x5621 DUP3 DUP3 PUSH2 0x5913 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x564B JUMPI PUSH2 0x564A PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH2 0x5654 DUP3 PUSH2 0x5AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x567C JUMPI PUSH2 0x567B PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH2 0x5685 DUP3 PUSH2 0x5AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E0 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x56EB DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5720 JUMPI PUSH2 0x571F PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5736 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x5741 DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5751 JUMPI PUSH2 0x5750 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5767 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x5772 DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x57AB JUMPI PUSH2 0x57AA PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C1 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x57CC DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x57DF JUMPI PUSH2 0x57DE PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F5 DUP3 PUSH2 0x583E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5887 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C2 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x58D6 JUMPI PUSH2 0x58D5 PUSH2 0x594E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x58F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x590D JUMPI PUSH2 0x590C PUSH2 0x59DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x591C DUP3 PUSH2 0x5AAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x593B JUMPI PUSH2 0x593A PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A20696E76616C6964206E6F6E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C65722063616E6E6F74206275726E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436865636B706F696E74733A20626C6F636B206E6F7420796574206D696E6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A207369676E617475726520657870697265640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206F776E206120746F6B656E0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A20626C6F636B206E6F7420796574206D696E6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436865636B706F696E743A20696E76616C6964206B6579000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220697320424C4F434B454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E7366657273206E6F7420737570706F727465640000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61F9 DUP2 PUSH2 0x57EA JUMP JUMPDEST DUP2 EQ PUSH2 0x6204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6210 DUP2 PUSH2 0x57FC JUMP JUMPDEST DUP2 EQ PUSH2 0x621B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6227 DUP2 PUSH2 0x5808 JUMP JUMPDEST DUP2 EQ PUSH2 0x6232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x623E DUP2 PUSH2 0x5812 JUMP JUMPDEST DUP2 EQ PUSH2 0x6249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6255 DUP2 PUSH2 0x585E JUMP JUMPDEST DUP2 EQ PUSH2 0x6260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x626C DUP2 PUSH2 0x5868 JUMP JUMPDEST DUP2 EQ PUSH2 0x6277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4C MSTORE8 0xC0 PUSH29 0x4FBD941C6CE80CB2129595961120353F254FBA1084F4B77001CBA26473 PUSH16 0x6C634300080600330000000000000000 ","sourceMap":"765:3595:26:-:0;;;1137:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:602:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;2529:18:20;2566:4;2550:22;;;;;;2529:43;;2582:21;2622:7;2606:25;;;;;;2582:49;;2641:16;2660:117;2641:136;;2802:10;2787:25;;;;;;2840:13;2822:31;;;;;;2882:13;2863:32;;;;;;2932:58;2954:8;2964:10;2976:13;2932:21;;;:58;;:::i;:::-;2905:85;;;;;;3023:4;3000:28;;;;;;;;;;;;3051:8;3038:21;;;;;;2519:547;;;2464:602;;1287:31:26::2;1028:24;1311:6;1287:10;;;:31;;:::i;:::-;1328:37;2072:4:0;1339:18:26::0;::::2;1359:5;1328:10;;;:37;;:::i;:::-;1390:13;1375:12;:28;;;;;;;;;;;;:::i;:::-;;1137:275:::0;;;765:3595;;3466:257:20;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;6811:110:0:-;6889:25;6900:4;6906:7;6889:10;;;:25;;:::i;:::-;6811:110;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;1978:166;;:::o;7461:233:0:-;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;8297:150:25:-;8367:4;8390:50;8395:3;:10;;8431:5;8415:23;;8407:32;;8390:4;;;:50;;:::i;:::-;8383:57;;8297:150;;;;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;2206:404:25:-;2269:4;2290:21;2300:3;2305:5;2290:9;;;:21;;:::i;:::-;2285:319;;2327:3;:11;;2344:5;2327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:3;:11;;:18;;;;2485:3;:12;;:19;2498:5;2485:19;;;;;;;;;;;:40;;;;2546:4;2539:11;;;;2285:319;2588:5;2581:12;;2206:404;;;;;:::o;4247:127::-;4320:4;4366:1;4343:3;:12;;:19;4356:5;4343:19;;;;;;;;;;;;:24;;4336:31;;4247:127;;;;:::o;765:3595:26:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:27:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;497:80;;;;:::o;597:355::-;664:5;713:3;706:4;698:6;694:17;690:27;680:2;;721:79;;:::i;:::-;680:2;831:6;825:13;856:90;942:3;934:6;927:4;919:6;915:17;856:90;:::i;:::-;847:99;;670:282;;;;;:::o;958:836::-;1056:6;1064;1072;1121:2;1109:9;1100:7;1096:23;1092:32;1089:2;;;1127:79;;:::i;:::-;1089:2;1247:1;1272:64;1328:7;1319:6;1308:9;1304:22;1272:64;:::i;:::-;1262:74;;1218:128;1385:2;1411:64;1467:7;1458:6;1447:9;1443:22;1411:64;:::i;:::-;1401:74;;1356:129;1545:2;1534:9;1530:18;1524:25;1576:18;1568:6;1565:30;1562:2;;;1598:79;;:::i;:::-;1562:2;1703:74;1769:7;1760:6;1749:9;1745:22;1703:74;:::i;:::-;1693:84;;1495:292;1079:715;;;;;:::o;1800:118::-;1887:24;1905:5;1887:24;:::i;:::-;1882:3;1875:37;1865:53;;:::o;1924:118::-;2011:24;2029:5;2011:24;:::i;:::-;2006:3;1999:37;1989:53;;:::o;2048:118::-;2135:24;2153:5;2135:24;:::i;:::-;2130:3;2123:37;2113:53;;:::o;2172:664::-;2377:4;2415:3;2404:9;2400:19;2392:27;;2429:71;2497:1;2486:9;2482:17;2473:6;2429:71;:::i;:::-;2510:72;2578:2;2567:9;2563:18;2554:6;2510:72;:::i;:::-;2592;2660:2;2649:9;2645:18;2636:6;2592:72;:::i;:::-;2674;2742:2;2731:9;2727:18;2718:6;2674:72;:::i;:::-;2756:73;2824:3;2813:9;2809:19;2800:6;2756:73;:::i;:::-;2382:454;;;;;;;;:::o;2842:129::-;2876:6;2903:20;;:::i;:::-;2893:30;;2932:33;2960:4;2952:6;2932:33;:::i;:::-;2883:88;;;:::o;2977:75::-;3010:6;3043:2;3037:9;3027:19;;3017:35;:::o;3058:308::-;3120:4;3210:18;3202:6;3199:30;3196:2;;;3232:18;;:::i;:::-;3196:2;3270:29;3292:6;3270:29;:::i;:::-;3262:37;;3354:4;3348;3344:15;3336:23;;3125:241;;;:::o;3372:96::-;3409:7;3438:24;3456:5;3438:24;:::i;:::-;3427:35;;3417:51;;;:::o;3474:77::-;3511:7;3540:5;3529:16;;3519:32;;;:::o;3557:126::-;3594:7;3634:42;3627:5;3623:54;3612:65;;3602:81;;;:::o;3689:77::-;3726:7;3755:5;3744:16;;3734:32;;;:::o;3772:307::-;3840:1;3850:113;3864:6;3861:1;3858:13;3850:113;;;3949:1;3944:3;3940:11;3934:18;3930:1;3925:3;3921:11;3914:39;3886:2;3883:1;3879:10;3874:15;;3850:113;;;3981:6;3978:1;3975:13;3972:2;;;4061:1;4052:6;4047:3;4043:16;4036:27;3972:2;3821:258;;;;:::o;4085:320::-;4129:6;4166:1;4160:4;4156:12;4146:22;;4213:1;4207:4;4203:12;4234:18;4224:2;;4290:4;4282:6;4278:17;4268:27;;4224:2;4352;4344:6;4341:14;4321:18;4318:38;4315:2;;;4371:18;;:::i;:::-;4315:2;4136:269;;;;:::o;4411:281::-;4494:27;4516:4;4494:27;:::i;:::-;4486:6;4482:40;4624:6;4612:10;4609:22;4588:18;4576:10;4573:34;4570:62;4567:2;;;4635:18;;:::i;:::-;4567:2;4675:10;4671:2;4664:22;4454:238;;;:::o;4698:180::-;4746:77;4743:1;4736:88;4843:4;4840:1;4833:15;4867:4;4864:1;4857:15;4884:180;4932:77;4929:1;4922:88;5029:4;5026:1;5019:15;5053:4;5050:1;5043:15;5070:117;5179:1;5176;5169:12;5193:117;5302:1;5299;5292:12;5316:117;5425:1;5422;5415:12;5439:117;5548:1;5545;5538:12;5562:102;5603:6;5654:2;5650:7;5645:2;5638:5;5634:14;5630:28;5620:38;;5610:54;;;:::o;5670:122::-;5743:24;5761:5;5743:24;:::i;:::-;5736:5;5733:35;5723:2;;5782:1;5779;5772:12;5723:2;5713:79;:::o;765:3595:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_8218":{"entryPoint":3858,"id":8218,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":4519,"id":27,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1061":{"entryPoint":2819,"id":1061,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_8213":{"entryPoint":5099,"id":8213,"parameterSlots":0,"returnSlots":0},"@_addTokenToAllTokensEnumeration_2421":{"entryPoint":15612,"id":2421,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_2401":{"entryPoint":16259,"id":2401,"parameterSlots":2,"returnSlots":0},"@_add_7623":{"entryPoint":9163,"id":7623,"parameterSlots":2,"returnSlots":1},"@_add_993":{"entryPoint":15035,"id":993,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_2014":{"entryPoint":16386,"id":2014,"parameterSlots":4,"returnSlots":0},"@_afterTokenTransfer_2571":{"entryPoint":13185,"id":2571,"parameterSlots":4,"returnSlots":0},"@_afterTokenTransfer_8369":{"entryPoint":9776,"id":8369,"parameterSlots":4,"returnSlots":0},"@_approve_1847":{"entryPoint":5794,"id":1847,"parameterSlots":2,"returnSlots":0},"@_at_7757":{"entryPoint":11373,"id":7757,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_2001":{"entryPoint":15318,"id":2001,"parameterSlots":4,"returnSlots":0},"@_beforeTokenTransfer_2371":{"entryPoint":12641,"id":2371,"parameterSlots":4,"returnSlots":0},"@_beforeTokenTransfer_8338":{"entryPoint":9462,"id":8338,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_5111":{"entryPoint":9938,"id":5111,"parameterSlots":3,"returnSlots":1},"@_burn_1738":{"entryPoint":7653,"id":1738,"parameterSlots":1,"returnSlots":0},"@_checkOnERC721Received_1955":{"entryPoint":11416,"id":1955,"parameterSlots":4,"returnSlots":1},"@_checkRole_131":{"entryPoint":9805,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":6890,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_7726":{"entryPoint":12484,"id":7726,"parameterSlots":2,"returnSlots":1},"@_delegate_856":{"entryPoint":8053,"id":856,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_5084":{"entryPoint":6962,"id":5084,"parameterSlots":0,"returnSlots":1},"@_exists_1516":{"entryPoint":9397,"id":1516,"parameterSlots":1,"returnSlots":1},"@_getVotingUnits_2585":{"entryPoint":10830,"id":2585,"parameterSlots":1,"returnSlots":1},"@_grantRole_283":{"entryPoint":5316,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":6910,"id":415,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_5127":{"entryPoint":8979,"id":5127,"parameterSlots":1,"returnSlots":1},"@_insert_3391":{"entryPoint":16715,"id":3391,"parameterSlots":3,"returnSlots":2},"@_isApprovedOrOwner_1550":{"entryPoint":5979,"id":1550,"parameterSlots":2,"returnSlots":1},"@_length_7740":{"entryPoint":12467,"id":7740,"parameterSlots":1,"returnSlots":1},"@_mint_1671":{"entryPoint":14395,"id":1671,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_979":{"entryPoint":10848,"id":979,"parameterSlots":3,"returnSlots":0},"@_msgSender_4354":{"entryPoint":5786,"id":4354,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1498":{"entryPoint":8329,"id":1498,"parameterSlots":1,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_2532":{"entryPoint":16050,"id":2532,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_2484":{"entryPoint":15685,"id":2484,"parameterSlots":2,"returnSlots":0},"@_remove_7707":{"entryPoint":13831,"id":7707,"parameterSlots":2,"returnSlots":1},"@_requireMinted_1893":{"entryPoint":5711,"id":1893,"parameterSlots":1,"returnSlots":0},"@_revokeRole_314":{"entryPoint":9996,"id":314,"parameterSlots":2,"returnSlots":0},"@_revokeRole_439":{"entryPoint":7244,"id":439,"parameterSlots":2,"returnSlots":0},"@_safeMint_1565":{"entryPoint":8023,"id":1565,"parameterSlots":2,"returnSlots":0},"@_safeMint_1594":{"entryPoint":10739,"id":1594,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1485":{"entryPoint":8887,"id":1485,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1879":{"entryPoint":8522,"id":1879,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_8428":{"entryPoint":3974,"id":8428,"parameterSlots":1,"returnSlots":0},"@_subtract_1007":{"entryPoint":14937,"id":1007,"parameterSlots":2,"returnSlots":1},"@_throwError_4667":{"entryPoint":12101,"id":4667,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_907":{"entryPoint":12993,"id":907,"parameterSlots":3,"returnSlots":0},"@_transfer_1823":{"entryPoint":6128,"id":1823,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_3509":{"entryPoint":10603,"id":3509,"parameterSlots":2,"returnSlots":1},"@_upperBinaryLookup_3443":{"entryPoint":10624,"id":3443,"parameterSlots":4,"returnSlots":1},"@_useNonce_1036":{"entryPoint":9048,"id":1036,"parameterSlots":1,"returnSlots":1},"@add_7923":{"entryPoint":5541,"id":7923,"parameterSlots":2,"returnSlots":1},"@approve_1327":{"entryPoint":2200,"id":1327,"parameterSlots":2,"returnSlots":0},"@at_8019":{"entryPoint":8390,"id":8019,"parameterSlots":2,"returnSlots":1},"@average_5230":{"entryPoint":14357,"id":5230,"parameterSlots":2,"returnSlots":1},"@balanceOf_1188":{"entryPoint":3674,"id":1188,"parameterSlots":1,"returnSlots":1},"@burn_8398":{"entryPoint":3088,"id":8398,"parameterSlots":1,"returnSlots":0},"@current_4382":{"entryPoint":8009,"id":4382,"parameterSlots":1,"returnSlots":1},"@delegateBySig_821":{"entryPoint":4646,"id":821,"parameterSlots":6,"returnSlots":0},"@delegate_761":{"entryPoint":3513,"id":761,"parameterSlots":1,"returnSlots":0},"@delegates_743":{"entryPoint":3408,"id":743,"parameterSlots":1,"returnSlots":1},"@getApproved_1345":{"entryPoint":2130,"id":1345,"parameterSlots":1,"returnSlots":1},"@getAtProbablyRecentBlock_3146":{"entryPoint":7296,"id":3146,"parameterSlots":2,"returnSlots":1},"@getPastTotalSupply_718":{"entryPoint":4014,"id":718,"parameterSlots":1,"returnSlots":1},"@getPastVotes_695":{"entryPoint":2965,"id":695,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":2589,"id":146,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_391":{"entryPoint":5063,"id":391,"parameterSlots":1,"returnSlots":1},"@getRoleMember_375":{"entryPoint":4109,"id":375,"parameterSlots":2,"returnSlots":1},"@getVotes_676":{"entryPoint":4409,"id":676,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":2621,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":4156,"id":79,"parameterSlots":2,"returnSlots":1},"@increment_4396":{"entryPoint":7987,"id":4396,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_1380":{"entryPoint":5168,"id":1380,"parameterSlots":2,"returnSlots":1},"@isContract_2662":{"entryPoint":15057,"id":2662,"parameterSlots":1,"returnSlots":1},"@latest_3238":{"entryPoint":8416,"id":3238,"parameterSlots":1,"returnSlots":1},"@length_7992":{"entryPoint":9142,"id":7992,"parameterSlots":1,"returnSlots":1},"@log2_5701":{"entryPoint":14107,"id":5701,"parameterSlots":1,"returnSlots":1},"@min_5207":{"entryPoint":14332,"id":5207,"parameterSlots":2,"returnSlots":1},"@mintNFT_8280":{"entryPoint":3320,"id":8280,"parameterSlots":1,"returnSlots":1},"@name_1226":{"entryPoint":1984,"id":1226,"parameterSlots":0,"returnSlots":1},"@nonces_1051":{"entryPoint":3894,"id":1051,"parameterSlots":1,"returnSlots":1},"@ownerOf_1216":{"entryPoint":3539,"id":1216,"parameterSlots":1,"returnSlots":1},"@push_3174":{"entryPoint":16392,"id":3174,"parameterSlots":2,"returnSlots":2},"@push_3208":{"entryPoint":14959,"id":3208,"parameterSlots":3,"returnSlots":2},"@recover_4914":{"entryPoint":9005,"id":4914,"parameterSlots":4,"returnSlots":1},"@remove_7950":{"entryPoint":10222,"id":7950,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":2834,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":5135,"id":186,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1426":{"entryPoint":3056,"id":1426,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1456":{"entryPoint":4548,"id":1456,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1362":{"entryPoint":4526,"id":1362,"parameterSlots":2,"returnSlots":0},"@sqrt_5533":{"entryPoint":10353,"id":5533,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1164":{"entryPoint":15092,"id":1164,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2229":{"entryPoint":12519,"id":2229,"parameterSlots":1,"returnSlots":1},"@supportsInterface_356":{"entryPoint":5589,"id":356,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5151":{"entryPoint":16502,"id":5151,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":9275,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8446":{"entryPoint":1966,"id":8446,"parameterSlots":1,"returnSlots":1},"@symbol_1236":{"entryPoint":4263,"id":1236,"parameterSlots":0,"returnSlots":1},"@toHexString_4592":{"entryPoint":13259,"id":4592,"parameterSlots":2,"returnSlots":1},"@toHexString_4612":{"entryPoint":13214,"id":4612,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4973":{"entryPoint":11823,"id":4973,"parameterSlots":2,"returnSlots":1},"@toUint224_6132":{"entryPoint":16608,"id":6132,"parameterSlots":1,"returnSlots":1},"@toUint32_6732":{"entryPoint":10270,"id":6732,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_2291":{"entryPoint":3207,"id":2291,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_2257":{"entryPoint":2654,"id":2257,"parameterSlots":2,"returnSlots":1},"@tokenURI_8414":{"entryPoint":4906,"id":8414,"parameterSlots":1,"returnSlots":1},"@totalSupply_2268":{"entryPoint":2480,"id":2268,"parameterSlots":0,"returnSlots":1},"@transferFrom_1407":{"entryPoint":2493,"id":1407,"parameterSlots":3,"returnSlots":0},"@tryRecover_4881":{"entryPoint":11874,"id":4881,"parameterSlots":4,"returnSlots":2},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":17781,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":17847,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":17913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":17934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":17955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":17976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":17997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":18018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":18064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":18110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":18131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18197,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":18261,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":18344,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":18475,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":18603,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32":{"entryPoint":18744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":18789,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":18853,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":18917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":18962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":19007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":19080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":19125,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":19140,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":19155,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":19170,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":19193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":19250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":19356,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":19391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":19426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c_to_t_string_memory_ptr_fromStack":{"entryPoint":19461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":19496,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack":{"entryPoint":19531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":19566,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf_to_t_string_memory_ptr_fromStack":{"entryPoint":19601,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":19636,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":19671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":19741,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":19776,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":19811,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack":{"entryPoint":19846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":19881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f_to_t_string_memory_ptr_fromStack":{"entryPoint":19916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262_to_t_string_memory_ptr_fromStack":{"entryPoint":19951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69_to_t_string_memory_ptr_fromStack":{"entryPoint":19986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":20021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":20056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":20091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":20126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack":{"entryPoint":20161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e_to_t_string_memory_ptr_fromStack":{"entryPoint":20196,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":20231,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":20266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack":{"entryPoint":20301,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20336,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314_to_t_string_memory_ptr_fromStack":{"entryPoint":20371,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":20441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":20476,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":20491,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":20506,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20561,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":20619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20646,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":20722,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":20749,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20776,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":20845,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":20928,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21095,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21255,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21319,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21415,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21447,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21479,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21703,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21927,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":21959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21986,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":22027,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":22054,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":22064,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":22113,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":22162,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":22173,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":22184,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":22201,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22218,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":22229,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":22315,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":22364,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":22454,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":22506,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":22524,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":22536,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":22546,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":22590,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":22622,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":22632,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":22645,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":22660,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":22711,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":22753,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":22803,"id":null,"parameterSlots":2,"returnSlots":0},"leftAlign_t_bytes32":{"entryPoint":22852,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":22862,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":22909,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":22956,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":23003,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":23050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":23097,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":23144,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":23191,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":23196,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":23201,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":23206,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":23211,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":23228,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":23269,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":23310,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c":{"entryPoint":23389,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":23430,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c":{"entryPoint":23471,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":23550,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf":{"entryPoint":23629,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":23670,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":23749,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":23790,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":23831,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":23910,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":23951,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be":{"entryPoint":24030,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":24071,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f":{"entryPoint":24150,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262":{"entryPoint":24191,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69":{"entryPoint":24232,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":24273,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":24314,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":24393,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":24434,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df":{"entryPoint":24513,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e":{"entryPoint":24554,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":24595,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":24674,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc":{"entryPoint":24753,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":24832,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314":{"entryPoint":24873,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":24952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":24993,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":25072,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":25095,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":25118,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":25141,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":25164,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":25187,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:55587:27","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:27","statements":[{"nodeType":"YulAssignment","src":"100:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:27"},"nodeType":"YulFunctionCall","src":"125:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:27"},"nodeType":"YulFunctionCall","src":"109:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:27"},"nodeType":"YulFunctionCall","src":"183:21:27"},"nodeType":"YulExpressionStatement","src":"183:21:27"},{"nodeType":"YulVariableDeclaration","src":"213:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:27"},"nodeType":"YulFunctionCall","src":"224:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:27"},"nodeType":"YulFunctionCall","src":"280:79:27"},"nodeType":"YulExpressionStatement","src":"280:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:27"},"nodeType":"YulFunctionCall","src":"255:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:27"},"nodeType":"YulFunctionCall","src":"252:25:27"},"nodeType":"YulIf","src":"249:2:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:27"},"nodeType":"YulFunctionCall","src":"370:41:27"},"nodeType":"YulExpressionStatement","src":"370:41:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:27","type":""}],"src":"7:410:27"},{"body":{"nodeType":"YulBlock","src":"507:328:27","statements":[{"nodeType":"YulAssignment","src":"517:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"584:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"542:41:27"},"nodeType":"YulFunctionCall","src":"542:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"526:15:27"},"nodeType":"YulFunctionCall","src":"526:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"517:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"608:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"615:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"601:6:27"},"nodeType":"YulFunctionCall","src":"601:21:27"},"nodeType":"YulExpressionStatement","src":"601:21:27"},{"nodeType":"YulVariableDeclaration","src":"631:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"646:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"653:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"642:3:27"},"nodeType":"YulFunctionCall","src":"642:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"635:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"696:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"698:77:27"},"nodeType":"YulFunctionCall","src":"698:79:27"},"nodeType":"YulExpressionStatement","src":"698:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"677:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"682:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"673:3:27"},"nodeType":"YulFunctionCall","src":"673:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"691:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"670:2:27"},"nodeType":"YulFunctionCall","src":"670:25:27"},"nodeType":"YulIf","src":"667:2:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"812:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"817:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"822:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"788:23:27"},"nodeType":"YulFunctionCall","src":"788:41:27"},"nodeType":"YulExpressionStatement","src":"788:41:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"480:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"485:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"493:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"501:5:27","type":""}],"src":"423:412:27"},{"body":{"nodeType":"YulBlock","src":"893:87:27","statements":[{"nodeType":"YulAssignment","src":"903:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"925:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"912:12:27"},"nodeType":"YulFunctionCall","src":"912:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"903:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"968:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"941:26:27"},"nodeType":"YulFunctionCall","src":"941:33:27"},"nodeType":"YulExpressionStatement","src":"941:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"871:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"879:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"887:5:27","type":""}],"src":"841:139:27"},{"body":{"nodeType":"YulBlock","src":"1035:84:27","statements":[{"nodeType":"YulAssignment","src":"1045:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1067:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1054:12:27"},"nodeType":"YulFunctionCall","src":"1054:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1045:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1107:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1083:23:27"},"nodeType":"YulFunctionCall","src":"1083:30:27"},"nodeType":"YulExpressionStatement","src":"1083:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1013:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1021:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1029:5:27","type":""}],"src":"986:133:27"},{"body":{"nodeType":"YulBlock","src":"1177:87:27","statements":[{"nodeType":"YulAssignment","src":"1187:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1209:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1196:12:27"},"nodeType":"YulFunctionCall","src":"1196:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1252:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1225:26:27"},"nodeType":"YulFunctionCall","src":"1225:33:27"},"nodeType":"YulExpressionStatement","src":"1225:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1163:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1171:5:27","type":""}],"src":"1125:139:27"},{"body":{"nodeType":"YulBlock","src":"1321:86:27","statements":[{"nodeType":"YulAssignment","src":"1331:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1340:12:27"},"nodeType":"YulFunctionCall","src":"1340:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1331:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1395:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1369:25:27"},"nodeType":"YulFunctionCall","src":"1369:32:27"},"nodeType":"YulExpressionStatement","src":"1369:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1299:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1307:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1315:5:27","type":""}],"src":"1270:137:27"},{"body":{"nodeType":"YulBlock","src":"1475:79:27","statements":[{"nodeType":"YulAssignment","src":"1485:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1500:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1494:5:27"},"nodeType":"YulFunctionCall","src":"1494:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1485:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1542:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1516:25:27"},"nodeType":"YulFunctionCall","src":"1516:32:27"},"nodeType":"YulExpressionStatement","src":"1516:32:27"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1453:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1461:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1469:5:27","type":""}],"src":"1413:141:27"},{"body":{"nodeType":"YulBlock","src":"1634:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"1683:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1685:77:27"},"nodeType":"YulFunctionCall","src":"1685:79:27"},"nodeType":"YulExpressionStatement","src":"1685:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1662:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1670:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1658:3:27"},"nodeType":"YulFunctionCall","src":"1658:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"1677:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1654:3:27"},"nodeType":"YulFunctionCall","src":"1654:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1647:6:27"},"nodeType":"YulFunctionCall","src":"1647:35:27"},"nodeType":"YulIf","src":"1644:2:27"},{"nodeType":"YulVariableDeclaration","src":"1775:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1802:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1789:12:27"},"nodeType":"YulFunctionCall","src":"1789:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1779:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1818:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1886:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:27"},"nodeType":"YulFunctionCall","src":"1874:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"1893:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"1901:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1827:46:27"},"nodeType":"YulFunctionCall","src":"1827:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1818:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1612:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1620:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1628:5:27","type":""}],"src":"1573:338:27"},{"body":{"nodeType":"YulBlock","src":"1993:278:27","statements":[{"body":{"nodeType":"YulBlock","src":"2042:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2044:77:27"},"nodeType":"YulFunctionCall","src":"2044:79:27"},"nodeType":"YulExpressionStatement","src":"2044:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2021:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2029:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:27"},"nodeType":"YulFunctionCall","src":"2017:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2036:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2013:3:27"},"nodeType":"YulFunctionCall","src":"2013:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2006:6:27"},"nodeType":"YulFunctionCall","src":"2006:35:27"},"nodeType":"YulIf","src":"2003:2:27"},{"nodeType":"YulVariableDeclaration","src":"2134:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2161:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2148:12:27"},"nodeType":"YulFunctionCall","src":"2148:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2138:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2177:88:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2246:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2234:3:27"},"nodeType":"YulFunctionCall","src":"2234:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2253:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2261:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2186:47:27"},"nodeType":"YulFunctionCall","src":"2186:79:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2177:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1971:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1979:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1987:5:27","type":""}],"src":"1931:340:27"},{"body":{"nodeType":"YulBlock","src":"2329:87:27","statements":[{"nodeType":"YulAssignment","src":"2339:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2361:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2348:12:27"},"nodeType":"YulFunctionCall","src":"2348:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2339:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2404:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2377:26:27"},"nodeType":"YulFunctionCall","src":"2377:33:27"},"nodeType":"YulExpressionStatement","src":"2377:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2307:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2315:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2323:5:27","type":""}],"src":"2277:139:27"},{"body":{"nodeType":"YulBlock","src":"2472:85:27","statements":[{"nodeType":"YulAssignment","src":"2482:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2504:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2491:12:27"},"nodeType":"YulFunctionCall","src":"2491:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2482:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2545:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"2520:24:27"},"nodeType":"YulFunctionCall","src":"2520:31:27"},"nodeType":"YulExpressionStatement","src":"2520:31:27"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2450:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2458:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2466:5:27","type":""}],"src":"2422:135:27"},{"body":{"nodeType":"YulBlock","src":"2629:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:27"},"nodeType":"YulFunctionCall","src":"2677:79:27"},"nodeType":"YulExpressionStatement","src":"2677:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:27"},"nodeType":"YulFunctionCall","src":"2646:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:27"},"nodeType":"YulFunctionCall","src":"2642:32:27"},"nodeType":"YulIf","src":"2639:2:27"},{"nodeType":"YulBlock","src":"2768:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2797:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2812:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2858:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:27"},"nodeType":"YulFunctionCall","src":"2843:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2867:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2822:20:27"},"nodeType":"YulFunctionCall","src":"2822:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2812:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:27","type":""}],"src":"2563:329:27"},{"body":{"nodeType":"YulBlock","src":"2981:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"3027:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3029:77:27"},"nodeType":"YulFunctionCall","src":"3029:79:27"},"nodeType":"YulExpressionStatement","src":"3029:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3002:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3011:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2998:3:27"},"nodeType":"YulFunctionCall","src":"2998:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3023:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2994:3:27"},"nodeType":"YulFunctionCall","src":"2994:32:27"},"nodeType":"YulIf","src":"2991:2:27"},{"nodeType":"YulBlock","src":"3120:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3135:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3149:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3139:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3164:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3210:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:27"},"nodeType":"YulFunctionCall","src":"3195:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3219:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3174:20:27"},"nodeType":"YulFunctionCall","src":"3174:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3164:6:27"}]}]},{"nodeType":"YulBlock","src":"3247:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3262:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3276:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3266:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3292:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3327:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3338:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3323:3:27"},"nodeType":"YulFunctionCall","src":"3323:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3347:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3302:20:27"},"nodeType":"YulFunctionCall","src":"3302:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3292:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2943:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2954:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2966:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2974:6:27","type":""}],"src":"2898:474:27"},{"body":{"nodeType":"YulBlock","src":"3478:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3524:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3526:77:27"},"nodeType":"YulFunctionCall","src":"3526:79:27"},"nodeType":"YulExpressionStatement","src":"3526:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3499:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3508:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3495:3:27"},"nodeType":"YulFunctionCall","src":"3495:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3520:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3491:3:27"},"nodeType":"YulFunctionCall","src":"3491:32:27"},"nodeType":"YulIf","src":"3488:2:27"},{"nodeType":"YulBlock","src":"3617:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3632:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3646:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3636:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3661:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3707:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3692:3:27"},"nodeType":"YulFunctionCall","src":"3692:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3716:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3671:20:27"},"nodeType":"YulFunctionCall","src":"3671:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3661:6:27"}]}]},{"nodeType":"YulBlock","src":"3744:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3759:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3773:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3763:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3789:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3824:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3835:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3820:3:27"},"nodeType":"YulFunctionCall","src":"3820:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3844:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3799:20:27"},"nodeType":"YulFunctionCall","src":"3799:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3789:6:27"}]}]},{"nodeType":"YulBlock","src":"3872:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3887:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3901:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3891:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3917:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3952:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3963:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:27"},"nodeType":"YulFunctionCall","src":"3948:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3972:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3927:20:27"},"nodeType":"YulFunctionCall","src":"3927:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3917:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3432:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3443:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3455:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3463:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3471:6:27","type":""}],"src":"3378:619:27"},{"body":{"nodeType":"YulBlock","src":"4129:817:27","statements":[{"body":{"nodeType":"YulBlock","src":"4176:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4178:77:27"},"nodeType":"YulFunctionCall","src":"4178:79:27"},"nodeType":"YulExpressionStatement","src":"4178:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4150:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4159:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4146:3:27"},"nodeType":"YulFunctionCall","src":"4146:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4171:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4142:3:27"},"nodeType":"YulFunctionCall","src":"4142:33:27"},"nodeType":"YulIf","src":"4139:2:27"},{"nodeType":"YulBlock","src":"4269:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4284:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4298:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4288:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4313:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4359:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:27"},"nodeType":"YulFunctionCall","src":"4344:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4368:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4323:20:27"},"nodeType":"YulFunctionCall","src":"4323:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4313:6:27"}]}]},{"nodeType":"YulBlock","src":"4396:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4411:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4425:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4415:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4441:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4476:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4487:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4472:3:27"},"nodeType":"YulFunctionCall","src":"4472:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4496:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4451:20:27"},"nodeType":"YulFunctionCall","src":"4451:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4441:6:27"}]}]},{"nodeType":"YulBlock","src":"4524:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4539:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4553:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4543:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4569:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4604:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4615:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4600:3:27"},"nodeType":"YulFunctionCall","src":"4600:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4624:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4579:20:27"},"nodeType":"YulFunctionCall","src":"4579:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4569:6:27"}]}]},{"nodeType":"YulBlock","src":"4652:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4667:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4709:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4694:3:27"},"nodeType":"YulFunctionCall","src":"4694:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4681:12:27"},"nodeType":"YulFunctionCall","src":"4681:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4671:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4760:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4762:77:27"},"nodeType":"YulFunctionCall","src":"4762:79:27"},"nodeType":"YulExpressionStatement","src":"4762:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4732:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4740:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4729:2:27"},"nodeType":"YulFunctionCall","src":"4729:30:27"},"nodeType":"YulIf","src":"4726:2:27"},{"nodeType":"YulAssignment","src":"4857:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4901:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4912:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4897:3:27"},"nodeType":"YulFunctionCall","src":"4897:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4921:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4867:29:27"},"nodeType":"YulFunctionCall","src":"4867:62:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4857:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4075:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4086:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4098:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4106:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4114:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4122:6:27","type":""}],"src":"4003:943:27"},{"body":{"nodeType":"YulBlock","src":"5032:388:27","statements":[{"body":{"nodeType":"YulBlock","src":"5078:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5080:77:27"},"nodeType":"YulFunctionCall","src":"5080:79:27"},"nodeType":"YulExpressionStatement","src":"5080:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5053:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5062:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5049:3:27"},"nodeType":"YulFunctionCall","src":"5049:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5074:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5045:3:27"},"nodeType":"YulFunctionCall","src":"5045:32:27"},"nodeType":"YulIf","src":"5042:2:27"},{"nodeType":"YulBlock","src":"5171:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5186:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5200:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5190:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5215:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5250:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5261:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5246:3:27"},"nodeType":"YulFunctionCall","src":"5246:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5270:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5225:20:27"},"nodeType":"YulFunctionCall","src":"5225:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5215:6:27"}]}]},{"nodeType":"YulBlock","src":"5298:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5313:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5327:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5317:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5343:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5375:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5386:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5371:3:27"},"nodeType":"YulFunctionCall","src":"5371:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5395:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5353:17:27"},"nodeType":"YulFunctionCall","src":"5353:50:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5343:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4994:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5005:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5017:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5025:6:27","type":""}],"src":"4952:468:27"},{"body":{"nodeType":"YulBlock","src":"5509:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"5555:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5557:77:27"},"nodeType":"YulFunctionCall","src":"5557:79:27"},"nodeType":"YulExpressionStatement","src":"5557:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5530:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5539:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5526:3:27"},"nodeType":"YulFunctionCall","src":"5526:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5551:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5522:3:27"},"nodeType":"YulFunctionCall","src":"5522:32:27"},"nodeType":"YulIf","src":"5519:2:27"},{"nodeType":"YulBlock","src":"5648:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5663:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5677:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5667:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5692:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5727:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5738:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5723:3:27"},"nodeType":"YulFunctionCall","src":"5723:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5747:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5702:20:27"},"nodeType":"YulFunctionCall","src":"5702:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5692:6:27"}]}]},{"nodeType":"YulBlock","src":"5775:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5790:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5804:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5794:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5820:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5855:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5866:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:27"},"nodeType":"YulFunctionCall","src":"5851:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5875:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5830:20:27"},"nodeType":"YulFunctionCall","src":"5830:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5820:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5471:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5482:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5494:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5502:6:27","type":""}],"src":"5426:474:27"},{"body":{"nodeType":"YulBlock","src":"6055:904:27","statements":[{"body":{"nodeType":"YulBlock","src":"6102:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6104:77:27"},"nodeType":"YulFunctionCall","src":"6104:79:27"},"nodeType":"YulExpressionStatement","src":"6104:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6076:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6085:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6072:3:27"},"nodeType":"YulFunctionCall","src":"6072:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6097:3:27","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6068:3:27"},"nodeType":"YulFunctionCall","src":"6068:33:27"},"nodeType":"YulIf","src":"6065:2:27"},{"nodeType":"YulBlock","src":"6195:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6210:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6214:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6239:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6274:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6285:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6270:3:27"},"nodeType":"YulFunctionCall","src":"6270:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6294:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6249:20:27"},"nodeType":"YulFunctionCall","src":"6249:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6239:6:27"}]}]},{"nodeType":"YulBlock","src":"6322:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6337:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6351:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6341:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6367:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6402:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6413:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6398:3:27"},"nodeType":"YulFunctionCall","src":"6398:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6422:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6377:20:27"},"nodeType":"YulFunctionCall","src":"6377:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6367:6:27"}]}]},{"nodeType":"YulBlock","src":"6450:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6465:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6479:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6469:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6495:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6530:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6541:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6526:3:27"},"nodeType":"YulFunctionCall","src":"6526:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6550:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6505:20:27"},"nodeType":"YulFunctionCall","src":"6505:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6495:6:27"}]}]},{"nodeType":"YulBlock","src":"6578:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6593:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6607:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6597:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6623:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6656:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6667:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6652:3:27"},"nodeType":"YulFunctionCall","src":"6652:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6676:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"6633:18:27"},"nodeType":"YulFunctionCall","src":"6633:51:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6623:6:27"}]}]},{"nodeType":"YulBlock","src":"6704:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6719:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6733:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6723:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6750:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6785:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6781:3:27"},"nodeType":"YulFunctionCall","src":"6781:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6805:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6760:20:27"},"nodeType":"YulFunctionCall","src":"6760:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6750:6:27"}]}]},{"nodeType":"YulBlock","src":"6833:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6848:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6862:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6852:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6879:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6914:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6925:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6910:3:27"},"nodeType":"YulFunctionCall","src":"6910:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6934:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6889:20:27"},"nodeType":"YulFunctionCall","src":"6889:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6879:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5985:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5996:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6008:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6016:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6024:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6032:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6040:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6048:6:27","type":""}],"src":"5906:1053:27"},{"body":{"nodeType":"YulBlock","src":"7031:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"7077:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7079:77:27"},"nodeType":"YulFunctionCall","src":"7079:79:27"},"nodeType":"YulExpressionStatement","src":"7079:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7052:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7061:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7048:3:27"},"nodeType":"YulFunctionCall","src":"7048:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7073:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7044:3:27"},"nodeType":"YulFunctionCall","src":"7044:32:27"},"nodeType":"YulIf","src":"7041:2:27"},{"nodeType":"YulBlock","src":"7170:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7185:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7199:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7189:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7214:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7260:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:27"},"nodeType":"YulFunctionCall","src":"7245:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7269:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7224:20:27"},"nodeType":"YulFunctionCall","src":"7224:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7214:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7001:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7012:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7024:6:27","type":""}],"src":"6965:329:27"},{"body":{"nodeType":"YulBlock","src":"7383:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"7429:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7431:77:27"},"nodeType":"YulFunctionCall","src":"7431:79:27"},"nodeType":"YulExpressionStatement","src":"7431:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7404:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7413:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7400:3:27"},"nodeType":"YulFunctionCall","src":"7400:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7425:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7396:3:27"},"nodeType":"YulFunctionCall","src":"7396:32:27"},"nodeType":"YulIf","src":"7393:2:27"},{"nodeType":"YulBlock","src":"7522:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7537:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7551:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7541:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7566:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7601:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7612:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:27"},"nodeType":"YulFunctionCall","src":"7597:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7621:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7576:20:27"},"nodeType":"YulFunctionCall","src":"7576:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7566:6:27"}]}]},{"nodeType":"YulBlock","src":"7649:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7664:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7678:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7668:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7694:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7729:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7740:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7725:3:27"},"nodeType":"YulFunctionCall","src":"7725:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7749:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7704:20:27"},"nodeType":"YulFunctionCall","src":"7704:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7694:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7345:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7356:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7368:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7376:6:27","type":""}],"src":"7300:474:27"},{"body":{"nodeType":"YulBlock","src":"7863:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"7909:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7911:77:27"},"nodeType":"YulFunctionCall","src":"7911:79:27"},"nodeType":"YulExpressionStatement","src":"7911:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7884:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7880:3:27"},"nodeType":"YulFunctionCall","src":"7880:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7905:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7876:3:27"},"nodeType":"YulFunctionCall","src":"7876:32:27"},"nodeType":"YulIf","src":"7873:2:27"},{"nodeType":"YulBlock","src":"8002:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8017:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8031:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8021:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8046:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8092:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:27"},"nodeType":"YulFunctionCall","src":"8077:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8101:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8056:20:27"},"nodeType":"YulFunctionCall","src":"8056:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8046:6:27"}]}]},{"nodeType":"YulBlock","src":"8129:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8144:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8158:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8148:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8174:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8209:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8220:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8205:3:27"},"nodeType":"YulFunctionCall","src":"8205:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8229:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8184:20:27"},"nodeType":"YulFunctionCall","src":"8184:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8174:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7825:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7836:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7848:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7856:6:27","type":""}],"src":"7780:474:27"},{"body":{"nodeType":"YulBlock","src":"8325:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"8371:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8373:77:27"},"nodeType":"YulFunctionCall","src":"8373:79:27"},"nodeType":"YulExpressionStatement","src":"8373:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8346:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8355:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8342:3:27"},"nodeType":"YulFunctionCall","src":"8342:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"8367:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8338:3:27"},"nodeType":"YulFunctionCall","src":"8338:32:27"},"nodeType":"YulIf","src":"8335:2:27"},{"nodeType":"YulBlock","src":"8464:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8479:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8493:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8483:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8508:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8542:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8553:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8538:3:27"},"nodeType":"YulFunctionCall","src":"8538:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8562:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"8518:19:27"},"nodeType":"YulFunctionCall","src":"8518:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8508:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8295:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8306:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8318:6:27","type":""}],"src":"8260:327:27"},{"body":{"nodeType":"YulBlock","src":"8669:273:27","statements":[{"body":{"nodeType":"YulBlock","src":"8715:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8717:77:27"},"nodeType":"YulFunctionCall","src":"8717:79:27"},"nodeType":"YulExpressionStatement","src":"8717:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8690:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8699:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8686:3:27"},"nodeType":"YulFunctionCall","src":"8686:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8682:3:27"},"nodeType":"YulFunctionCall","src":"8682:32:27"},"nodeType":"YulIf","src":"8679:2:27"},{"nodeType":"YulBlock","src":"8808:127:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8823:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8837:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8827:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8852:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8897:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8908:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8893:3:27"},"nodeType":"YulFunctionCall","src":"8893:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8917:7:27"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"8862:30:27"},"nodeType":"YulFunctionCall","src":"8862:63:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8852:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8639:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8650:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8662:6:27","type":""}],"src":"8593:349:27"},{"body":{"nodeType":"YulBlock","src":"9024:433:27","statements":[{"body":{"nodeType":"YulBlock","src":"9070:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9072:77:27"},"nodeType":"YulFunctionCall","src":"9072:79:27"},"nodeType":"YulExpressionStatement","src":"9072:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9045:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9054:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9041:3:27"},"nodeType":"YulFunctionCall","src":"9041:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9066:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9037:3:27"},"nodeType":"YulFunctionCall","src":"9037:32:27"},"nodeType":"YulIf","src":"9034:2:27"},{"nodeType":"YulBlock","src":"9163:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9178:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9209:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9220:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9205:3:27"},"nodeType":"YulFunctionCall","src":"9205:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9192:12:27"},"nodeType":"YulFunctionCall","src":"9192:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9182:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9270:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9272:77:27"},"nodeType":"YulFunctionCall","src":"9272:79:27"},"nodeType":"YulExpressionStatement","src":"9272:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9242:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9250:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9239:2:27"},"nodeType":"YulFunctionCall","src":"9239:30:27"},"nodeType":"YulIf","src":"9236:2:27"},{"nodeType":"YulAssignment","src":"9367:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9412:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9423:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:27"},"nodeType":"YulFunctionCall","src":"9408:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9432:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9377:30:27"},"nodeType":"YulFunctionCall","src":"9377:63:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9367:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8994:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9005:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9017:6:27","type":""}],"src":"8948:509:27"},{"body":{"nodeType":"YulBlock","src":"9529:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"9575:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9577:77:27"},"nodeType":"YulFunctionCall","src":"9577:79:27"},"nodeType":"YulExpressionStatement","src":"9577:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9550:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9559:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9546:3:27"},"nodeType":"YulFunctionCall","src":"9546:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9571:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9542:3:27"},"nodeType":"YulFunctionCall","src":"9542:32:27"},"nodeType":"YulIf","src":"9539:2:27"},{"nodeType":"YulBlock","src":"9668:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9683:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9697:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9687:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9712:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9747:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9758:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:27"},"nodeType":"YulFunctionCall","src":"9743:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9767:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9722:20:27"},"nodeType":"YulFunctionCall","src":"9722:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9712:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9499:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9510:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9522:6:27","type":""}],"src":"9463:329:27"},{"body":{"nodeType":"YulBlock","src":"9863:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9880:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9903:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9885:17:27"},"nodeType":"YulFunctionCall","src":"9885:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9873:6:27"},"nodeType":"YulFunctionCall","src":"9873:37:27"},"nodeType":"YulExpressionStatement","src":"9873:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9851:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9858:3:27","type":""}],"src":"9798:118:27"},{"body":{"nodeType":"YulBlock","src":"9981:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9998:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10018:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10003:14:27"},"nodeType":"YulFunctionCall","src":"10003:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9991:6:27"},"nodeType":"YulFunctionCall","src":"9991:34:27"},"nodeType":"YulExpressionStatement","src":"9991:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9969:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9976:3:27","type":""}],"src":"9922:109:27"},{"body":{"nodeType":"YulBlock","src":"10102:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10119:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10142:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10124:17:27"},"nodeType":"YulFunctionCall","src":"10124:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10112:6:27"},"nodeType":"YulFunctionCall","src":"10112:37:27"},"nodeType":"YulExpressionStatement","src":"10112:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10090:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10097:3:27","type":""}],"src":"10037:118:27"},{"body":{"nodeType":"YulBlock","src":"10244:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10304:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10286:17:27"},"nodeType":"YulFunctionCall","src":"10286:24:27"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"10266:19:27"},"nodeType":"YulFunctionCall","src":"10266:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10254:6:27"},"nodeType":"YulFunctionCall","src":"10254:58:27"},"nodeType":"YulExpressionStatement","src":"10254:58:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10232:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10239:3:27","type":""}],"src":"10161:157:27"},{"body":{"nodeType":"YulBlock","src":"10414:270:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10424:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10470:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10438:31:27"},"nodeType":"YulFunctionCall","src":"10438:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10428:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10485:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10550:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10555:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10492:57:27"},"nodeType":"YulFunctionCall","src":"10492:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10485:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10597:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10604:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10593:3:27"},"nodeType":"YulFunctionCall","src":"10593:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10611:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10616:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10571:21:27"},"nodeType":"YulFunctionCall","src":"10571:52:27"},"nodeType":"YulExpressionStatement","src":"10571:52:27"},{"nodeType":"YulAssignment","src":"10632:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10643:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10670:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10648:21:27"},"nodeType":"YulFunctionCall","src":"10648:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10639:3:27"},"nodeType":"YulFunctionCall","src":"10639:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10632:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10395:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10402:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10410:3:27","type":""}],"src":"10324:360:27"},{"body":{"nodeType":"YulBlock","src":"10782:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10792:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10839:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10806:32:27"},"nodeType":"YulFunctionCall","src":"10806:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10796:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10854:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10920:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10925:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10861:58:27"},"nodeType":"YulFunctionCall","src":"10861:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10854:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10967:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10974:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10963:3:27"},"nodeType":"YulFunctionCall","src":"10963:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10981:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10986:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10941:21:27"},"nodeType":"YulFunctionCall","src":"10941:52:27"},"nodeType":"YulExpressionStatement","src":"10941:52:27"},{"nodeType":"YulAssignment","src":"11002:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11013:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11040:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11018:21:27"},"nodeType":"YulFunctionCall","src":"11018:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11009:3:27"},"nodeType":"YulFunctionCall","src":"11009:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11002:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10763:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10770:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10778:3:27","type":""}],"src":"10690:364:27"},{"body":{"nodeType":"YulBlock","src":"11170:267:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11180:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11227:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11194:32:27"},"nodeType":"YulFunctionCall","src":"11194:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11184:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11242:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11326:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11331:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11249:76:27"},"nodeType":"YulFunctionCall","src":"11249:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11242:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11373:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11380:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11369:3:27"},"nodeType":"YulFunctionCall","src":"11369:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"11387:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11392:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11347:21:27"},"nodeType":"YulFunctionCall","src":"11347:52:27"},"nodeType":"YulExpressionStatement","src":"11347:52:27"},{"nodeType":"YulAssignment","src":"11408:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11419:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11424:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11415:3:27"},"nodeType":"YulFunctionCall","src":"11415:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11408:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11151:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11158:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11166:3:27","type":""}],"src":"11060:377:27"},{"body":{"nodeType":"YulBlock","src":"11589:220:27","statements":[{"nodeType":"YulAssignment","src":"11599:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11665:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11670:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11606:58:27"},"nodeType":"YulFunctionCall","src":"11606:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11599:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11771:3:27"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"11682:88:27"},"nodeType":"YulFunctionCall","src":"11682:93:27"},"nodeType":"YulExpressionStatement","src":"11682:93:27"},{"nodeType":"YulAssignment","src":"11784:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11795:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11800:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11791:3:27"},"nodeType":"YulFunctionCall","src":"11791:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11784:3:27"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11577:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11585:3:27","type":""}],"src":"11443:366:27"},{"body":{"nodeType":"YulBlock","src":"11961:220:27","statements":[{"nodeType":"YulAssignment","src":"11971:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12037:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12042:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11978:58:27"},"nodeType":"YulFunctionCall","src":"11978:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11971:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12143:3:27"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"12054:88:27"},"nodeType":"YulFunctionCall","src":"12054:93:27"},"nodeType":"YulExpressionStatement","src":"12054:93:27"},{"nodeType":"YulAssignment","src":"12156:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12167:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12163:3:27"},"nodeType":"YulFunctionCall","src":"12163:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12156:3:27"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11949:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11957:3:27","type":""}],"src":"11815:366:27"},{"body":{"nodeType":"YulBlock","src":"12333:220:27","statements":[{"nodeType":"YulAssignment","src":"12343:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12409:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12414:2:27","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12350:58:27"},"nodeType":"YulFunctionCall","src":"12350:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12343:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12515:3:27"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"12426:88:27"},"nodeType":"YulFunctionCall","src":"12426:93:27"},"nodeType":"YulExpressionStatement","src":"12426:93:27"},{"nodeType":"YulAssignment","src":"12528:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12539:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12544:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12535:3:27"},"nodeType":"YulFunctionCall","src":"12535:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12528:3:27"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12321:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12329:3:27","type":""}],"src":"12187:366:27"},{"body":{"nodeType":"YulBlock","src":"12705:220:27","statements":[{"nodeType":"YulAssignment","src":"12715:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12781:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12786:2:27","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12722:58:27"},"nodeType":"YulFunctionCall","src":"12722:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12715:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12887:3:27"}],"functionName":{"name":"store_literal_in_memory_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","nodeType":"YulIdentifier","src":"12798:88:27"},"nodeType":"YulFunctionCall","src":"12798:93:27"},"nodeType":"YulExpressionStatement","src":"12798:93:27"},{"nodeType":"YulAssignment","src":"12900:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12911:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12916:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:27"},"nodeType":"YulFunctionCall","src":"12907:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12900:3:27"}]}]},"name":"abi_encode_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12693:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12701:3:27","type":""}],"src":"12559:366:27"},{"body":{"nodeType":"YulBlock","src":"13077:220:27","statements":[{"nodeType":"YulAssignment","src":"13087:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13153:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13158:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13094:58:27"},"nodeType":"YulFunctionCall","src":"13094:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13087:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13259:3:27"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"13170:88:27"},"nodeType":"YulFunctionCall","src":"13170:93:27"},"nodeType":"YulExpressionStatement","src":"13170:93:27"},{"nodeType":"YulAssignment","src":"13272:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13283:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13288:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13279:3:27"},"nodeType":"YulFunctionCall","src":"13279:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13272:3:27"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13065:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13073:3:27","type":""}],"src":"12931:366:27"},{"body":{"nodeType":"YulBlock","src":"13449:220:27","statements":[{"nodeType":"YulAssignment","src":"13459:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13525:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13530:2:27","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13466:58:27"},"nodeType":"YulFunctionCall","src":"13466:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13459:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13631:3:27"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"13542:88:27"},"nodeType":"YulFunctionCall","src":"13542:93:27"},"nodeType":"YulExpressionStatement","src":"13542:93:27"},{"nodeType":"YulAssignment","src":"13644:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13655:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13660:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13651:3:27"},"nodeType":"YulFunctionCall","src":"13651:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13644:3:27"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13437:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13445:3:27","type":""}],"src":"13303:366:27"},{"body":{"nodeType":"YulBlock","src":"13821:220:27","statements":[{"nodeType":"YulAssignment","src":"13831:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13897:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13902:2:27","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13838:58:27"},"nodeType":"YulFunctionCall","src":"13838:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13831:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14003:3:27"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"13914:88:27"},"nodeType":"YulFunctionCall","src":"13914:93:27"},"nodeType":"YulExpressionStatement","src":"13914:93:27"},{"nodeType":"YulAssignment","src":"14016:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14027:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14032:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14023:3:27"},"nodeType":"YulFunctionCall","src":"14023:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14016:3:27"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13809:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13817:3:27","type":""}],"src":"13675:366:27"},{"body":{"nodeType":"YulBlock","src":"14193:220:27","statements":[{"nodeType":"YulAssignment","src":"14203:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14269:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14274:2:27","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14210:58:27"},"nodeType":"YulFunctionCall","src":"14210:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14203:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14375:3:27"}],"functionName":{"name":"store_literal_in_memory_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf","nodeType":"YulIdentifier","src":"14286:88:27"},"nodeType":"YulFunctionCall","src":"14286:93:27"},"nodeType":"YulExpressionStatement","src":"14286:93:27"},{"nodeType":"YulAssignment","src":"14388:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14399:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14404:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14395:3:27"},"nodeType":"YulFunctionCall","src":"14395:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14388:3:27"}]}]},"name":"abi_encode_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14181:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14189:3:27","type":""}],"src":"14047:366:27"},{"body":{"nodeType":"YulBlock","src":"14565:220:27","statements":[{"nodeType":"YulAssignment","src":"14575:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14641:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14646:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14582:58:27"},"nodeType":"YulFunctionCall","src":"14582:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14575:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14747:3:27"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"14658:88:27"},"nodeType":"YulFunctionCall","src":"14658:93:27"},"nodeType":"YulExpressionStatement","src":"14658:93:27"},{"nodeType":"YulAssignment","src":"14760:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14771:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14776:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14767:3:27"},"nodeType":"YulFunctionCall","src":"14767:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14760:3:27"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14553:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14561:3:27","type":""}],"src":"14419:366:27"},{"body":{"nodeType":"YulBlock","src":"14937:220:27","statements":[{"nodeType":"YulAssignment","src":"14947:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15013:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15018:2:27","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14954:58:27"},"nodeType":"YulFunctionCall","src":"14954:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14947:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15119:3:27"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"15030:88:27"},"nodeType":"YulFunctionCall","src":"15030:93:27"},"nodeType":"YulExpressionStatement","src":"15030:93:27"},{"nodeType":"YulAssignment","src":"15132:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15143:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15148:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:27"},"nodeType":"YulFunctionCall","src":"15139:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15132:3:27"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14925:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14933:3:27","type":""}],"src":"14791:366:27"},{"body":{"nodeType":"YulBlock","src":"15327:236:27","statements":[{"nodeType":"YulAssignment","src":"15337:91:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15421:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15426:1:27","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15344:76:27"},"nodeType":"YulFunctionCall","src":"15344:84:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15337:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15526:3:27"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"15437:88:27"},"nodeType":"YulFunctionCall","src":"15437:93:27"},"nodeType":"YulExpressionStatement","src":"15437:93:27"},{"nodeType":"YulAssignment","src":"15539:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15550:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15555:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15546:3:27"},"nodeType":"YulFunctionCall","src":"15546:11:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15539:3:27"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15315:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15323:3:27","type":""}],"src":"15163:400:27"},{"body":{"nodeType":"YulBlock","src":"15715:220:27","statements":[{"nodeType":"YulAssignment","src":"15725:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15791:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15796:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15732:58:27"},"nodeType":"YulFunctionCall","src":"15732:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15725:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15897:3:27"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"15808:88:27"},"nodeType":"YulFunctionCall","src":"15808:93:27"},"nodeType":"YulExpressionStatement","src":"15808:93:27"},{"nodeType":"YulAssignment","src":"15910:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15921:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15926:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15917:3:27"},"nodeType":"YulFunctionCall","src":"15917:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15910:3:27"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15703:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15711:3:27","type":""}],"src":"15569:366:27"},{"body":{"nodeType":"YulBlock","src":"16087:220:27","statements":[{"nodeType":"YulAssignment","src":"16097:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16163:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16168:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16104:58:27"},"nodeType":"YulFunctionCall","src":"16104:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16097:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16269:3:27"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"16180:88:27"},"nodeType":"YulFunctionCall","src":"16180:93:27"},"nodeType":"YulExpressionStatement","src":"16180:93:27"},{"nodeType":"YulAssignment","src":"16282:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16293:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16298:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16289:3:27"},"nodeType":"YulFunctionCall","src":"16289:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16282:3:27"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16075:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16083:3:27","type":""}],"src":"15941:366:27"},{"body":{"nodeType":"YulBlock","src":"16459:220:27","statements":[{"nodeType":"YulAssignment","src":"16469:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16535:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16540:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16476:58:27"},"nodeType":"YulFunctionCall","src":"16476:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16469:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16641:3:27"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"16552:88:27"},"nodeType":"YulFunctionCall","src":"16552:93:27"},"nodeType":"YulExpressionStatement","src":"16552:93:27"},{"nodeType":"YulAssignment","src":"16654:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16665:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16670:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16661:3:27"},"nodeType":"YulFunctionCall","src":"16661:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16654:3:27"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16447:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16455:3:27","type":""}],"src":"16313:366:27"},{"body":{"nodeType":"YulBlock","src":"16831:220:27","statements":[{"nodeType":"YulAssignment","src":"16841:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16907:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16912:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16848:58:27"},"nodeType":"YulFunctionCall","src":"16848:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16841:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17013:3:27"}],"functionName":{"name":"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","nodeType":"YulIdentifier","src":"16924:88:27"},"nodeType":"YulFunctionCall","src":"16924:93:27"},"nodeType":"YulExpressionStatement","src":"16924:93:27"},{"nodeType":"YulAssignment","src":"17026:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17037:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17042:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17033:3:27"},"nodeType":"YulFunctionCall","src":"17033:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17026:3:27"}]}]},"name":"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16819:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16827:3:27","type":""}],"src":"16685:366:27"},{"body":{"nodeType":"YulBlock","src":"17203:220:27","statements":[{"nodeType":"YulAssignment","src":"17213:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17279:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17284:2:27","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17220:58:27"},"nodeType":"YulFunctionCall","src":"17220:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17213:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17385:3:27"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"17296:88:27"},"nodeType":"YulFunctionCall","src":"17296:93:27"},"nodeType":"YulExpressionStatement","src":"17296:93:27"},{"nodeType":"YulAssignment","src":"17398:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17409:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17414:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17405:3:27"},"nodeType":"YulFunctionCall","src":"17405:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17398:3:27"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17191:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17199:3:27","type":""}],"src":"17057:366:27"},{"body":{"nodeType":"YulBlock","src":"17575:220:27","statements":[{"nodeType":"YulAssignment","src":"17585:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17651:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17656:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17592:58:27"},"nodeType":"YulFunctionCall","src":"17592:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17585:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17757:3:27"}],"functionName":{"name":"store_literal_in_memory_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","nodeType":"YulIdentifier","src":"17668:88:27"},"nodeType":"YulFunctionCall","src":"17668:93:27"},"nodeType":"YulExpressionStatement","src":"17668:93:27"},{"nodeType":"YulAssignment","src":"17770:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17781:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17786:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17777:3:27"},"nodeType":"YulFunctionCall","src":"17777:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17770:3:27"}]}]},"name":"abi_encode_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17563:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17571:3:27","type":""}],"src":"17429:366:27"},{"body":{"nodeType":"YulBlock","src":"17947:220:27","statements":[{"nodeType":"YulAssignment","src":"17957:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18023:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18028:2:27","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17964:58:27"},"nodeType":"YulFunctionCall","src":"17964:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17957:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18129:3:27"}],"functionName":{"name":"store_literal_in_memory_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262","nodeType":"YulIdentifier","src":"18040:88:27"},"nodeType":"YulFunctionCall","src":"18040:93:27"},"nodeType":"YulExpressionStatement","src":"18040:93:27"},{"nodeType":"YulAssignment","src":"18142:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18153:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18158:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18149:3:27"},"nodeType":"YulFunctionCall","src":"18149:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18142:3:27"}]}]},"name":"abi_encode_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17935:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17943:3:27","type":""}],"src":"17801:366:27"},{"body":{"nodeType":"YulBlock","src":"18319:220:27","statements":[{"nodeType":"YulAssignment","src":"18329:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18395:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18400:2:27","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18336:58:27"},"nodeType":"YulFunctionCall","src":"18336:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18329:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18501:3:27"}],"functionName":{"name":"store_literal_in_memory_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","nodeType":"YulIdentifier","src":"18412:88:27"},"nodeType":"YulFunctionCall","src":"18412:93:27"},"nodeType":"YulExpressionStatement","src":"18412:93:27"},{"nodeType":"YulAssignment","src":"18514:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18525:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18530:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18521:3:27"},"nodeType":"YulFunctionCall","src":"18521:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18514:3:27"}]}]},"name":"abi_encode_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18307:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18315:3:27","type":""}],"src":"18173:366:27"},{"body":{"nodeType":"YulBlock","src":"18691:220:27","statements":[{"nodeType":"YulAssignment","src":"18701:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18767:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18772:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18708:58:27"},"nodeType":"YulFunctionCall","src":"18708:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18701:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18873:3:27"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"18784:88:27"},"nodeType":"YulFunctionCall","src":"18784:93:27"},"nodeType":"YulExpressionStatement","src":"18784:93:27"},{"nodeType":"YulAssignment","src":"18886:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18897:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18902:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18893:3:27"},"nodeType":"YulFunctionCall","src":"18893:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18886:3:27"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18679:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18687:3:27","type":""}],"src":"18545:366:27"},{"body":{"nodeType":"YulBlock","src":"19063:220:27","statements":[{"nodeType":"YulAssignment","src":"19073:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19139:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19144:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19080:58:27"},"nodeType":"YulFunctionCall","src":"19080:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19073:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19245:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"19156:88:27"},"nodeType":"YulFunctionCall","src":"19156:93:27"},"nodeType":"YulExpressionStatement","src":"19156:93:27"},{"nodeType":"YulAssignment","src":"19258:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19269:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19274:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19265:3:27"},"nodeType":"YulFunctionCall","src":"19265:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19258:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19051:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19059:3:27","type":""}],"src":"18917:366:27"},{"body":{"nodeType":"YulBlock","src":"19435:220:27","statements":[{"nodeType":"YulAssignment","src":"19445:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19516:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19452:58:27"},"nodeType":"YulFunctionCall","src":"19452:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19445:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19617:3:27"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"19528:88:27"},"nodeType":"YulFunctionCall","src":"19528:93:27"},"nodeType":"YulExpressionStatement","src":"19528:93:27"},{"nodeType":"YulAssignment","src":"19630:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19641:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19646:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19637:3:27"},"nodeType":"YulFunctionCall","src":"19637:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19630:3:27"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19423:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19431:3:27","type":""}],"src":"19289:366:27"},{"body":{"nodeType":"YulBlock","src":"19807:220:27","statements":[{"nodeType":"YulAssignment","src":"19817:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19883:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19888:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19824:58:27"},"nodeType":"YulFunctionCall","src":"19824:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19817:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19989:3:27"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"19900:88:27"},"nodeType":"YulFunctionCall","src":"19900:93:27"},"nodeType":"YulExpressionStatement","src":"19900:93:27"},{"nodeType":"YulAssignment","src":"20002:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20013:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20018:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20009:3:27"},"nodeType":"YulFunctionCall","src":"20009:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20002:3:27"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19795:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19803:3:27","type":""}],"src":"19661:366:27"},{"body":{"nodeType":"YulBlock","src":"20179:220:27","statements":[{"nodeType":"YulAssignment","src":"20189:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20255:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20260:2:27","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20196:58:27"},"nodeType":"YulFunctionCall","src":"20196:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20189:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20361:3:27"}],"functionName":{"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulIdentifier","src":"20272:88:27"},"nodeType":"YulFunctionCall","src":"20272:93:27"},"nodeType":"YulExpressionStatement","src":"20272:93:27"},{"nodeType":"YulAssignment","src":"20374:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20385:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20390:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20381:3:27"},"nodeType":"YulFunctionCall","src":"20381:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20374:3:27"}]}]},"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20167:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20175:3:27","type":""}],"src":"20033:366:27"},{"body":{"nodeType":"YulBlock","src":"20551:220:27","statements":[{"nodeType":"YulAssignment","src":"20561:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20627:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20632:2:27","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20568:58:27"},"nodeType":"YulFunctionCall","src":"20568:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20561:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20733:3:27"}],"functionName":{"name":"store_literal_in_memory_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e","nodeType":"YulIdentifier","src":"20644:88:27"},"nodeType":"YulFunctionCall","src":"20644:93:27"},"nodeType":"YulExpressionStatement","src":"20644:93:27"},{"nodeType":"YulAssignment","src":"20746:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20757:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20762:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20753:3:27"},"nodeType":"YulFunctionCall","src":"20753:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20746:3:27"}]}]},"name":"abi_encode_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20539:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20547:3:27","type":""}],"src":"20405:366:27"},{"body":{"nodeType":"YulBlock","src":"20923:220:27","statements":[{"nodeType":"YulAssignment","src":"20933:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20999:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21004:2:27","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20940:58:27"},"nodeType":"YulFunctionCall","src":"20940:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20933:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21105:3:27"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"21016:88:27"},"nodeType":"YulFunctionCall","src":"21016:93:27"},"nodeType":"YulExpressionStatement","src":"21016:93:27"},{"nodeType":"YulAssignment","src":"21118:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21129:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21134:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21125:3:27"},"nodeType":"YulFunctionCall","src":"21125:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21118:3:27"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20911:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20919:3:27","type":""}],"src":"20777:366:27"},{"body":{"nodeType":"YulBlock","src":"21295:220:27","statements":[{"nodeType":"YulAssignment","src":"21305:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21371:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21376:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21312:58:27"},"nodeType":"YulFunctionCall","src":"21312:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21305:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21477:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"21388:88:27"},"nodeType":"YulFunctionCall","src":"21388:93:27"},"nodeType":"YulExpressionStatement","src":"21388:93:27"},{"nodeType":"YulAssignment","src":"21490:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21501:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21506:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21497:3:27"},"nodeType":"YulFunctionCall","src":"21497:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21490:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21283:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21291:3:27","type":""}],"src":"21149:366:27"},{"body":{"nodeType":"YulBlock","src":"21667:220:27","statements":[{"nodeType":"YulAssignment","src":"21677:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21743:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21748:2:27","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21684:58:27"},"nodeType":"YulFunctionCall","src":"21684:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21677:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21849:3:27"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"21760:88:27"},"nodeType":"YulFunctionCall","src":"21760:93:27"},"nodeType":"YulExpressionStatement","src":"21760:93:27"},{"nodeType":"YulAssignment","src":"21862:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21873:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21878:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21869:3:27"},"nodeType":"YulFunctionCall","src":"21869:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21862:3:27"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21655:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21663:3:27","type":""}],"src":"21521:366:27"},{"body":{"nodeType":"YulBlock","src":"22057:238:27","statements":[{"nodeType":"YulAssignment","src":"22067:92:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22151:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22156:2:27","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22074:76:27"},"nodeType":"YulFunctionCall","src":"22074:85:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22067:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22257:3:27"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"22168:88:27"},"nodeType":"YulFunctionCall","src":"22168:93:27"},"nodeType":"YulExpressionStatement","src":"22168:93:27"},{"nodeType":"YulAssignment","src":"22270:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22281:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22286:2:27","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22277:3:27"},"nodeType":"YulFunctionCall","src":"22277:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22270:3:27"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22045:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22053:3:27","type":""}],"src":"21893:402:27"},{"body":{"nodeType":"YulBlock","src":"22447:220:27","statements":[{"nodeType":"YulAssignment","src":"22457:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22523:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22528:2:27","type":"","value":"53"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22464:58:27"},"nodeType":"YulFunctionCall","src":"22464:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22457:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22629:3:27"}],"functionName":{"name":"store_literal_in_memory_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","nodeType":"YulIdentifier","src":"22540:88:27"},"nodeType":"YulFunctionCall","src":"22540:93:27"},"nodeType":"YulExpressionStatement","src":"22540:93:27"},{"nodeType":"YulAssignment","src":"22642:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22653:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22658:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22649:3:27"},"nodeType":"YulFunctionCall","src":"22649:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22642:3:27"}]}]},"name":"abi_encode_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22435:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22443:3:27","type":""}],"src":"22301:366:27"},{"body":{"nodeType":"YulBlock","src":"22837:238:27","statements":[{"nodeType":"YulAssignment","src":"22847:92:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22931:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22936:2:27","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22854:76:27"},"nodeType":"YulFunctionCall","src":"22854:85:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22847:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23037:3:27"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"22948:88:27"},"nodeType":"YulFunctionCall","src":"22948:93:27"},"nodeType":"YulExpressionStatement","src":"22948:93:27"},{"nodeType":"YulAssignment","src":"23050:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23061:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23066:2:27","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23057:3:27"},"nodeType":"YulFunctionCall","src":"23057:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23050:3:27"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22825:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22833:3:27","type":""}],"src":"22673:402:27"},{"body":{"nodeType":"YulBlock","src":"23227:220:27","statements":[{"nodeType":"YulAssignment","src":"23237:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23303:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23308:2:27","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23244:58:27"},"nodeType":"YulFunctionCall","src":"23244:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23237:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23409:3:27"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"23320:88:27"},"nodeType":"YulFunctionCall","src":"23320:93:27"},"nodeType":"YulExpressionStatement","src":"23320:93:27"},{"nodeType":"YulAssignment","src":"23422:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23433:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23438:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23429:3:27"},"nodeType":"YulFunctionCall","src":"23429:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23422:3:27"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23215:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23223:3:27","type":""}],"src":"23081:366:27"},{"body":{"nodeType":"YulBlock","src":"23518:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23535:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23558:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23540:17:27"},"nodeType":"YulFunctionCall","src":"23540:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23528:6:27"},"nodeType":"YulFunctionCall","src":"23528:37:27"},"nodeType":"YulExpressionStatement","src":"23528:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23506:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23513:3:27","type":""}],"src":"23453:118:27"},{"body":{"nodeType":"YulBlock","src":"23638:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23655:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23676:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"23660:15:27"},"nodeType":"YulFunctionCall","src":"23660:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23648:6:27"},"nodeType":"YulFunctionCall","src":"23648:35:27"},"nodeType":"YulExpressionStatement","src":"23648:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23626:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23633:3:27","type":""}],"src":"23577:112:27"},{"body":{"nodeType":"YulBlock","src":"23940:418:27","statements":[{"nodeType":"YulAssignment","src":"23951:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24102:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23958:142:27"},"nodeType":"YulFunctionCall","src":"23958:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23951:3:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24178:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"24187:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24116:61:27"},"nodeType":"YulFunctionCall","src":"24116:75:27"},"nodeType":"YulExpressionStatement","src":"24116:75:27"},{"nodeType":"YulAssignment","src":"24200:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24211:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24216:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24207:3:27"},"nodeType":"YulFunctionCall","src":"24207:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24200:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24291:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"24300:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24229:61:27"},"nodeType":"YulFunctionCall","src":"24229:75:27"},"nodeType":"YulExpressionStatement","src":"24229:75:27"},{"nodeType":"YulAssignment","src":"24313:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24324:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24329:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24320:3:27"},"nodeType":"YulFunctionCall","src":"24320:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24313:3:27"}]},{"nodeType":"YulAssignment","src":"24342:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"24349:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24342:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23911:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23917:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23925:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23936:3:27","type":""}],"src":"23695:663:27"},{"body":{"nodeType":"YulBlock","src":"24750:581:27","statements":[{"nodeType":"YulAssignment","src":"24761:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24912:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24768:142:27"},"nodeType":"YulFunctionCall","src":"24768:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24761:3:27"}]},{"nodeType":"YulAssignment","src":"24926:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25015:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"25024:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24933:81:27"},"nodeType":"YulFunctionCall","src":"24933:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24926:3:27"}]},{"nodeType":"YulAssignment","src":"25038:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25189:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25045:142:27"},"nodeType":"YulFunctionCall","src":"25045:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25038:3:27"}]},{"nodeType":"YulAssignment","src":"25203:102:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25292:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"25301:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25210:81:27"},"nodeType":"YulFunctionCall","src":"25210:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25203:3:27"}]},{"nodeType":"YulAssignment","src":"25315:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"25322:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25315:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24721:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24727:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24735:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24746:3:27","type":""}],"src":"24364:967:27"},{"body":{"nodeType":"YulBlock","src":"25435:124:27","statements":[{"nodeType":"YulAssignment","src":"25445:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25457:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25468:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25453:3:27"},"nodeType":"YulFunctionCall","src":"25453:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25445:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25525:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25538:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25549:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25534:3:27"},"nodeType":"YulFunctionCall","src":"25534:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25481:43:27"},"nodeType":"YulFunctionCall","src":"25481:71:27"},"nodeType":"YulExpressionStatement","src":"25481:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25407:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25419:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25430:4:27","type":""}],"src":"25337:222:27"},{"body":{"nodeType":"YulBlock","src":"25765:440:27","statements":[{"nodeType":"YulAssignment","src":"25775:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25787:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25798:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25783:3:27"},"nodeType":"YulFunctionCall","src":"25783:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25775:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25856:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25869:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25880:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25865:3:27"},"nodeType":"YulFunctionCall","src":"25865:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25812:43:27"},"nodeType":"YulFunctionCall","src":"25812:71:27"},"nodeType":"YulExpressionStatement","src":"25812:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25937:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25950:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25961:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25946:3:27"},"nodeType":"YulFunctionCall","src":"25946:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25893:43:27"},"nodeType":"YulFunctionCall","src":"25893:72:27"},"nodeType":"YulExpressionStatement","src":"25893:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26019:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26032:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26043:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26028:3:27"},"nodeType":"YulFunctionCall","src":"26028:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25975:43:27"},"nodeType":"YulFunctionCall","src":"25975:72:27"},"nodeType":"YulExpressionStatement","src":"25975:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26068:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26079:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26064:3:27"},"nodeType":"YulFunctionCall","src":"26064:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26088:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26094:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26084:3:27"},"nodeType":"YulFunctionCall","src":"26084:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26057:6:27"},"nodeType":"YulFunctionCall","src":"26057:48:27"},"nodeType":"YulExpressionStatement","src":"26057:48:27"},{"nodeType":"YulAssignment","src":"26114:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26184:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"26193:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26122:61:27"},"nodeType":"YulFunctionCall","src":"26122:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26114:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25713:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25725:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25733:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25741:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25749:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25760:4:27","type":""}],"src":"25565:640:27"},{"body":{"nodeType":"YulBlock","src":"26303:118:27","statements":[{"nodeType":"YulAssignment","src":"26313:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26325:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26336:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26321:3:27"},"nodeType":"YulFunctionCall","src":"26321:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26313:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26387:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26400:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26411:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26396:3:27"},"nodeType":"YulFunctionCall","src":"26396:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"26349:37:27"},"nodeType":"YulFunctionCall","src":"26349:65:27"},"nodeType":"YulExpressionStatement","src":"26349:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26275:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26287:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26298:4:27","type":""}],"src":"26211:210:27"},{"body":{"nodeType":"YulBlock","src":"26525:124:27","statements":[{"nodeType":"YulAssignment","src":"26535:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26547:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26558:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26543:3:27"},"nodeType":"YulFunctionCall","src":"26543:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26535:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26615:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26628:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26639:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26624:3:27"},"nodeType":"YulFunctionCall","src":"26624:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26571:43:27"},"nodeType":"YulFunctionCall","src":"26571:71:27"},"nodeType":"YulExpressionStatement","src":"26571:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26497:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26509:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26520:4:27","type":""}],"src":"26427:222:27"},{"body":{"nodeType":"YulBlock","src":"26837:371:27","statements":[{"nodeType":"YulAssignment","src":"26847:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26859:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26870:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26855:3:27"},"nodeType":"YulFunctionCall","src":"26855:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26847:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26928:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26941:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26952:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26937:3:27"},"nodeType":"YulFunctionCall","src":"26937:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26884:43:27"},"nodeType":"YulFunctionCall","src":"26884:71:27"},"nodeType":"YulExpressionStatement","src":"26884:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27009:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27022:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27033:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27018:3:27"},"nodeType":"YulFunctionCall","src":"27018:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26965:43:27"},"nodeType":"YulFunctionCall","src":"26965:72:27"},"nodeType":"YulExpressionStatement","src":"26965:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27091:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27104:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27115:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27100:3:27"},"nodeType":"YulFunctionCall","src":"27100:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27047:43:27"},"nodeType":"YulFunctionCall","src":"27047:72:27"},"nodeType":"YulExpressionStatement","src":"27047:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27173:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27186:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27197:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27182:3:27"},"nodeType":"YulFunctionCall","src":"27182:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27129:43:27"},"nodeType":"YulFunctionCall","src":"27129:72:27"},"nodeType":"YulExpressionStatement","src":"27129:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26785:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26797:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26805:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26813:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26821:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26832:4:27","type":""}],"src":"26655:553:27"},{"body":{"nodeType":"YulBlock","src":"27424:454:27","statements":[{"nodeType":"YulAssignment","src":"27434:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27446:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27457:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27442:3:27"},"nodeType":"YulFunctionCall","src":"27442:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27434:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27515:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27528:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27539:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27524:3:27"},"nodeType":"YulFunctionCall","src":"27524:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27471:43:27"},"nodeType":"YulFunctionCall","src":"27471:71:27"},"nodeType":"YulExpressionStatement","src":"27471:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27596:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27609:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27620:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27605:3:27"},"nodeType":"YulFunctionCall","src":"27605:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27552:43:27"},"nodeType":"YulFunctionCall","src":"27552:72:27"},"nodeType":"YulExpressionStatement","src":"27552:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27678:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27702:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27687:3:27"},"nodeType":"YulFunctionCall","src":"27687:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27634:43:27"},"nodeType":"YulFunctionCall","src":"27634:72:27"},"nodeType":"YulExpressionStatement","src":"27634:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27760:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27773:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27784:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27769:3:27"},"nodeType":"YulFunctionCall","src":"27769:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27716:43:27"},"nodeType":"YulFunctionCall","src":"27716:72:27"},"nodeType":"YulExpressionStatement","src":"27716:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27842:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27855:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27866:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27851:3:27"},"nodeType":"YulFunctionCall","src":"27851:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27798:43:27"},"nodeType":"YulFunctionCall","src":"27798:73:27"},"nodeType":"YulExpressionStatement","src":"27798:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27364:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27376:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27384:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27392:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27400:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27408:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27419:4:27","type":""}],"src":"27214:664:27"},{"body":{"nodeType":"YulBlock","src":"28062:367:27","statements":[{"nodeType":"YulAssignment","src":"28072:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28084:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28095:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28080:3:27"},"nodeType":"YulFunctionCall","src":"28080:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28072:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28153:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28166:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28177:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28162:3:27"},"nodeType":"YulFunctionCall","src":"28162:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28109:43:27"},"nodeType":"YulFunctionCall","src":"28109:71:27"},"nodeType":"YulExpressionStatement","src":"28109:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28230:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28243:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28254:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28239:3:27"},"nodeType":"YulFunctionCall","src":"28239:18:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28190:39:27"},"nodeType":"YulFunctionCall","src":"28190:68:27"},"nodeType":"YulExpressionStatement","src":"28190:68:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28312:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28325:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28336:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28321:3:27"},"nodeType":"YulFunctionCall","src":"28321:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28268:43:27"},"nodeType":"YulFunctionCall","src":"28268:72:27"},"nodeType":"YulExpressionStatement","src":"28268:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28394:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28407:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28418:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28403:3:27"},"nodeType":"YulFunctionCall","src":"28403:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28350:43:27"},"nodeType":"YulFunctionCall","src":"28350:72:27"},"nodeType":"YulExpressionStatement","src":"28350:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28010:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28022:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28030:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28038:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28046:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28057:4:27","type":""}],"src":"27884:545:27"},{"body":{"nodeType":"YulBlock","src":"28553:195:27","statements":[{"nodeType":"YulAssignment","src":"28563:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28575:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28586:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28571:3:27"},"nodeType":"YulFunctionCall","src":"28571:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28563:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28610:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28621:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28606:3:27"},"nodeType":"YulFunctionCall","src":"28606:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28629:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28635:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28625:3:27"},"nodeType":"YulFunctionCall","src":"28625:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28599:6:27"},"nodeType":"YulFunctionCall","src":"28599:47:27"},"nodeType":"YulExpressionStatement","src":"28599:47:27"},{"nodeType":"YulAssignment","src":"28655:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28727:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"28736:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28663:63:27"},"nodeType":"YulFunctionCall","src":"28663:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28655:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28525:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28537:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28548:4:27","type":""}],"src":"28435:313:27"},{"body":{"nodeType":"YulBlock","src":"28925:248:27","statements":[{"nodeType":"YulAssignment","src":"28935:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28947:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28958:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28943:3:27"},"nodeType":"YulFunctionCall","src":"28943:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28935:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28982:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28993:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28978:3:27"},"nodeType":"YulFunctionCall","src":"28978:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29001:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29007:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28997:3:27"},"nodeType":"YulFunctionCall","src":"28997:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28971:6:27"},"nodeType":"YulFunctionCall","src":"28971:47:27"},"nodeType":"YulExpressionStatement","src":"28971:47:27"},{"nodeType":"YulAssignment","src":"29027:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29161:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29035:124:27"},"nodeType":"YulFunctionCall","src":"29035:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29027:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28905:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28920:4:27","type":""}],"src":"28754:419:27"},{"body":{"nodeType":"YulBlock","src":"29350:248:27","statements":[{"nodeType":"YulAssignment","src":"29360:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29372:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29383:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29368:3:27"},"nodeType":"YulFunctionCall","src":"29368:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29360:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29407:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29418:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29403:3:27"},"nodeType":"YulFunctionCall","src":"29403:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29426:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29432:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29422:3:27"},"nodeType":"YulFunctionCall","src":"29422:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29396:6:27"},"nodeType":"YulFunctionCall","src":"29396:47:27"},"nodeType":"YulExpressionStatement","src":"29396:47:27"},{"nodeType":"YulAssignment","src":"29452:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29586:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29460:124:27"},"nodeType":"YulFunctionCall","src":"29460:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29452:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29330:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29345:4:27","type":""}],"src":"29179:419:27"},{"body":{"nodeType":"YulBlock","src":"29775:248:27","statements":[{"nodeType":"YulAssignment","src":"29785:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29808:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29793:3:27"},"nodeType":"YulFunctionCall","src":"29793:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29785:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29832:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29843:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29828:3:27"},"nodeType":"YulFunctionCall","src":"29828:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29851:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29857:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29847:3:27"},"nodeType":"YulFunctionCall","src":"29847:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29821:6:27"},"nodeType":"YulFunctionCall","src":"29821:47:27"},"nodeType":"YulExpressionStatement","src":"29821:47:27"},{"nodeType":"YulAssignment","src":"29877:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30011:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29885:124:27"},"nodeType":"YulFunctionCall","src":"29885:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29877:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29755:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29770:4:27","type":""}],"src":"29604:419:27"},{"body":{"nodeType":"YulBlock","src":"30200:248:27","statements":[{"nodeType":"YulAssignment","src":"30210:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30222:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30233:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30218:3:27"},"nodeType":"YulFunctionCall","src":"30218:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30210:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30257:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30268:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30253:3:27"},"nodeType":"YulFunctionCall","src":"30253:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30276:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30282:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30272:3:27"},"nodeType":"YulFunctionCall","src":"30272:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30246:6:27"},"nodeType":"YulFunctionCall","src":"30246:47:27"},"nodeType":"YulExpressionStatement","src":"30246:47:27"},{"nodeType":"YulAssignment","src":"30302:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30436:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30310:124:27"},"nodeType":"YulFunctionCall","src":"30310:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30302:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30180:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30195:4:27","type":""}],"src":"30029:419:27"},{"body":{"nodeType":"YulBlock","src":"30625:248:27","statements":[{"nodeType":"YulAssignment","src":"30635:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30647:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30658:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30643:3:27"},"nodeType":"YulFunctionCall","src":"30643:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30635:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30682:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30693:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30678:3:27"},"nodeType":"YulFunctionCall","src":"30678:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30701:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30707:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30697:3:27"},"nodeType":"YulFunctionCall","src":"30697:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30671:6:27"},"nodeType":"YulFunctionCall","src":"30671:47:27"},"nodeType":"YulExpressionStatement","src":"30671:47:27"},{"nodeType":"YulAssignment","src":"30727:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30861:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30735:124:27"},"nodeType":"YulFunctionCall","src":"30735:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30727:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30605:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30620:4:27","type":""}],"src":"30454:419:27"},{"body":{"nodeType":"YulBlock","src":"31050:248:27","statements":[{"nodeType":"YulAssignment","src":"31060:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31072:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31083:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31068:3:27"},"nodeType":"YulFunctionCall","src":"31068:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31060:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31107:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31118:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31103:3:27"},"nodeType":"YulFunctionCall","src":"31103:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31126:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31132:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31122:3:27"},"nodeType":"YulFunctionCall","src":"31122:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31096:6:27"},"nodeType":"YulFunctionCall","src":"31096:47:27"},"nodeType":"YulExpressionStatement","src":"31096:47:27"},{"nodeType":"YulAssignment","src":"31152:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31286:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31160:124:27"},"nodeType":"YulFunctionCall","src":"31160:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31152:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31030:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31045:4:27","type":""}],"src":"30879:419:27"},{"body":{"nodeType":"YulBlock","src":"31475:248:27","statements":[{"nodeType":"YulAssignment","src":"31485:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31497:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31508:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31493:3:27"},"nodeType":"YulFunctionCall","src":"31493:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31485:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31532:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31543:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31528:3:27"},"nodeType":"YulFunctionCall","src":"31528:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31551:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31557:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31547:3:27"},"nodeType":"YulFunctionCall","src":"31547:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31521:6:27"},"nodeType":"YulFunctionCall","src":"31521:47:27"},"nodeType":"YulExpressionStatement","src":"31521:47:27"},{"nodeType":"YulAssignment","src":"31577:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31711:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31585:124:27"},"nodeType":"YulFunctionCall","src":"31585:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31577:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31455:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31470:4:27","type":""}],"src":"31304:419:27"},{"body":{"nodeType":"YulBlock","src":"31900:248:27","statements":[{"nodeType":"YulAssignment","src":"31910:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31922:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31933:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31918:3:27"},"nodeType":"YulFunctionCall","src":"31918:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31910:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31957:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31968:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31953:3:27"},"nodeType":"YulFunctionCall","src":"31953:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31976:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31982:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31972:3:27"},"nodeType":"YulFunctionCall","src":"31972:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31946:6:27"},"nodeType":"YulFunctionCall","src":"31946:47:27"},"nodeType":"YulExpressionStatement","src":"31946:47:27"},{"nodeType":"YulAssignment","src":"32002:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32136:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32010:124:27"},"nodeType":"YulFunctionCall","src":"32010:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32002:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31880:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31895:4:27","type":""}],"src":"31729:419:27"},{"body":{"nodeType":"YulBlock","src":"32325:248:27","statements":[{"nodeType":"YulAssignment","src":"32335:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32347:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32358:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32343:3:27"},"nodeType":"YulFunctionCall","src":"32343:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32335:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32382:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32393:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32378:3:27"},"nodeType":"YulFunctionCall","src":"32378:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32401:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32407:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32397:3:27"},"nodeType":"YulFunctionCall","src":"32397:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32371:6:27"},"nodeType":"YulFunctionCall","src":"32371:47:27"},"nodeType":"YulExpressionStatement","src":"32371:47:27"},{"nodeType":"YulAssignment","src":"32427:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32561:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32435:124:27"},"nodeType":"YulFunctionCall","src":"32435:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32427:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32305:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32320:4:27","type":""}],"src":"32154:419:27"},{"body":{"nodeType":"YulBlock","src":"32750:248:27","statements":[{"nodeType":"YulAssignment","src":"32760:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32772:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32783:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32768:3:27"},"nodeType":"YulFunctionCall","src":"32768:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32760:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32818:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32803:3:27"},"nodeType":"YulFunctionCall","src":"32803:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32826:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32832:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32822:3:27"},"nodeType":"YulFunctionCall","src":"32822:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32796:6:27"},"nodeType":"YulFunctionCall","src":"32796:47:27"},"nodeType":"YulExpressionStatement","src":"32796:47:27"},{"nodeType":"YulAssignment","src":"32852:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32986:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32860:124:27"},"nodeType":"YulFunctionCall","src":"32860:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32852:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32730:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32745:4:27","type":""}],"src":"32579:419:27"},{"body":{"nodeType":"YulBlock","src":"33175:248:27","statements":[{"nodeType":"YulAssignment","src":"33185:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33197:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33208:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33193:3:27"},"nodeType":"YulFunctionCall","src":"33193:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33185:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33232:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33243:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33228:3:27"},"nodeType":"YulFunctionCall","src":"33228:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33251:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"33257:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33247:3:27"},"nodeType":"YulFunctionCall","src":"33247:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33221:6:27"},"nodeType":"YulFunctionCall","src":"33221:47:27"},"nodeType":"YulExpressionStatement","src":"33221:47:27"},{"nodeType":"YulAssignment","src":"33277:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33411:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33285:124:27"},"nodeType":"YulFunctionCall","src":"33285:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33277:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33155:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33170:4:27","type":""}],"src":"33004:419:27"},{"body":{"nodeType":"YulBlock","src":"33600:248:27","statements":[{"nodeType":"YulAssignment","src":"33610:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33622:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33633:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33618:3:27"},"nodeType":"YulFunctionCall","src":"33618:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33610:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33657:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33668:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33653:3:27"},"nodeType":"YulFunctionCall","src":"33653:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33676:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"33682:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33672:3:27"},"nodeType":"YulFunctionCall","src":"33672:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33646:6:27"},"nodeType":"YulFunctionCall","src":"33646:47:27"},"nodeType":"YulExpressionStatement","src":"33646:47:27"},{"nodeType":"YulAssignment","src":"33702:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33836:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33710:124:27"},"nodeType":"YulFunctionCall","src":"33710:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33702:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33580:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33595:4:27","type":""}],"src":"33429:419:27"},{"body":{"nodeType":"YulBlock","src":"34025:248:27","statements":[{"nodeType":"YulAssignment","src":"34035:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34043:3:27"},"nodeType":"YulFunctionCall","src":"34043:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34035:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34082:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34093:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34078:3:27"},"nodeType":"YulFunctionCall","src":"34078:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34101:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34107:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34097:3:27"},"nodeType":"YulFunctionCall","src":"34097:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34071:6:27"},"nodeType":"YulFunctionCall","src":"34071:47:27"},"nodeType":"YulExpressionStatement","src":"34071:47:27"},{"nodeType":"YulAssignment","src":"34127:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34261:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34135:124:27"},"nodeType":"YulFunctionCall","src":"34135:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34127:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34005:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34020:4:27","type":""}],"src":"33854:419:27"},{"body":{"nodeType":"YulBlock","src":"34450:248:27","statements":[{"nodeType":"YulAssignment","src":"34460:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34472:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34483:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34468:3:27"},"nodeType":"YulFunctionCall","src":"34468:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34460:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34507:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34518:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34503:3:27"},"nodeType":"YulFunctionCall","src":"34503:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34526:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34532:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34522:3:27"},"nodeType":"YulFunctionCall","src":"34522:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34496:6:27"},"nodeType":"YulFunctionCall","src":"34496:47:27"},"nodeType":"YulExpressionStatement","src":"34496:47:27"},{"nodeType":"YulAssignment","src":"34552:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34686:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34560:124:27"},"nodeType":"YulFunctionCall","src":"34560:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34552:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34430:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34445:4:27","type":""}],"src":"34279:419:27"},{"body":{"nodeType":"YulBlock","src":"34875:248:27","statements":[{"nodeType":"YulAssignment","src":"34885:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34897:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34908:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34893:3:27"},"nodeType":"YulFunctionCall","src":"34893:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34885:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34932:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34943:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34928:3:27"},"nodeType":"YulFunctionCall","src":"34928:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34951:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34957:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34947:3:27"},"nodeType":"YulFunctionCall","src":"34947:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34921:6:27"},"nodeType":"YulFunctionCall","src":"34921:47:27"},"nodeType":"YulExpressionStatement","src":"34921:47:27"},{"nodeType":"YulAssignment","src":"34977:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35111:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34985:124:27"},"nodeType":"YulFunctionCall","src":"34985:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34977:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34855:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34870:4:27","type":""}],"src":"34704:419:27"},{"body":{"nodeType":"YulBlock","src":"35300:248:27","statements":[{"nodeType":"YulAssignment","src":"35310:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35322:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35333:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35318:3:27"},"nodeType":"YulFunctionCall","src":"35318:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35310:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35357:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35368:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35353:3:27"},"nodeType":"YulFunctionCall","src":"35353:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35376:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35382:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35372:3:27"},"nodeType":"YulFunctionCall","src":"35372:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35346:6:27"},"nodeType":"YulFunctionCall","src":"35346:47:27"},"nodeType":"YulExpressionStatement","src":"35346:47:27"},{"nodeType":"YulAssignment","src":"35402:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35536:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35410:124:27"},"nodeType":"YulFunctionCall","src":"35410:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35402:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35280:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35295:4:27","type":""}],"src":"35129:419:27"},{"body":{"nodeType":"YulBlock","src":"35725:248:27","statements":[{"nodeType":"YulAssignment","src":"35735:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35747:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35758:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35743:3:27"},"nodeType":"YulFunctionCall","src":"35743:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35735:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35782:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35793:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35778:3:27"},"nodeType":"YulFunctionCall","src":"35778:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35801:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35807:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35797:3:27"},"nodeType":"YulFunctionCall","src":"35797:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35771:6:27"},"nodeType":"YulFunctionCall","src":"35771:47:27"},"nodeType":"YulExpressionStatement","src":"35771:47:27"},{"nodeType":"YulAssignment","src":"35827:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35961:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35835:124:27"},"nodeType":"YulFunctionCall","src":"35835:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35827:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35705:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35720:4:27","type":""}],"src":"35554:419:27"},{"body":{"nodeType":"YulBlock","src":"36150:248:27","statements":[{"nodeType":"YulAssignment","src":"36160:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36172:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36183:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36168:3:27"},"nodeType":"YulFunctionCall","src":"36168:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36160:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36207:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36218:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36203:3:27"},"nodeType":"YulFunctionCall","src":"36203:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36226:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36232:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36222:3:27"},"nodeType":"YulFunctionCall","src":"36222:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36196:6:27"},"nodeType":"YulFunctionCall","src":"36196:47:27"},"nodeType":"YulExpressionStatement","src":"36196:47:27"},{"nodeType":"YulAssignment","src":"36252:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36386:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36260:124:27"},"nodeType":"YulFunctionCall","src":"36260:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36252:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36130:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36145:4:27","type":""}],"src":"35979:419:27"},{"body":{"nodeType":"YulBlock","src":"36575:248:27","statements":[{"nodeType":"YulAssignment","src":"36585:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36597:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36608:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36593:3:27"},"nodeType":"YulFunctionCall","src":"36593:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36585:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36643:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36628:3:27"},"nodeType":"YulFunctionCall","src":"36628:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36651:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36657:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36647:3:27"},"nodeType":"YulFunctionCall","src":"36647:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36621:6:27"},"nodeType":"YulFunctionCall","src":"36621:47:27"},"nodeType":"YulExpressionStatement","src":"36621:47:27"},{"nodeType":"YulAssignment","src":"36677:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36811:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36685:124:27"},"nodeType":"YulFunctionCall","src":"36685:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36677:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36555:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36570:4:27","type":""}],"src":"36404:419:27"},{"body":{"nodeType":"YulBlock","src":"37000:248:27","statements":[{"nodeType":"YulAssignment","src":"37010:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37022:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37033:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37018:3:27"},"nodeType":"YulFunctionCall","src":"37018:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37010:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37057:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37068:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37053:3:27"},"nodeType":"YulFunctionCall","src":"37053:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37076:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37082:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37072:3:27"},"nodeType":"YulFunctionCall","src":"37072:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37046:6:27"},"nodeType":"YulFunctionCall","src":"37046:47:27"},"nodeType":"YulExpressionStatement","src":"37046:47:27"},{"nodeType":"YulAssignment","src":"37102:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37236:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37110:124:27"},"nodeType":"YulFunctionCall","src":"37110:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37102:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36980:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36995:4:27","type":""}],"src":"36829:419:27"},{"body":{"nodeType":"YulBlock","src":"37425:248:27","statements":[{"nodeType":"YulAssignment","src":"37435:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37447:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37458:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37443:3:27"},"nodeType":"YulFunctionCall","src":"37443:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37435:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37482:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37493:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37478:3:27"},"nodeType":"YulFunctionCall","src":"37478:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37501:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37507:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37497:3:27"},"nodeType":"YulFunctionCall","src":"37497:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37471:6:27"},"nodeType":"YulFunctionCall","src":"37471:47:27"},"nodeType":"YulExpressionStatement","src":"37471:47:27"},{"nodeType":"YulAssignment","src":"37527:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37661:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37535:124:27"},"nodeType":"YulFunctionCall","src":"37535:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37527:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37405:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37420:4:27","type":""}],"src":"37254:419:27"},{"body":{"nodeType":"YulBlock","src":"37850:248:27","statements":[{"nodeType":"YulAssignment","src":"37860:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37872:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37883:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37868:3:27"},"nodeType":"YulFunctionCall","src":"37868:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37860:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37907:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37918:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37903:3:27"},"nodeType":"YulFunctionCall","src":"37903:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37926:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37932:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37922:3:27"},"nodeType":"YulFunctionCall","src":"37922:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37896:6:27"},"nodeType":"YulFunctionCall","src":"37896:47:27"},"nodeType":"YulExpressionStatement","src":"37896:47:27"},{"nodeType":"YulAssignment","src":"37952:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38086:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37960:124:27"},"nodeType":"YulFunctionCall","src":"37960:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37952:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37830:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37845:4:27","type":""}],"src":"37679:419:27"},{"body":{"nodeType":"YulBlock","src":"38275:248:27","statements":[{"nodeType":"YulAssignment","src":"38285:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38297:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38308:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38293:3:27"},"nodeType":"YulFunctionCall","src":"38293:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38285:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38332:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38343:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38328:3:27"},"nodeType":"YulFunctionCall","src":"38328:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38351:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38357:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38347:3:27"},"nodeType":"YulFunctionCall","src":"38347:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38321:6:27"},"nodeType":"YulFunctionCall","src":"38321:47:27"},"nodeType":"YulExpressionStatement","src":"38321:47:27"},{"nodeType":"YulAssignment","src":"38377:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38511:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38385:124:27"},"nodeType":"YulFunctionCall","src":"38385:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38377:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38255:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38270:4:27","type":""}],"src":"38104:419:27"},{"body":{"nodeType":"YulBlock","src":"38700:248:27","statements":[{"nodeType":"YulAssignment","src":"38710:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38722:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38733:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38718:3:27"},"nodeType":"YulFunctionCall","src":"38718:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38710:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38768:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38753:3:27"},"nodeType":"YulFunctionCall","src":"38753:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38776:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38782:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38772:3:27"},"nodeType":"YulFunctionCall","src":"38772:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38746:6:27"},"nodeType":"YulFunctionCall","src":"38746:47:27"},"nodeType":"YulExpressionStatement","src":"38746:47:27"},{"nodeType":"YulAssignment","src":"38802:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38936:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38810:124:27"},"nodeType":"YulFunctionCall","src":"38810:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38802:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38680:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38695:4:27","type":""}],"src":"38529:419:27"},{"body":{"nodeType":"YulBlock","src":"39125:248:27","statements":[{"nodeType":"YulAssignment","src":"39135:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39147:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39158:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39143:3:27"},"nodeType":"YulFunctionCall","src":"39143:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39135:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39182:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39193:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39178:3:27"},"nodeType":"YulFunctionCall","src":"39178:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39201:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"39207:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39197:3:27"},"nodeType":"YulFunctionCall","src":"39197:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39171:6:27"},"nodeType":"YulFunctionCall","src":"39171:47:27"},"nodeType":"YulExpressionStatement","src":"39171:47:27"},{"nodeType":"YulAssignment","src":"39227:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39361:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39235:124:27"},"nodeType":"YulFunctionCall","src":"39235:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39227:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39105:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39120:4:27","type":""}],"src":"38954:419:27"},{"body":{"nodeType":"YulBlock","src":"39550:248:27","statements":[{"nodeType":"YulAssignment","src":"39560:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39583:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39568:3:27"},"nodeType":"YulFunctionCall","src":"39568:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39560:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39607:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39618:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39603:3:27"},"nodeType":"YulFunctionCall","src":"39603:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39626:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"39632:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39622:3:27"},"nodeType":"YulFunctionCall","src":"39622:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39596:6:27"},"nodeType":"YulFunctionCall","src":"39596:47:27"},"nodeType":"YulExpressionStatement","src":"39596:47:27"},{"nodeType":"YulAssignment","src":"39652:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39786:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39660:124:27"},"nodeType":"YulFunctionCall","src":"39660:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39652:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39530:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39545:4:27","type":""}],"src":"39379:419:27"},{"body":{"nodeType":"YulBlock","src":"39975:248:27","statements":[{"nodeType":"YulAssignment","src":"39985:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39997:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40008:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39993:3:27"},"nodeType":"YulFunctionCall","src":"39993:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39985:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40032:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40043:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40028:3:27"},"nodeType":"YulFunctionCall","src":"40028:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40051:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40057:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40047:3:27"},"nodeType":"YulFunctionCall","src":"40047:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40021:6:27"},"nodeType":"YulFunctionCall","src":"40021:47:27"},"nodeType":"YulExpressionStatement","src":"40021:47:27"},{"nodeType":"YulAssignment","src":"40077:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40211:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40085:124:27"},"nodeType":"YulFunctionCall","src":"40085:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40077:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39955:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39970:4:27","type":""}],"src":"39804:419:27"},{"body":{"nodeType":"YulBlock","src":"40400:248:27","statements":[{"nodeType":"YulAssignment","src":"40410:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40422:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40433:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40418:3:27"},"nodeType":"YulFunctionCall","src":"40418:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40410:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40457:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40468:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40453:3:27"},"nodeType":"YulFunctionCall","src":"40453:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40476:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40482:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40472:3:27"},"nodeType":"YulFunctionCall","src":"40472:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40446:6:27"},"nodeType":"YulFunctionCall","src":"40446:47:27"},"nodeType":"YulExpressionStatement","src":"40446:47:27"},{"nodeType":"YulAssignment","src":"40502:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40636:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40510:124:27"},"nodeType":"YulFunctionCall","src":"40510:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40502:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40380:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40395:4:27","type":""}],"src":"40229:419:27"},{"body":{"nodeType":"YulBlock","src":"40825:248:27","statements":[{"nodeType":"YulAssignment","src":"40835:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40847:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40858:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40843:3:27"},"nodeType":"YulFunctionCall","src":"40843:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40835:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40882:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40893:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40878:3:27"},"nodeType":"YulFunctionCall","src":"40878:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40901:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40907:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40897:3:27"},"nodeType":"YulFunctionCall","src":"40897:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40871:6:27"},"nodeType":"YulFunctionCall","src":"40871:47:27"},"nodeType":"YulExpressionStatement","src":"40871:47:27"},{"nodeType":"YulAssignment","src":"40927:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41061:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40935:124:27"},"nodeType":"YulFunctionCall","src":"40935:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40927:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40805:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40820:4:27","type":""}],"src":"40654:419:27"},{"body":{"nodeType":"YulBlock","src":"41177:124:27","statements":[{"nodeType":"YulAssignment","src":"41187:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41199:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41210:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41195:3:27"},"nodeType":"YulFunctionCall","src":"41195:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41187:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41267:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41280:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41291:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41276:3:27"},"nodeType":"YulFunctionCall","src":"41276:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41223:43:27"},"nodeType":"YulFunctionCall","src":"41223:71:27"},"nodeType":"YulExpressionStatement","src":"41223:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41149:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41161:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41172:4:27","type":""}],"src":"41079:222:27"},{"body":{"nodeType":"YulBlock","src":"41433:206:27","statements":[{"nodeType":"YulAssignment","src":"41443:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41455:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41466:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41451:3:27"},"nodeType":"YulFunctionCall","src":"41451:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41443:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41523:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41536:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41547:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41532:3:27"},"nodeType":"YulFunctionCall","src":"41532:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41479:43:27"},"nodeType":"YulFunctionCall","src":"41479:71:27"},"nodeType":"YulExpressionStatement","src":"41479:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41604:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41617:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41628:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41613:3:27"},"nodeType":"YulFunctionCall","src":"41613:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41560:43:27"},"nodeType":"YulFunctionCall","src":"41560:72:27"},"nodeType":"YulExpressionStatement","src":"41560:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41397:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41409:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41417:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41428:4:27","type":""}],"src":"41307:332:27"},{"body":{"nodeType":"YulBlock","src":"41686:88:27","statements":[{"nodeType":"YulAssignment","src":"41696:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"41706:18:27"},"nodeType":"YulFunctionCall","src":"41706:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41696:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41755:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"41763:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"41735:19:27"},"nodeType":"YulFunctionCall","src":"41735:33:27"},"nodeType":"YulExpressionStatement","src":"41735:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"41670:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"41679:6:27","type":""}],"src":"41645:129:27"},{"body":{"nodeType":"YulBlock","src":"41820:35:27","statements":[{"nodeType":"YulAssignment","src":"41830:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41846:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41840:5:27"},"nodeType":"YulFunctionCall","src":"41840:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41830:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"41813:6:27","type":""}],"src":"41780:75:27"},{"body":{"nodeType":"YulBlock","src":"41927:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"42032:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"42034:16:27"},"nodeType":"YulFunctionCall","src":"42034:18:27"},"nodeType":"YulExpressionStatement","src":"42034:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42004:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42012:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42001:2:27"},"nodeType":"YulFunctionCall","src":"42001:30:27"},"nodeType":"YulIf","src":"41998:2:27"},{"nodeType":"YulAssignment","src":"42064:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42094:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"42072:21:27"},"nodeType":"YulFunctionCall","src":"42072:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"42064:4:27"}]},{"nodeType":"YulAssignment","src":"42138:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"42150:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"42156:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42146:3:27"},"nodeType":"YulFunctionCall","src":"42146:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"42138:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"41911:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"41922:4:27","type":""}],"src":"41861:307:27"},{"body":{"nodeType":"YulBlock","src":"42241:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"42346:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"42348:16:27"},"nodeType":"YulFunctionCall","src":"42348:18:27"},"nodeType":"YulExpressionStatement","src":"42348:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42318:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42326:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42315:2:27"},"nodeType":"YulFunctionCall","src":"42315:30:27"},"nodeType":"YulIf","src":"42312:2:27"},{"nodeType":"YulAssignment","src":"42378:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42408:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"42386:21:27"},"nodeType":"YulFunctionCall","src":"42386:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"42378:4:27"}]},{"nodeType":"YulAssignment","src":"42452:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"42464:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"42470:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42460:3:27"},"nodeType":"YulFunctionCall","src":"42460:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"42452:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"42225:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"42236:4:27","type":""}],"src":"42174:308:27"},{"body":{"nodeType":"YulBlock","src":"42546:40:27","statements":[{"nodeType":"YulAssignment","src":"42557:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42573:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42567:5:27"},"nodeType":"YulFunctionCall","src":"42567:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42557:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42529:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42539:6:27","type":""}],"src":"42488:98:27"},{"body":{"nodeType":"YulBlock","src":"42651:40:27","statements":[{"nodeType":"YulAssignment","src":"42662:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42678:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42672:5:27"},"nodeType":"YulFunctionCall","src":"42672:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42662:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42634:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42644:6:27","type":""}],"src":"42592:99:27"},{"body":{"nodeType":"YulBlock","src":"42792:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42809:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"42814:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42802:6:27"},"nodeType":"YulFunctionCall","src":"42802:19:27"},"nodeType":"YulExpressionStatement","src":"42802:19:27"},{"nodeType":"YulAssignment","src":"42830:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42849:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"42854:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42845:3:27"},"nodeType":"YulFunctionCall","src":"42845:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"42830:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42764:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"42769:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"42780:11:27","type":""}],"src":"42697:168:27"},{"body":{"nodeType":"YulBlock","src":"42967:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42984:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"42989:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42977:6:27"},"nodeType":"YulFunctionCall","src":"42977:19:27"},"nodeType":"YulExpressionStatement","src":"42977:19:27"},{"nodeType":"YulAssignment","src":"43005:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43024:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"43029:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43020:3:27"},"nodeType":"YulFunctionCall","src":"43020:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"43005:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42939:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"42944:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"42955:11:27","type":""}],"src":"42871:169:27"},{"body":{"nodeType":"YulBlock","src":"43160:34:27","statements":[{"nodeType":"YulAssignment","src":"43170:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"43185:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"43170:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43132:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"43137:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"43148:11:27","type":""}],"src":"43046:148:27"},{"body":{"nodeType":"YulBlock","src":"43244:261:27","statements":[{"nodeType":"YulAssignment","src":"43254:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43277:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43259:17:27"},"nodeType":"YulFunctionCall","src":"43259:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43254:1:27"}]},{"nodeType":"YulAssignment","src":"43288:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43311:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43293:17:27"},"nodeType":"YulFunctionCall","src":"43293:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43288:1:27"}]},{"body":{"nodeType":"YulBlock","src":"43451:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43453:16:27"},"nodeType":"YulFunctionCall","src":"43453:18:27"},"nodeType":"YulExpressionStatement","src":"43453:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43372:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43379:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"43447:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43375:3:27"},"nodeType":"YulFunctionCall","src":"43375:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43369:2:27"},"nodeType":"YulFunctionCall","src":"43369:81:27"},"nodeType":"YulIf","src":"43366:2:27"},{"nodeType":"YulAssignment","src":"43483:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43494:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"43497:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43490:3:27"},"nodeType":"YulFunctionCall","src":"43490:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"43483:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43231:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"43234:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"43240:3:27","type":""}],"src":"43200:305:27"},{"body":{"nodeType":"YulBlock","src":"43553:143:27","statements":[{"nodeType":"YulAssignment","src":"43563:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43586:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43568:17:27"},"nodeType":"YulFunctionCall","src":"43568:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43563:1:27"}]},{"nodeType":"YulAssignment","src":"43597:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43620:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43602:17:27"},"nodeType":"YulFunctionCall","src":"43602:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43597:1:27"}]},{"body":{"nodeType":"YulBlock","src":"43644:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43646:16:27"},"nodeType":"YulFunctionCall","src":"43646:18:27"},"nodeType":"YulExpressionStatement","src":"43646:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43641:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43634:6:27"},"nodeType":"YulFunctionCall","src":"43634:9:27"},"nodeType":"YulIf","src":"43631:2:27"},{"nodeType":"YulAssignment","src":"43676:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43685:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"43688:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43681:3:27"},"nodeType":"YulFunctionCall","src":"43681:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43676:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43542:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"43545:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43551:1:27","type":""}],"src":"43511:185:27"},{"body":{"nodeType":"YulBlock","src":"43750:300:27","statements":[{"nodeType":"YulAssignment","src":"43760:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43783:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43765:17:27"},"nodeType":"YulFunctionCall","src":"43765:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43760:1:27"}]},{"nodeType":"YulAssignment","src":"43794:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43817:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43799:17:27"},"nodeType":"YulFunctionCall","src":"43799:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43794:1:27"}]},{"body":{"nodeType":"YulBlock","src":"43992:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43994:16:27"},"nodeType":"YulFunctionCall","src":"43994:18:27"},"nodeType":"YulExpressionStatement","src":"43994:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43904:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43897:6:27"},"nodeType":"YulFunctionCall","src":"43897:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43890:6:27"},"nodeType":"YulFunctionCall","src":"43890:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43912:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43919:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"43987:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43915:3:27"},"nodeType":"YulFunctionCall","src":"43915:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43909:2:27"},"nodeType":"YulFunctionCall","src":"43909:81:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43886:3:27"},"nodeType":"YulFunctionCall","src":"43886:105:27"},"nodeType":"YulIf","src":"43883:2:27"},{"nodeType":"YulAssignment","src":"44024:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44039:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"44042:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44035:3:27"},"nodeType":"YulFunctionCall","src":"44035:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"44024:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43733:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"43736:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"43742:7:27","type":""}],"src":"43702:348:27"},{"body":{"nodeType":"YulBlock","src":"44101:146:27","statements":[{"nodeType":"YulAssignment","src":"44111:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44134:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44116:17:27"},"nodeType":"YulFunctionCall","src":"44116:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"44111:1:27"}]},{"nodeType":"YulAssignment","src":"44145:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44168:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44150:17:27"},"nodeType":"YulFunctionCall","src":"44150:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"44145:1:27"}]},{"body":{"nodeType":"YulBlock","src":"44192:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44194:16:27"},"nodeType":"YulFunctionCall","src":"44194:18:27"},"nodeType":"YulExpressionStatement","src":"44194:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44186:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"44189:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"44183:2:27"},"nodeType":"YulFunctionCall","src":"44183:8:27"},"nodeType":"YulIf","src":"44180:2:27"},{"nodeType":"YulAssignment","src":"44224:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44236:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"44239:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44232:3:27"},"nodeType":"YulFunctionCall","src":"44232:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"44224:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44087:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"44090:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"44096:4:27","type":""}],"src":"44056:191:27"},{"body":{"nodeType":"YulBlock","src":"44298:51:27","statements":[{"nodeType":"YulAssignment","src":"44308:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44337:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"44319:17:27"},"nodeType":"YulFunctionCall","src":"44319:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44308:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44280:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44290:7:27","type":""}],"src":"44253:96:27"},{"body":{"nodeType":"YulBlock","src":"44397:48:27","statements":[{"nodeType":"YulAssignment","src":"44407:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44432:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44425:6:27"},"nodeType":"YulFunctionCall","src":"44425:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44418:6:27"},"nodeType":"YulFunctionCall","src":"44418:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44407:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44379:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44389:7:27","type":""}],"src":"44355:90:27"},{"body":{"nodeType":"YulBlock","src":"44496:32:27","statements":[{"nodeType":"YulAssignment","src":"44506:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"44517:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44506:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44478:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44488:7:27","type":""}],"src":"44451:77:27"},{"body":{"nodeType":"YulBlock","src":"44578:105:27","statements":[{"nodeType":"YulAssignment","src":"44588:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44603:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"44610:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44599:3:27"},"nodeType":"YulFunctionCall","src":"44599:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44588:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44560:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44570:7:27","type":""}],"src":"44534:149:27"},{"body":{"nodeType":"YulBlock","src":"44734:81:27","statements":[{"nodeType":"YulAssignment","src":"44744:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44759:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"44766:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44755:3:27"},"nodeType":"YulFunctionCall","src":"44755:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44744:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44716:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44726:7:27","type":""}],"src":"44689:126:27"},{"body":{"nodeType":"YulBlock","src":"44866:32:27","statements":[{"nodeType":"YulAssignment","src":"44876:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"44887:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44876:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44848:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44858:7:27","type":""}],"src":"44821:77:27"},{"body":{"nodeType":"YulBlock","src":"44947:43:27","statements":[{"nodeType":"YulAssignment","src":"44957:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44972:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"44979:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44968:3:27"},"nodeType":"YulFunctionCall","src":"44968:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"44957:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44929:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44939:7:27","type":""}],"src":"44904:86:27"},{"body":{"nodeType":"YulBlock","src":"45047:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"45070:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"45075:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"45080:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"45057:12:27"},"nodeType":"YulFunctionCall","src":"45057:30:27"},"nodeType":"YulExpressionStatement","src":"45057:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"45128:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"45133:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45124:3:27"},"nodeType":"YulFunctionCall","src":"45124:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"45142:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45117:6:27"},"nodeType":"YulFunctionCall","src":"45117:27:27"},"nodeType":"YulExpressionStatement","src":"45117:27:27"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"45029:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"45034:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"45039:6:27","type":""}],"src":"44996:154:27"},{"body":{"nodeType":"YulBlock","src":"45205:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"45215:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"45224:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"45219:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"45284:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"45309:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"45314:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45305:3:27"},"nodeType":"YulFunctionCall","src":"45305:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"45328:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"45333:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45324:3:27"},"nodeType":"YulFunctionCall","src":"45324:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45318:5:27"},"nodeType":"YulFunctionCall","src":"45318:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45298:6:27"},"nodeType":"YulFunctionCall","src":"45298:39:27"},"nodeType":"YulExpressionStatement","src":"45298:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"45245:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"45248:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45242:2:27"},"nodeType":"YulFunctionCall","src":"45242:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"45256:19:27","statements":[{"nodeType":"YulAssignment","src":"45258:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"45267:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"45270:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45263:3:27"},"nodeType":"YulFunctionCall","src":"45263:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"45258:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"45238:3:27","statements":[]},"src":"45234:113:27"},{"body":{"nodeType":"YulBlock","src":"45381:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"45431:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"45436:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45427:3:27"},"nodeType":"YulFunctionCall","src":"45427:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"45445:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45420:6:27"},"nodeType":"YulFunctionCall","src":"45420:27:27"},"nodeType":"YulExpressionStatement","src":"45420:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"45362:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"45365:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45359:2:27"},"nodeType":"YulFunctionCall","src":"45359:13:27"},"nodeType":"YulIf","src":"45356:2:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"45187:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"45192:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"45197:6:27","type":""}],"src":"45156:307:27"},{"body":{"nodeType":"YulBlock","src":"45512:128:27","statements":[{"nodeType":"YulAssignment","src":"45522:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45549:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45531:17:27"},"nodeType":"YulFunctionCall","src":"45531:24:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45522:5:27"}]},{"body":{"nodeType":"YulBlock","src":"45583:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"45585:16:27"},"nodeType":"YulFunctionCall","src":"45585:18:27"},"nodeType":"YulExpressionStatement","src":"45585:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45570:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"45577:4:27","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"45567:2:27"},"nodeType":"YulFunctionCall","src":"45567:15:27"},"nodeType":"YulIf","src":"45564:2:27"},{"nodeType":"YulAssignment","src":"45614:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45625:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"45632:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45621:3:27"},"nodeType":"YulFunctionCall","src":"45621:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"45614:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45498:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"45508:3:27","type":""}],"src":"45469:171:27"},{"body":{"nodeType":"YulBlock","src":"45697:269:27","statements":[{"nodeType":"YulAssignment","src":"45707:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"45721:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"45727:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"45717:3:27"},"nodeType":"YulFunctionCall","src":"45717:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"45707:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"45738:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"45768:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"45774:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45764:3:27"},"nodeType":"YulFunctionCall","src":"45764:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"45742:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"45815:51:27","statements":[{"nodeType":"YulAssignment","src":"45829:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45843:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45851:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45839:3:27"},"nodeType":"YulFunctionCall","src":"45839:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"45829:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"45795:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"45788:6:27"},"nodeType":"YulFunctionCall","src":"45788:26:27"},"nodeType":"YulIf","src":"45785:2:27"},{"body":{"nodeType":"YulBlock","src":"45918:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"45932:16:27"},"nodeType":"YulFunctionCall","src":"45932:18:27"},"nodeType":"YulExpressionStatement","src":"45932:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"45882:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45905:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45913:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45902:2:27"},"nodeType":"YulFunctionCall","src":"45902:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"45879:2:27"},"nodeType":"YulFunctionCall","src":"45879:38:27"},"nodeType":"YulIf","src":"45876:2:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"45681:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"45690:6:27","type":""}],"src":"45646:320:27"},{"body":{"nodeType":"YulBlock","src":"46015:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"46025:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46047:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"46077:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"46055:21:27"},"nodeType":"YulFunctionCall","src":"46055:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46043:3:27"},"nodeType":"YulFunctionCall","src":"46043:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"46029:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"46194:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"46196:16:27"},"nodeType":"YulFunctionCall","src":"46196:18:27"},"nodeType":"YulExpressionStatement","src":"46196:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"46137:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"46149:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46134:2:27"},"nodeType":"YulFunctionCall","src":"46134:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"46173:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"46185:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"46170:2:27"},"nodeType":"YulFunctionCall","src":"46170:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"46131:2:27"},"nodeType":"YulFunctionCall","src":"46131:62:27"},"nodeType":"YulIf","src":"46128:2:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46232:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"46236:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46225:6:27"},"nodeType":"YulFunctionCall","src":"46225:22:27"},"nodeType":"YulExpressionStatement","src":"46225:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46001:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"46009:4:27","type":""}],"src":"45972:281:27"},{"body":{"nodeType":"YulBlock","src":"46306:32:27","statements":[{"nodeType":"YulAssignment","src":"46316:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"46327:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"46316:7:27"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46288:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"46298:7:27","type":""}],"src":"46259:79:27"},{"body":{"nodeType":"YulBlock","src":"46372:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46389:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46392:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46382:6:27"},"nodeType":"YulFunctionCall","src":"46382:88:27"},"nodeType":"YulExpressionStatement","src":"46382:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46486:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"46489:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46479:6:27"},"nodeType":"YulFunctionCall","src":"46479:15:27"},"nodeType":"YulExpressionStatement","src":"46479:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46510:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46513:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46503:6:27"},"nodeType":"YulFunctionCall","src":"46503:15:27"},"nodeType":"YulExpressionStatement","src":"46503:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"46344:180:27"},{"body":{"nodeType":"YulBlock","src":"46558:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46575:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46578:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46568:6:27"},"nodeType":"YulFunctionCall","src":"46568:88:27"},"nodeType":"YulExpressionStatement","src":"46568:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46672:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"46675:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46665:6:27"},"nodeType":"YulFunctionCall","src":"46665:15:27"},"nodeType":"YulExpressionStatement","src":"46665:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46696:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46699:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46689:6:27"},"nodeType":"YulFunctionCall","src":"46689:15:27"},"nodeType":"YulExpressionStatement","src":"46689:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"46530:180:27"},{"body":{"nodeType":"YulBlock","src":"46744:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46761:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46764:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46754:6:27"},"nodeType":"YulFunctionCall","src":"46754:88:27"},"nodeType":"YulExpressionStatement","src":"46754:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46858:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"46861:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46851:6:27"},"nodeType":"YulFunctionCall","src":"46851:15:27"},"nodeType":"YulExpressionStatement","src":"46851:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46882:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46885:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46875:6:27"},"nodeType":"YulFunctionCall","src":"46875:15:27"},"nodeType":"YulExpressionStatement","src":"46875:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"46716:180:27"},{"body":{"nodeType":"YulBlock","src":"46930:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46947:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46950:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46940:6:27"},"nodeType":"YulFunctionCall","src":"46940:88:27"},"nodeType":"YulExpressionStatement","src":"46940:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47044:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47047:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47037:6:27"},"nodeType":"YulFunctionCall","src":"47037:15:27"},"nodeType":"YulExpressionStatement","src":"47037:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47068:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47071:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47061:6:27"},"nodeType":"YulFunctionCall","src":"47061:15:27"},"nodeType":"YulExpressionStatement","src":"47061:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"46902:180:27"},{"body":{"nodeType":"YulBlock","src":"47116:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47133:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47136:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47126:6:27"},"nodeType":"YulFunctionCall","src":"47126:88:27"},"nodeType":"YulExpressionStatement","src":"47126:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47230:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47233:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47223:6:27"},"nodeType":"YulFunctionCall","src":"47223:15:27"},"nodeType":"YulExpressionStatement","src":"47223:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47254:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47257:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47247:6:27"},"nodeType":"YulFunctionCall","src":"47247:15:27"},"nodeType":"YulExpressionStatement","src":"47247:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"47088:180:27"},{"body":{"nodeType":"YulBlock","src":"47302:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47319:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47322:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47312:6:27"},"nodeType":"YulFunctionCall","src":"47312:88:27"},"nodeType":"YulExpressionStatement","src":"47312:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47416:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47419:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47409:6:27"},"nodeType":"YulFunctionCall","src":"47409:15:27"},"nodeType":"YulExpressionStatement","src":"47409:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47443:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47433:6:27"},"nodeType":"YulFunctionCall","src":"47433:15:27"},"nodeType":"YulExpressionStatement","src":"47433:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"47274:180:27"},{"body":{"nodeType":"YulBlock","src":"47488:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47505:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47508:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47498:6:27"},"nodeType":"YulFunctionCall","src":"47498:88:27"},"nodeType":"YulExpressionStatement","src":"47498:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47602:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47605:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47595:6:27"},"nodeType":"YulFunctionCall","src":"47595:15:27"},"nodeType":"YulExpressionStatement","src":"47595:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47626:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47629:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47619:6:27"},"nodeType":"YulFunctionCall","src":"47619:15:27"},"nodeType":"YulExpressionStatement","src":"47619:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"47460:180:27"},{"body":{"nodeType":"YulBlock","src":"47735:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47752:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47755:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47745:6:27"},"nodeType":"YulFunctionCall","src":"47745:12:27"},"nodeType":"YulExpressionStatement","src":"47745:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"47646:117:27"},{"body":{"nodeType":"YulBlock","src":"47858:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47875:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47878:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47868:6:27"},"nodeType":"YulFunctionCall","src":"47868:12:27"},"nodeType":"YulExpressionStatement","src":"47868:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"47769:117:27"},{"body":{"nodeType":"YulBlock","src":"47981:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47998:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48001:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47991:6:27"},"nodeType":"YulFunctionCall","src":"47991:12:27"},"nodeType":"YulExpressionStatement","src":"47991:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"47892:117:27"},{"body":{"nodeType":"YulBlock","src":"48104:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48121:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48124:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"48114:6:27"},"nodeType":"YulFunctionCall","src":"48114:12:27"},"nodeType":"YulExpressionStatement","src":"48114:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"48015:117:27"},{"body":{"nodeType":"YulBlock","src":"48186:54:27","statements":[{"nodeType":"YulAssignment","src":"48196:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48214:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"48221:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48210:3:27"},"nodeType":"YulFunctionCall","src":"48210:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48230:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"48226:3:27"},"nodeType":"YulFunctionCall","src":"48226:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48206:3:27"},"nodeType":"YulFunctionCall","src":"48206:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"48196:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48169:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"48179:6:27","type":""}],"src":"48138:102:27"},{"body":{"nodeType":"YulBlock","src":"48352:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48374:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48382:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48370:3:27"},"nodeType":"YulFunctionCall","src":"48370:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"48386:26:27","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48363:6:27"},"nodeType":"YulFunctionCall","src":"48363:50:27"},"nodeType":"YulExpressionStatement","src":"48363:50:27"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48344:6:27","type":""}],"src":"48246:174:27"},{"body":{"nodeType":"YulBlock","src":"48532:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48554:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48562:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48550:3:27"},"nodeType":"YulFunctionCall","src":"48550:14:27"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"48566:34:27","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48543:6:27"},"nodeType":"YulFunctionCall","src":"48543:58:27"},"nodeType":"YulExpressionStatement","src":"48543:58:27"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48524:6:27","type":""}],"src":"48426:182:27"},{"body":{"nodeType":"YulBlock","src":"48720:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48742:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48750:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48738:3:27"},"nodeType":"YulFunctionCall","src":"48738:14:27"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"48754:34:27","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48731:6:27"},"nodeType":"YulFunctionCall","src":"48731:58:27"},"nodeType":"YulExpressionStatement","src":"48731:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48810:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48818:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48806:3:27"},"nodeType":"YulFunctionCall","src":"48806:15:27"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"48823:15:27","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48799:6:27"},"nodeType":"YulFunctionCall","src":"48799:40:27"},"nodeType":"YulExpressionStatement","src":"48799:40:27"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48712:6:27","type":""}],"src":"48614:232:27"},{"body":{"nodeType":"YulBlock","src":"48958:64:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48988:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48976:3:27"},"nodeType":"YulFunctionCall","src":"48976:14:27"},{"hexValue":"566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"48992:22:27","type":"","value":"Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48969:6:27"},"nodeType":"YulFunctionCall","src":"48969:46:27"},"nodeType":"YulExpressionStatement","src":"48969:46:27"}]},"name":"store_literal_in_memory_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48950:6:27","type":""}],"src":"48852:170:27"},{"body":{"nodeType":"YulBlock","src":"49134:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49156:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49164:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49152:3:27"},"nodeType":"YulFunctionCall","src":"49152:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"49168:33:27","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49145:6:27"},"nodeType":"YulFunctionCall","src":"49145:57:27"},"nodeType":"YulExpressionStatement","src":"49145:57:27"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49126:6:27","type":""}],"src":"49028:181:27"},{"body":{"nodeType":"YulBlock","src":"49321:124:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49343:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49351:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49339:3:27"},"nodeType":"YulFunctionCall","src":"49339:14:27"},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f75","kind":"string","nodeType":"YulLiteral","src":"49355:34:27","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49332:6:27"},"nodeType":"YulFunctionCall","src":"49332:58:27"},"nodeType":"YulExpressionStatement","src":"49332:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49411:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49419:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49407:3:27"},"nodeType":"YulFunctionCall","src":"49407:15:27"},{"hexValue":"74206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"49424:13:27","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49400:6:27"},"nodeType":"YulFunctionCall","src":"49400:38:27"},"nodeType":"YulExpressionStatement","src":"49400:38:27"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49313:6:27","type":""}],"src":"49215:230:27"},{"body":{"nodeType":"YulBlock","src":"49557:131:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49579:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49587:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49575:3:27"},"nodeType":"YulFunctionCall","src":"49575:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"49591:34:27","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49568:6:27"},"nodeType":"YulFunctionCall","src":"49568:58:27"},"nodeType":"YulExpressionStatement","src":"49568:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49647:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49655:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49643:3:27"},"nodeType":"YulFunctionCall","src":"49643:15:27"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"49660:20:27","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49636:6:27"},"nodeType":"YulFunctionCall","src":"49636:45:27"},"nodeType":"YulExpressionStatement","src":"49636:45:27"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49549:6:27","type":""}],"src":"49451:237:27"},{"body":{"nodeType":"YulBlock","src":"49800:62:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49822:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49818:3:27"},"nodeType":"YulFunctionCall","src":"49818:14:27"},{"hexValue":"43616c6c65722063616e6e6f74206275726e","kind":"string","nodeType":"YulLiteral","src":"49834:20:27","type":"","value":"Caller cannot burn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49811:6:27"},"nodeType":"YulFunctionCall","src":"49811:44:27"},"nodeType":"YulExpressionStatement","src":"49811:44:27"}]},"name":"store_literal_in_memory_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49792:6:27","type":""}],"src":"49694:168:27"},{"body":{"nodeType":"YulBlock","src":"49974:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49996:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50004:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49992:3:27"},"nodeType":"YulFunctionCall","src":"49992:14:27"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"50008:34:27","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49985:6:27"},"nodeType":"YulFunctionCall","src":"49985:58:27"},"nodeType":"YulExpressionStatement","src":"49985:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50064:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50072:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50060:3:27"},"nodeType":"YulFunctionCall","src":"50060:15:27"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"50077:7:27","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50053:6:27"},"nodeType":"YulFunctionCall","src":"50053:32:27"},"nodeType":"YulExpressionStatement","src":"50053:32:27"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49966:6:27","type":""}],"src":"49868:224:27"},{"body":{"nodeType":"YulBlock","src":"50204:72:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50226:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50234:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50222:3:27"},"nodeType":"YulFunctionCall","src":"50222:14:27"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"50238:30:27","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50215:6:27"},"nodeType":"YulFunctionCall","src":"50215:54:27"},"nodeType":"YulExpressionStatement","src":"50215:54:27"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50196:6:27","type":""}],"src":"50098:178:27"},{"body":{"nodeType":"YulBlock","src":"50388:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50410:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50418:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50406:3:27"},"nodeType":"YulFunctionCall","src":"50406:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"50422:66:27","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50399:6:27"},"nodeType":"YulFunctionCall","src":"50399:90:27"},"nodeType":"YulExpressionStatement","src":"50399:90:27"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50380:6:27","type":""}],"src":"50282:214:27"},{"body":{"nodeType":"YulBlock","src":"50608:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50630:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50638:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50626:3:27"},"nodeType":"YulFunctionCall","src":"50626:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"50642:34:27","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50619:6:27"},"nodeType":"YulFunctionCall","src":"50619:58:27"},"nodeType":"YulExpressionStatement","src":"50619:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50698:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50706:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50694:3:27"},"nodeType":"YulFunctionCall","src":"50694:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"50711:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50687:6:27"},"nodeType":"YulFunctionCall","src":"50687:31:27"},"nodeType":"YulExpressionStatement","src":"50687:31:27"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50600:6:27","type":""}],"src":"50502:223:27"},{"body":{"nodeType":"YulBlock","src":"50837:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50859:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50867:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50855:3:27"},"nodeType":"YulFunctionCall","src":"50855:14:27"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"50871:27:27","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50848:6:27"},"nodeType":"YulFunctionCall","src":"50848:51:27"},"nodeType":"YulExpressionStatement","src":"50848:51:27"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50829:6:27","type":""}],"src":"50731:175:27"},{"body":{"nodeType":"YulBlock","src":"51018:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51040:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51048:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51036:3:27"},"nodeType":"YulFunctionCall","src":"51036:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"51052:34:27","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51029:6:27"},"nodeType":"YulFunctionCall","src":"51029:58:27"},"nodeType":"YulExpressionStatement","src":"51029:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51108:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51116:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51104:3:27"},"nodeType":"YulFunctionCall","src":"51104:15:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"51121:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51097:6:27"},"nodeType":"YulFunctionCall","src":"51097:29:27"},"nodeType":"YulExpressionStatement","src":"51097:29:27"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51010:6:27","type":""}],"src":"50912:221:27"},{"body":{"nodeType":"YulBlock","src":"51245:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51267:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51275:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51263:3:27"},"nodeType":"YulFunctionCall","src":"51263:14:27"},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"51279:34:27","type":"","value":"Checkpoints: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51256:6:27"},"nodeType":"YulFunctionCall","src":"51256:58:27"},"nodeType":"YulExpressionStatement","src":"51256:58:27"}]},"name":"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51237:6:27","type":""}],"src":"51139:182:27"},{"body":{"nodeType":"YulBlock","src":"51433:122:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51455:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51463:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51451:3:27"},"nodeType":"YulFunctionCall","src":"51451:14:27"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"51467:34:27","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51444:6:27"},"nodeType":"YulFunctionCall","src":"51444:58:27"},"nodeType":"YulExpressionStatement","src":"51444:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51523:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51531:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51519:3:27"},"nodeType":"YulFunctionCall","src":"51519:15:27"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"51536:11:27","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51512:6:27"},"nodeType":"YulFunctionCall","src":"51512:36:27"},"nodeType":"YulExpressionStatement","src":"51512:36:27"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51425:6:27","type":""}],"src":"51327:228:27"},{"body":{"nodeType":"YulBlock","src":"51667:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51689:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51697:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51685:3:27"},"nodeType":"YulFunctionCall","src":"51685:14:27"},{"hexValue":"566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"51701:26:27","type":"","value":"Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51678:6:27"},"nodeType":"YulFunctionCall","src":"51678:50:27"},"nodeType":"YulExpressionStatement","src":"51678:50:27"}]},"name":"store_literal_in_memory_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51659:6:27","type":""}],"src":"51561:174:27"},{"body":{"nodeType":"YulBlock","src":"51847:59:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51869:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51877:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51865:3:27"},"nodeType":"YulFunctionCall","src":"51865:14:27"},{"hexValue":"596f75206f776e206120746f6b656e","kind":"string","nodeType":"YulLiteral","src":"51881:17:27","type":"","value":"You own a token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51858:6:27"},"nodeType":"YulFunctionCall","src":"51858:41:27"},"nodeType":"YulExpressionStatement","src":"51858:41:27"}]},"name":"store_literal_in_memory_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51839:6:27","type":""}],"src":"51741:165:27"},{"body":{"nodeType":"YulBlock","src":"52018:70:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52040:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52048:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52036:3:27"},"nodeType":"YulFunctionCall","src":"52036:14:27"},{"hexValue":"566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"52052:28:27","type":"","value":"Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52029:6:27"},"nodeType":"YulFunctionCall","src":"52029:52:27"},"nodeType":"YulExpressionStatement","src":"52029:52:27"}]},"name":"store_literal_in_memory_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52010:6:27","type":""}],"src":"51912:176:27"},{"body":{"nodeType":"YulBlock","src":"52200:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52222:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52230:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52218:3:27"},"nodeType":"YulFunctionCall","src":"52218:14:27"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"52234:34:27","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52211:6:27"},"nodeType":"YulFunctionCall","src":"52211:58:27"},"nodeType":"YulExpressionStatement","src":"52211:58:27"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52192:6:27","type":""}],"src":"52094:182:27"},{"body":{"nodeType":"YulBlock","src":"52388:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52410:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52418:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52406:3:27"},"nodeType":"YulFunctionCall","src":"52406:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"52422:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52399:6:27"},"nodeType":"YulFunctionCall","src":"52399:58:27"},"nodeType":"YulExpressionStatement","src":"52399:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52478:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52486:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52474:3:27"},"nodeType":"YulFunctionCall","src":"52474:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"52491:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52467:6:27"},"nodeType":"YulFunctionCall","src":"52467:34:27"},"nodeType":"YulExpressionStatement","src":"52467:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52380:6:27","type":""}],"src":"52282:226:27"},{"body":{"nodeType":"YulBlock","src":"52620:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52642:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52650:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52638:3:27"},"nodeType":"YulFunctionCall","src":"52638:14:27"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"52654:26:27","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52631:6:27"},"nodeType":"YulFunctionCall","src":"52631:50:27"},"nodeType":"YulExpressionStatement","src":"52631:50:27"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52612:6:27","type":""}],"src":"52514:174:27"},{"body":{"nodeType":"YulBlock","src":"52800:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52822:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52818:3:27"},"nodeType":"YulFunctionCall","src":"52818:14:27"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"52834:34:27","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52811:6:27"},"nodeType":"YulFunctionCall","src":"52811:58:27"},"nodeType":"YulExpressionStatement","src":"52811:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52890:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52898:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52886:3:27"},"nodeType":"YulFunctionCall","src":"52886:15:27"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"52903:3:27","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52879:6:27"},"nodeType":"YulFunctionCall","src":"52879:28:27"},"nodeType":"YulExpressionStatement","src":"52879:28:27"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52792:6:27","type":""}],"src":"52694:220:27"},{"body":{"nodeType":"YulBlock","src":"53026:67:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53048:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53056:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53044:3:27"},"nodeType":"YulFunctionCall","src":"53044:14:27"},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","kind":"string","nodeType":"YulLiteral","src":"53060:25:27","type":"","value":"Checkpoint: invalid key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53037:6:27"},"nodeType":"YulFunctionCall","src":"53037:49:27"},"nodeType":"YulExpressionStatement","src":"53037:49:27"}]},"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53018:6:27","type":""}],"src":"52920:173:27"},{"body":{"nodeType":"YulBlock","src":"53205:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53227:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53235:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53223:3:27"},"nodeType":"YulFunctionCall","src":"53223:14:27"},{"hexValue":"5472616e7366657220697320424c4f434b4544","kind":"string","nodeType":"YulLiteral","src":"53239:21:27","type":"","value":"Transfer is BLOCKED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53216:6:27"},"nodeType":"YulFunctionCall","src":"53216:45:27"},"nodeType":"YulExpressionStatement","src":"53216:45:27"}]},"name":"store_literal_in_memory_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53197:6:27","type":""}],"src":"53099:169:27"},{"body":{"nodeType":"YulBlock","src":"53380:142:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53402:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53410:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53398:3:27"},"nodeType":"YulFunctionCall","src":"53398:14:27"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"53414:34:27","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53391:6:27"},"nodeType":"YulFunctionCall","src":"53391:58:27"},"nodeType":"YulExpressionStatement","src":"53391:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53470:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53478:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53466:3:27"},"nodeType":"YulFunctionCall","src":"53466:15:27"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"53483:31:27","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53459:6:27"},"nodeType":"YulFunctionCall","src":"53459:56:27"},"nodeType":"YulExpressionStatement","src":"53459:56:27"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53372:6:27","type":""}],"src":"53274:248:27"},{"body":{"nodeType":"YulBlock","src":"53634:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53656:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53664:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53652:3:27"},"nodeType":"YulFunctionCall","src":"53652:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"53668:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53645:6:27"},"nodeType":"YulFunctionCall","src":"53645:58:27"},"nodeType":"YulExpressionStatement","src":"53645:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53724:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53732:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53720:3:27"},"nodeType":"YulFunctionCall","src":"53720:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"53737:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53713:6:27"},"nodeType":"YulFunctionCall","src":"53713:33:27"},"nodeType":"YulExpressionStatement","src":"53713:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53626:6:27","type":""}],"src":"53528:225:27"},{"body":{"nodeType":"YulBlock","src":"53865:125:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53887:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53895:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53883:3:27"},"nodeType":"YulFunctionCall","src":"53883:14:27"},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f","kind":"string","nodeType":"YulLiteral","src":"53899:34:27","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53876:6:27"},"nodeType":"YulFunctionCall","src":"53876:58:27"},"nodeType":"YulExpressionStatement","src":"53876:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53955:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53963:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53951:3:27"},"nodeType":"YulFunctionCall","src":"53951:15:27"},{"hexValue":"7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"53968:14:27","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53944:6:27"},"nodeType":"YulFunctionCall","src":"53944:39:27"},"nodeType":"YulExpressionStatement","src":"53944:39:27"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53857:6:27","type":""}],"src":"53759:231:27"},{"body":{"nodeType":"YulBlock","src":"54102:67:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54124:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54132:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54120:3:27"},"nodeType":"YulFunctionCall","src":"54120:14:27"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"54136:25:27","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54113:6:27"},"nodeType":"YulFunctionCall","src":"54113:49:27"},"nodeType":"YulExpressionStatement","src":"54113:49:27"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54094:6:27","type":""}],"src":"53996:173:27"},{"body":{"nodeType":"YulBlock","src":"54281:134:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54303:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54311:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54299:3:27"},"nodeType":"YulFunctionCall","src":"54299:14:27"},{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472","kind":"string","nodeType":"YulLiteral","src":"54315:34:27","type":"","value":"ERC721Enumerable: consecutive tr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54292:6:27"},"nodeType":"YulFunctionCall","src":"54292:58:27"},"nodeType":"YulExpressionStatement","src":"54292:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54371:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54379:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54367:3:27"},"nodeType":"YulFunctionCall","src":"54367:15:27"},{"hexValue":"616e7366657273206e6f7420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"54384:23:27","type":"","value":"ansfers not supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54360:6:27"},"nodeType":"YulFunctionCall","src":"54360:48:27"},"nodeType":"YulExpressionStatement","src":"54360:48:27"}]},"name":"store_literal_in_memory_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54273:6:27","type":""}],"src":"54175:240:27"},{"body":{"nodeType":"YulBlock","src":"54527:61:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54549:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54557:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54545:3:27"},"nodeType":"YulFunctionCall","src":"54545:14:27"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"54561:19:27","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54538:6:27"},"nodeType":"YulFunctionCall","src":"54538:43:27"},"nodeType":"YulExpressionStatement","src":"54538:43:27"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54519:6:27","type":""}],"src":"54421:167:27"},{"body":{"nodeType":"YulBlock","src":"54700:128:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54722:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54730:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54718:3:27"},"nodeType":"YulFunctionCall","src":"54718:14:27"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"54734:34:27","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54711:6:27"},"nodeType":"YulFunctionCall","src":"54711:58:27"},"nodeType":"YulExpressionStatement","src":"54711:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54790:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54798:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54786:3:27"},"nodeType":"YulFunctionCall","src":"54786:15:27"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"54803:17:27","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54779:6:27"},"nodeType":"YulFunctionCall","src":"54779:42:27"},"nodeType":"YulExpressionStatement","src":"54779:42:27"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54692:6:27","type":""}],"src":"54594:234:27"},{"body":{"nodeType":"YulBlock","src":"54877:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"54934:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54943:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"54946:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"54936:6:27"},"nodeType":"YulFunctionCall","src":"54936:12:27"},"nodeType":"YulExpressionStatement","src":"54936:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54900:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54925:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"54907:17:27"},"nodeType":"YulFunctionCall","src":"54907:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"54897:2:27"},"nodeType":"YulFunctionCall","src":"54897:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"54890:6:27"},"nodeType":"YulFunctionCall","src":"54890:43:27"},"nodeType":"YulIf","src":"54887:2:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54870:5:27","type":""}],"src":"54834:122:27"},{"body":{"nodeType":"YulBlock","src":"55002:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"55056:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55065:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55068:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55058:6:27"},"nodeType":"YulFunctionCall","src":"55058:12:27"},"nodeType":"YulExpressionStatement","src":"55058:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55025:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55047:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"55032:14:27"},"nodeType":"YulFunctionCall","src":"55032:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55022:2:27"},"nodeType":"YulFunctionCall","src":"55022:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55015:6:27"},"nodeType":"YulFunctionCall","src":"55015:40:27"},"nodeType":"YulIf","src":"55012:2:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54995:5:27","type":""}],"src":"54962:116:27"},{"body":{"nodeType":"YulBlock","src":"55127:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"55184:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55193:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55196:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55186:6:27"},"nodeType":"YulFunctionCall","src":"55186:12:27"},"nodeType":"YulExpressionStatement","src":"55186:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55150:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55175:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"55157:17:27"},"nodeType":"YulFunctionCall","src":"55157:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55147:2:27"},"nodeType":"YulFunctionCall","src":"55147:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55140:6:27"},"nodeType":"YulFunctionCall","src":"55140:43:27"},"nodeType":"YulIf","src":"55137:2:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55120:5:27","type":""}],"src":"55084:122:27"},{"body":{"nodeType":"YulBlock","src":"55254:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"55310:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55319:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55322:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55312:6:27"},"nodeType":"YulFunctionCall","src":"55312:12:27"},"nodeType":"YulExpressionStatement","src":"55312:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55277:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55301:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"55284:16:27"},"nodeType":"YulFunctionCall","src":"55284:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55274:2:27"},"nodeType":"YulFunctionCall","src":"55274:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55267:6:27"},"nodeType":"YulFunctionCall","src":"55267:42:27"},"nodeType":"YulIf","src":"55264:2:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55247:5:27","type":""}],"src":"55212:120:27"},{"body":{"nodeType":"YulBlock","src":"55381:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"55438:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55447:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55450:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55440:6:27"},"nodeType":"YulFunctionCall","src":"55440:12:27"},"nodeType":"YulExpressionStatement","src":"55440:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55404:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55429:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"55411:17:27"},"nodeType":"YulFunctionCall","src":"55411:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55401:2:27"},"nodeType":"YulFunctionCall","src":"55401:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55394:6:27"},"nodeType":"YulFunctionCall","src":"55394:43:27"},"nodeType":"YulIf","src":"55391:2:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55374:5:27","type":""}],"src":"55338:122:27"},{"body":{"nodeType":"YulBlock","src":"55507:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"55562:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55571:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55574:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55564:6:27"},"nodeType":"YulFunctionCall","src":"55564:12:27"},"nodeType":"YulExpressionStatement","src":"55564:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55530:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55553:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"55537:15:27"},"nodeType":"YulFunctionCall","src":"55537:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55527:2:27"},"nodeType":"YulFunctionCall","src":"55527:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55520:6:27"},"nodeType":"YulFunctionCall","src":"55520:41:27"},"nodeType":"YulIf","src":"55517:2:27"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55500:5:27","type":""}],"src":"55466:118:27"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Votes: invalid nonce\")\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_2451a62e04f33c493ab19f074ab32e4abe5916a595c64fe4ed8f7ae7f376b0bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller cannot burn\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Checkpoints: block not yet mined\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Votes: signature expired\")\n\n    }\n\n    function store_literal_in_memory_76243920ace049d9f79a9ebef28ceac287c2b1ee0e7f380e274f3001660c2262(memPtr) {\n\n        mstore(add(memPtr, 0), \"You own a token\")\n\n    }\n\n    function store_literal_in_memory_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Votes: block not yet mined\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Checkpoint: invalid key\")\n\n    }\n\n    function store_literal_in_memory_bf4fba7fff532495c7c4c195012a59a273ddd8487614482c99fa58b927b4ae2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer is BLOCKED\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function store_literal_in_memory_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: consecutive tr\")\n\n        mstore(add(memPtr, 32), \"ansfers not supported\")\n\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4980":[{"length":32,"start":7093}],"4982":[{"length":32,"start":7052}],"4984":[{"length":32,"start":6966}],"4986":[{"length":32,"start":7169}],"4988":[{"length":32,"start":7202}],"4990":[{"length":32,"start":7136}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x762 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x77E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6C8 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x87F350B8 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x87F350B8 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x624 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x548 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x54BA0F27 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4AE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3E6 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x34C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x49E5 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x486B JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x592 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x4A3F JUMP JUMPDEST PUSH2 0xF86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x49A5 JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62C PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x482B JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x47A8 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x48AB JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74C PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x4965 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7CF SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x848 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x848 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85D DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP1 PUSH2 0x54C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x962 JUMPI POP PUSH2 0x961 DUP2 PUSH2 0x95C PUSH2 0x169A JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP1 PUSH2 0x5527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP4 DUP4 PUSH2 0x16A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x9C8 PUSH2 0x169A JUMP JUMPDEST DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x5267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA18 DUP4 DUP4 DUP4 PUSH2 0x17F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP3 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0xA59 DUP4 DUP4 PUSH2 0x1AFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 DUP4 PUSH2 0xE5A JUMP JUMPDEST DUP3 LT PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D PUSH2 0x1B32 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1A PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x55A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB91 DUP3 DUP3 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC24 PUSH1 0x0 DUP1 SHL PUSH2 0xC1F PUSH2 0x169A JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST DUP1 PUSH2 0xC3C JUMPI POP PUSH2 0xC3B PUSH2 0xC35 PUSH2 0x169A JUMP JUMPDEST DUP3 PUSH2 0x175B JUMP JUMPDEST JUMPDEST PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP1 PUSH2 0x5307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 PUSH2 0x9B0 JUMP JUMPDEST DUP3 LT PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0x5567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD24 DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x10 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A PUSH1 0x10 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 POP PUSH2 0xD46 DUP5 DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH2 0x169A JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF DUP2 DUP4 PUSH2 0x1F75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDDF DUP4 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x54A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1EFFBBFF9C66C5E59634F24FE842750C60D18891155C32DD155FC2D661A4C86D DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7F PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xF93 DUP2 PUSH2 0x1AEA JUMP JUMPDEST DUP2 PUSH1 0x11 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xFA9 SWAP3 SWAP2 SWAP1 PUSH2 0x44D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP1 PUSH2 0x5447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 DUP3 PUSH1 0xE PUSH2 0x1C80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x20C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x10B6 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10E2 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x112F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1104 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x112F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1112 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1182 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x20E0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x11B9 PUSH2 0x169A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x214A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11D5 PUSH2 0x11CF PUSH2 0x169A JUMP JUMPDEST DUP4 PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x5267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1220 DUP5 DUP5 DUP5 DUP5 PUSH2 0x22B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1260 SWAP1 PUSH2 0x5407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12CB PUSH2 0x12C3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2313 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP PUSH2 0x12D6 DUP2 PUSH2 0x2358 JUMP JUMPDEST DUP7 EQ PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130E SWAP1 PUSH2 0x5287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1321 DUP2 DUP9 PUSH2 0x1F75 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1335 DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0x1342 SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x136E SWAP1 PUSH2 0x58E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x139E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E4 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1418 DUP3 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x1421 DUP2 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x142B DUP4 DUP4 PUSH2 0x1C4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14CE DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x15A1 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1546 PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x23CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1648 JUMPI POP PUSH2 0x1647 DUP3 PUSH2 0x243B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x1697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP1 PUSH2 0x54A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1715 DUP4 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1767 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x17A9 JUMPI POP PUSH2 0x17A8 DUP2 DUP6 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17E7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17CF DUP5 PUSH2 0x852 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1810 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1866 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185D SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CD SWAP1 PUSH2 0x5367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1903 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1950 SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1AE5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AFB DUP2 PUSH2 0x1AF6 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x264D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B08 DUP3 DUP3 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x1B2D DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1BAE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1BDB JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x1C46 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1CC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBB SWAP1 PUSH2 0x53C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CCF DUP4 PUSH2 0x281E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x0 PUSH2 0x1CF7 DUP5 PUSH2 0x2871 JUMP JUMPDEST DUP5 PUSH2 0x1D02 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D11 DUP9 PUSH1 0x0 ADD DUP3 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1D40 JUMPI DUP1 SWAP2 POP PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1D4D SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP9 PUSH1 0x0 ADD DUP7 DUP6 DUP6 PUSH2 0x2980 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1DB7 JUMPI PUSH2 0x1D86 DUP9 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E00 DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1E09 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F2F DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x29F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2084 DUP2 DUP4 PUSH2 0x207F DUP7 PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2A60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D5 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2C6D JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x213F JUMPI PUSH2 0x210E DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x2109 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B0 SWAP1 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22AA SWAP2 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP5 DUP5 DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x22CE DUP5 DUP5 DUP5 DUP5 PUSH2 0x2C98 JUMP JUMPDEST PUSH2 0x230D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2304 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2326 PUSH2 0x2320 PUSH2 0x1B32 JUMP JUMPDEST DUP4 PUSH2 0x2E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x233E DUP8 DUP8 DUP8 DUP8 PUSH2 0x2E62 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x234B DUP2 PUSH2 0x2F45 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x23A5 DUP2 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B0 DUP2 PUSH2 0x1F33 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 DUP3 PUSH1 0x0 ADD PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP4 DUP4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x2430 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2435 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x24AE JUMPI POP PUSH2 0x24AD DUP3 PUSH2 0x30E7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24D7 DUP4 PUSH2 0x2089 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x255D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2593 SWAP1 PUSH2 0x5507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x25DF JUMPI POP PUSH1 0x0 PUSH2 0x25DD DUP5 PUSH2 0xE5A JUMP JUMPDEST EQ JUMPDEST PUSH2 0x261E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2615 SWAP1 PUSH2 0x5427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262A DUP5 DUP5 DUP5 DUP5 PUSH2 0x3161 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x263B DUP5 DUP5 DUP4 PUSH2 0x32C1 JUMP JUMPDEST PUSH2 0x2647 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3381 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2657 DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x26CE JUMPI PUSH2 0x2664 DUP2 PUSH2 0x339E JUMP JUMPDEST PUSH2 0x2672 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2683 SWAP3 SWAP2 SWAP1 PUSH2 0x5051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP2 SWAP1 PUSH2 0x5205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26ED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x516D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2716 DUP3 DUP3 PUSH2 0x103C JUMP JUMPDEST ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x278F PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2816 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3607 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2860 SWAP1 PUSH2 0x5547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x2884 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2891 DUP5 PUSH2 0x371B JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28AB JUMPI PUSH2 0x28AA PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C4 JUMPI PUSH2 0x28C3 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28F6 JUMPI PUSH2 0x28F5 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x290F JUMPI PUSH2 0x290E PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2928 JUMPI PUSH2 0x2927 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2941 JUMPI PUSH2 0x2940 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2962 DUP2 DUP3 DUP6 DUP2 PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x597D JUMP JUMPDEST JUMPDEST DIV PUSH2 0x37FC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x29E8 JUMPI PUSH1 0x0 PUSH2 0x2997 DUP5 DUP5 PUSH2 0x3815 JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x29AA DUP8 DUP4 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x29D2 JUMPI DUP1 SWAP3 POP PUSH2 0x29E2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x29DF SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x2983 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x29FD DUP4 DUP4 PUSH2 0x383B JUMP JUMPDEST PUSH2 0x2A0A PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2C98 JUMP JUMPDEST PUSH2 0x2A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A40 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP3 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2A9C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2C68 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B84 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B2D PUSH2 0x3A59 DUP5 PUSH1 0xD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B79 SWAP3 SWAP2 SWAP1 PUSH2 0x55E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C67 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C10 PUSH2 0x3ABB DUP5 PUSH1 0xD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C5C SWAP3 SWAP2 SWAP1 PUSH2 0x55E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB9 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AD1 JUMP JUMPDEST ISZERO PUSH2 0x2E22 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2CE2 PUSH2 0x169A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D04 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x50A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2D4F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D4C SWAP2 SWAP1 PUSH2 0x4A12 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2DD2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D7F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D84 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2DCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC1 SWAP1 PUSH2 0x52E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E44 SWAP3 SWAP2 SWAP1 PUSH2 0x501A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2E9D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2F3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2EC2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F33 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2F3C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F6C JUMPI PUSH2 0x2F6B PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2F77 JUMPI PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F8B JUMPI PUSH2 0x2F8A PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F9E JUMPI PUSH2 0x2F9D PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2FDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD6 SWAP1 PUSH2 0x5227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FF3 JUMPI PUSH2 0x2FF2 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3006 JUMPI PUSH2 0x3005 PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303E SWAP1 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305A PUSH2 0x59AC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x306E JUMPI PUSH2 0x306D PUSH2 0x59AC JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x30AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A6 SWAP1 PUSH2 0x53A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x315A JUMPI POP PUSH2 0x3159 DUP3 PUSH2 0x3AF4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316D DUP5 DUP5 DUP5 DUP5 PUSH2 0x3BD6 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A8 SWAP1 PUSH2 0x5587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F9 JUMPI PUSH2 0x31F4 DUP2 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0x3238 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3237 JUMPI PUSH2 0x3236 DUP6 DUP3 PUSH2 0x3D45 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x327B JUMPI PUSH2 0x3276 DUP2 PUSH2 0x3EB2 JUMP JUMPDEST PUSH2 0x32BA JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32B9 JUMPI PUSH2 0x32B8 DUP5 DUP3 PUSH2 0x3F83 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3311 JUMPI PUSH2 0x330E PUSH2 0x3ABB DUP3 PUSH1 0xE PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3361 JUMPI PUSH2 0x335E PUSH2 0x3A59 DUP3 PUSH1 0xE PUSH2 0x3A6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x337C PUSH2 0x336D DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x3376 DUP5 PUSH2 0xD50 JUMP JUMPDEST DUP4 PUSH2 0x2A60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x338C DUP5 DUP5 DUP4 PUSH2 0x32C1 JUMP JUMPDEST PUSH2 0x3398 DUP5 DUP5 DUP5 DUP5 PUSH2 0x4002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x33C4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x33DE SWAP2 SWAP1 PUSH2 0x575C JUMP JUMPDEST PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3401 JUMPI PUSH2 0x3400 PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3433 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x346B JUMPI PUSH2 0x346A PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x34CF JUMPI PUSH2 0x34CE PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x350F SWAP2 SWAP1 PUSH2 0x575C JUMP JUMPDEST PUSH2 0x3519 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x35B9 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x355B JUMPI PUSH2 0x355A PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3572 JUMPI PUSH2 0x3571 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x35B2 SWAP1 PUSH2 0x58B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x351C JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x35FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F4 SWAP1 PUSH2 0x5247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x370F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3639 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3651 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x36C0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3672 JUMPI PUSH2 0x3671 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3696 JUMPI PUSH2 0x3695 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x36D4 JUMPI PUSH2 0x36D3 PUSH2 0x5A0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3715 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x373D JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3758 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3773 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x378E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37A9 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37C4 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x37F3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x380B JUMPI DUP2 PUSH2 0x380D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x3826 SWAP2 SWAP1 PUSH2 0x572B JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x3833 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x38AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A2 SWAP1 PUSH2 0x5467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B4 DUP2 PUSH2 0x24B5 JUMP JUMPDEST ISZERO PUSH2 0x38F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38EB SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3902 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x390B DUP2 PUSH2 0x24B5 JUMP JUMPDEST ISZERO PUSH2 0x394B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3942 SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3A55 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A67 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AAF DUP6 PUSH2 0x3AAA PUSH2 0x3A82 DUP9 PUSH2 0x20E0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4008 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3AC9 SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BBF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3BCF JUMPI POP PUSH2 0x3BCE DUP3 PUSH2 0x4076 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3CF6 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C6A JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C62 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CF5 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3CED SWAP2 SWAP1 PUSH2 0x56D5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3D52 DUP5 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x3D5C SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3E41 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x3EC6 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EF6 JUMPI PUSH2 0x3EF5 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x5A39 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x3F67 JUMPI PUSH2 0x3F66 PUSH2 0x5A0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP4 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4029 DUP5 PUSH1 0x0 ADD PUSH2 0x401B NUMBER PUSH2 0x281E JUMP JUMPDEST PUSH2 0x4024 DUP7 PUSH2 0x40E0 JUMP JUMPDEST PUSH2 0x414B JUMP JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413A SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x43E2 JUMPI PUSH1 0x0 PUSH2 0x4178 DUP8 PUSH1 0x1 DUP5 PUSH2 0x4173 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x426C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4263 SWAP1 PUSH2 0x54E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x42F1 JUMPI DUP5 PUSH2 0x429B DUP9 PUSH1 0x1 DUP6 PUSH2 0x4296 SWAP2 SWAP1 PUSH2 0x57B6 JUMP JUMPDEST PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x43D1 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x44CA JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x44DE SWAP1 PUSH2 0x58E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4500 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4547 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4519 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4547 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4547 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4546 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x452B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4554 SWAP2 SWAP1 PUSH2 0x4558 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4571 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4559 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4588 PUSH2 0x4583 DUP5 PUSH2 0x5630 JUMP JUMPDEST PUSH2 0x560B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A3 PUSH2 0x5A9C JUMP JUMPDEST JUMPDEST PUSH2 0x45AF DUP5 DUP3 DUP6 PUSH2 0x5875 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45CA PUSH2 0x45C5 DUP5 PUSH2 0x5661 JUMP JUMPDEST PUSH2 0x560B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45E6 JUMPI PUSH2 0x45E5 PUSH2 0x5A9C JUMP JUMPDEST JUMPDEST PUSH2 0x45F1 DUP5 DUP3 DUP6 PUSH2 0x5875 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4608 DUP2 PUSH2 0x61F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x461D DUP2 PUSH2 0x6207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4632 DUP2 PUSH2 0x621E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4647 DUP2 PUSH2 0x6235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x465C DUP2 PUSH2 0x6235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4677 JUMPI PUSH2 0x4676 PUSH2 0x5A97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4687 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46A5 JUMPI PUSH2 0x46A4 PUSH2 0x5A97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46CD DUP2 PUSH2 0x624C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46E2 DUP2 PUSH2 0x6263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46FE JUMPI PUSH2 0x46FD PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x470C DUP5 DUP3 DUP6 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472B PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x473A DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x474B DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x476E JUMPI PUSH2 0x476D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477C DUP7 DUP3 DUP8 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x478D DUP7 DUP3 DUP8 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x479E DUP7 DUP3 DUP8 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x47C2 JUMPI PUSH2 0x47C1 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47D0 DUP8 DUP3 DUP9 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x47E1 DUP8 DUP3 DUP9 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x47F2 DUP8 DUP3 DUP9 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4813 JUMPI PUSH2 0x4812 PUSH2 0x5AA1 JUMP JUMPDEST JUMPDEST PUSH2 0x481F DUP8 DUP3 DUP9 ADD PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4842 JUMPI PUSH2 0x4841 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4850 DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4861 DUP6 DUP3 DUP7 ADD PUSH2 0x460E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4882 JUMPI PUSH2 0x4881 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4890 DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x48A1 DUP6 DUP3 DUP7 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x48C8 JUMPI PUSH2 0x48C7 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D6 DUP10 DUP3 DUP11 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x48E7 DUP10 DUP3 DUP11 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x48F8 DUP10 DUP3 DUP11 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4909 DUP10 DUP3 DUP11 ADD PUSH2 0x46D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x491A DUP10 DUP3 DUP11 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x492B DUP10 DUP3 DUP11 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x494E JUMPI PUSH2 0x494D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x495C DUP5 DUP3 DUP6 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497C JUMPI PUSH2 0x497B PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498A DUP6 DUP3 DUP7 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499B DUP6 DUP3 DUP7 ADD PUSH2 0x45F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49BC JUMPI PUSH2 0x49BB PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49CA DUP6 DUP3 DUP7 ADD PUSH2 0x4623 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49DB DUP6 DUP3 DUP7 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49FB JUMPI PUSH2 0x49FA PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A09 DUP5 DUP3 DUP6 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A28 JUMPI PUSH2 0x4A27 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A36 DUP5 DUP3 DUP6 ADD PUSH2 0x464D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A55 JUMPI PUSH2 0x4A54 PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A73 JUMPI PUSH2 0x4A72 PUSH2 0x5AA1 JUMP JUMPDEST JUMPDEST PUSH2 0x4A7F DUP5 DUP3 DUP6 ADD PUSH2 0x4690 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A9E JUMPI PUSH2 0x4A9D PUSH2 0x5AA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AAC DUP5 DUP3 DUP6 ADD PUSH2 0x46BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4ABE DUP2 PUSH2 0x57EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ACD DUP2 PUSH2 0x57FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ADC DUP2 PUSH2 0x5808 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AF3 PUSH2 0x4AEE DUP3 PUSH2 0x5808 JUMP JUMPDEST PUSH2 0x5944 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B04 DUP3 PUSH2 0x5692 JUMP JUMPDEST PUSH2 0x4B0E DUP2 DUP6 PUSH2 0x56A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B1E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST PUSH2 0x4B27 DUP2 PUSH2 0x5AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3D DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x4B47 DUP2 DUP6 PUSH2 0x56B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST PUSH2 0x4B60 DUP2 PUSH2 0x5AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B76 DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x4B80 DUP2 DUP6 PUSH2 0x56CA JUMP JUMPDEST SWAP4 POP PUSH2 0x4B90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5884 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA9 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB4 DUP3 PUSH2 0x5ABC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BCC PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD7 DUP3 PUSH2 0x5AE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BEF PUSH1 0x2D DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BFA DUP3 PUSH2 0x5B0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C12 PUSH1 0x14 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C1D DUP3 PUSH2 0x5B5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C35 PUSH1 0x1F DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C40 DUP3 PUSH2 0x5B86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C58 PUSH1 0x2B DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C63 DUP3 PUSH2 0x5BAF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7B PUSH1 0x32 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C86 DUP3 PUSH2 0x5BFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9E PUSH1 0x12 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA9 DUP3 PUSH2 0x5C4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC1 PUSH1 0x25 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CCC DUP3 PUSH2 0x5C76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE4 PUSH1 0x1C DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CEF DUP3 PUSH2 0x5CC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D07 PUSH1 0x2 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4D12 DUP3 PUSH2 0x5CEE JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2A PUSH1 0x24 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D35 DUP3 PUSH2 0x5D17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4D PUSH1 0x19 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D58 DUP3 PUSH2 0x5D66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D70 PUSH1 0x22 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7B DUP3 PUSH2 0x5D8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D93 PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9E DUP3 PUSH2 0x5DDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB6 PUSH1 0x29 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DC1 DUP3 PUSH2 0x5E07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD9 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DE4 DUP3 PUSH2 0x5E56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DFC PUSH1 0xF DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E07 DUP3 PUSH2 0x5E7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1F PUSH1 0x1A DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2A DUP3 PUSH2 0x5EA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E42 PUSH1 0x20 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E4D DUP3 PUSH2 0x5ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E65 PUSH1 0x27 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E70 DUP3 PUSH2 0x5EFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E88 PUSH1 0x18 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E93 DUP3 PUSH2 0x5F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EAB PUSH1 0x21 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB6 DUP3 PUSH2 0x5F72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ECE PUSH1 0x17 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ED9 DUP3 PUSH2 0x5FC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EF1 PUSH1 0x13 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EFC DUP3 PUSH2 0x5FEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F14 PUSH1 0x3D DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F1F DUP3 PUSH2 0x6013 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F37 PUSH1 0x26 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F42 DUP3 PUSH2 0x6062 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5A PUSH1 0x2C DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F65 DUP3 PUSH2 0x60B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7D PUSH1 0x17 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4F88 DUP3 PUSH2 0x6100 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA0 PUSH1 0x35 DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FAB DUP3 PUSH2 0x6129 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC3 PUSH1 0x11 DUP4 PUSH2 0x56CA JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCE DUP3 PUSH2 0x6178 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FE6 PUSH1 0x2F DUP4 PUSH2 0x56B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF1 DUP3 PUSH2 0x61A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5005 DUP2 PUSH2 0x585E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5014 DUP2 PUSH2 0x5868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5025 DUP3 PUSH2 0x4CFA JUMP JUMPDEST SWAP2 POP PUSH2 0x5031 DUP3 DUP6 PUSH2 0x4AE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5041 DUP3 DUP5 PUSH2 0x4AE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x505C DUP3 PUSH2 0x4F70 JUMP JUMPDEST SWAP2 POP PUSH2 0x5068 DUP3 DUP6 PUSH2 0x4B6B JUMP JUMPDEST SWAP2 POP PUSH2 0x5073 DUP3 PUSH2 0x4FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x507F DUP3 DUP5 PUSH2 0x4B6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x50BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x50C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x50D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x50E7 DUP2 DUP5 PUSH2 0x4AF9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5107 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5122 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x513D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x514A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x5157 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x5164 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5182 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x518F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x519C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51A9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x51B6 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4AB5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51D5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51E2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x500B JUMP JUMPDEST PUSH2 0x51EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4AD3 JUMP JUMPDEST PUSH2 0x51FC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4AD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x521F DUP2 DUP5 PUSH2 0x4B32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5240 DUP2 PUSH2 0x4B9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5260 DUP2 PUSH2 0x4BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5280 DUP2 PUSH2 0x4BE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52A0 DUP2 PUSH2 0x4C05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52C0 DUP2 PUSH2 0x4C28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E0 DUP2 PUSH2 0x4C4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5300 DUP2 PUSH2 0x4C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5320 DUP2 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5340 DUP2 PUSH2 0x4CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5360 DUP2 PUSH2 0x4CD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5380 DUP2 PUSH2 0x4D1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53A0 DUP2 PUSH2 0x4D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C0 DUP2 PUSH2 0x4D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53E0 DUP2 PUSH2 0x4D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5400 DUP2 PUSH2 0x4DA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5420 DUP2 PUSH2 0x4DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5440 DUP2 PUSH2 0x4DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5460 DUP2 PUSH2 0x4E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5480 DUP2 PUSH2 0x4E35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54A0 DUP2 PUSH2 0x4E58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54C0 DUP2 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E0 DUP2 PUSH2 0x4E9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5500 DUP2 PUSH2 0x4EC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5520 DUP2 PUSH2 0x4EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5540 DUP2 PUSH2 0x4F07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5560 DUP2 PUSH2 0x4F2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5580 DUP2 PUSH2 0x4F4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55A0 DUP2 PUSH2 0x4F93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C0 DUP2 PUSH2 0x4FD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x55F7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH2 0x5604 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5615 PUSH2 0x5626 JUMP JUMPDEST SWAP1 POP PUSH2 0x5621 DUP3 DUP3 PUSH2 0x5913 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x564B JUMPI PUSH2 0x564A PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH2 0x5654 DUP3 PUSH2 0x5AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x567C JUMPI PUSH2 0x567B PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST PUSH2 0x5685 DUP3 PUSH2 0x5AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E0 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x56EB DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5720 JUMPI PUSH2 0x571F PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5736 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x5741 DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5751 JUMPI PUSH2 0x5750 PUSH2 0x597D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5767 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x5772 DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x57AB JUMPI PUSH2 0x57AA PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C1 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH2 0x57CC DUP4 PUSH2 0x585E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x57DF JUMPI PUSH2 0x57DE PUSH2 0x594E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F5 DUP3 PUSH2 0x583E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5887 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C2 DUP3 PUSH2 0x585E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x58D6 JUMPI PUSH2 0x58D5 PUSH2 0x594E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x58F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x590D JUMPI PUSH2 0x590C PUSH2 0x59DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x591C DUP3 PUSH2 0x5AAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x593B JUMPI PUSH2 0x593A PUSH2 0x5A68 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A20696E76616C6964206E6F6E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C65722063616E6E6F74206275726E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436865636B706F696E74733A20626C6F636B206E6F7420796574206D696E6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A207369676E617475726520657870697265640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206F776E206120746F6B656E0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F7465733A20626C6F636B206E6F7420796574206D696E6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436865636B706F696E743A20696E76616C6964206B6579000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220697320424C4F434B454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E7366657273206E6F7420737570706F727465640000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61F9 DUP2 PUSH2 0x57EA JUMP JUMPDEST DUP2 EQ PUSH2 0x6204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6210 DUP2 PUSH2 0x57FC JUMP JUMPDEST DUP2 EQ PUSH2 0x621B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6227 DUP2 PUSH2 0x5808 JUMP JUMPDEST DUP2 EQ PUSH2 0x6232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x623E DUP2 PUSH2 0x5812 JUMP JUMPDEST DUP2 EQ PUSH2 0x6249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6255 DUP2 PUSH2 0x585E JUMP JUMPDEST DUP2 EQ PUSH2 0x6260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x626C DUP2 PUSH2 0x5868 JUMP JUMPDEST DUP2 EQ PUSH2 0x6277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4C MSTORE8 0xC0 PUSH29 0x4FBD941C6CE80CB2129595961120353F254FBA1084F4B77001CBA26473 PUSH16 0x6C634300080600330000000000000000 ","sourceMap":"765:3595:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4112:246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1630:111:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:326:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4378:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1306:253:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7459:104:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5912:214:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2628:198:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5004:179:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3360:219:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1813:230:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1635:277:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3815:127:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4024:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1058:68:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7205:117:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3912:134:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3289:250:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1431:151:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2272:144:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4249:564:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3690:158:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1750:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990:62:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4388:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4112:246:26;4288:4;4315:36;4339:11;4315:23;:36::i;:::-;4308:43;;4112:246;;;:::o;2471:98:6:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1630:111:10:-;1691:7;1717:10;:17;;;;1710:24;;1630:111;:::o;4612:326:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;4378:129:0:-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;4803:145::-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;1306:253:10:-;1403:7;1438:23;1455:5;1438:16;:23::i;:::-;1430:5;:31;1422:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1526:12;:19;1539:5;1526:19;;;;;;;;;;;;;;;:26;1546:5;1526:26;;;;;;;;;;;;1519:33;;1306:253;;;;:::o;7459:104:5:-;7510:7;7536:20;:18;:20::i;:::-;7529:27;;7459:104;:::o;5912:214:0:-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;2628:198:5:-;2726:7;2752:67;2807:11;2752:20;:29;2773:7;2752:29;;;;;;;;;;;;;;;:54;;:67;;;;:::i;:::-;2745:74;;2628:198;;;;:::o;5004:179:6:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;3360:219:26:-;3433:41;2072:4:0;3441:18:26;;3461:12;:10;:12::i;:::-;3433:7;:41::i;:::-;:86;;;;3478:41;3497:12;:10;:12::i;:::-;3511:7;3478:18;:41::i;:::-;3433:86;3425:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;3552:20;3564:7;3552:11;:20::i;:::-;3360:219;:::o;1813:230:10:-;1888:7;1923:30;:28;:30::i;:::-;1915:5;:38;1907:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:10;2030:5;2019:17;;;;;;;;:::i;:::-;;;;;;;;;;2012:24;;1813:230;;;:::o;1635:277:26:-;1725:7;1028:24;2505:16:0;2516:4;2505:10;:16::i;:::-;1766:21:26::1;:9;:19;:21::i;:::-;1798:17;1818:19;:9;:17;:19::i;:::-;1798:39;;1847:31;1857:9;1868;1847;:31::i;:::-;1896:9;1889:16;;;1635:277:::0;;;;:::o;3815:127:5:-;3889:7;3915:11;:20;3927:7;3915:20;;;;;;;;;;;;;;;;;;;;;;;;;3908:27;;3815:127;;;:::o;4024:147::-;4095:15;4113:12;:10;:12::i;:::-;4095:30;;4135:29;4145:7;4154:9;4135;:29::i;:::-;4085:86;4024:147;:::o;2190:219:6:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1058:68:26:-;1095:31;1058:68;:::o;7205:117:5:-;7265:7;7291:24;:7;:14;7299:5;7291:14;;;;;;;;;;;;;;;:22;:24::i;:::-;7284:31;;7205:117;;;:::o;3912:134:26:-;2072:4:0;3981:18:26;;2505:16:0;2516:4;2505:10;:16::i;:::-;4026:13:26::1;4011:12;:28;;;;;;;;;;;;:::i;:::-;;3912:134:::0;;:::o;3289:250:5:-;3376:7;3417:12;3403:11;:26;3395:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3477:55;3520:11;3477:17;:42;;:55;;;;:::i;:::-;3470:62;;3289:250;;;:::o;1431:151:1:-;1521:7;1547:28;1569:5;1547:12;:18;1560:4;1547:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1540:35;;1431:151;;;;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2633:102:6:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;2272:144:5:-;2345:7;2371:38;:20;:29;2392:7;2371:29;;;;;;;;;;;;;;;:36;:38::i;:::-;2364:45;;;;2272:144;;;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;4169:153:6:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;4249:564:5:-;4468:6;4449:15;:25;;4441:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4513:14;4530:169;4557:87;1872:71;4617:9;4628:5;4635:6;4584:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4574:69;;;;;;4557:16;:87::i;:::-;4658:1;4673;4688;4530:13;:169::i;:::-;4513:186;;4726:17;4736:6;4726:9;:17::i;:::-;4717:5;:26;4709:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4778:28;4788:6;4796:9;4778;:28::i;:::-;4431:382;4249:564;;;;;;:::o;3690:158:26:-;3763:13;3788:23;3803:7;3788:14;:23::i;:::-;3829:12;3822:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:158;;;:::o;1750:140:1:-;1830:7;1856:27;:12;:18;1869:4;1856:18;;;;;;;;;;;:25;:27::i;:::-;1849:34;;1750:140;;;:::o;990:62:26:-;1028:24;990:62;:::o;5228:147:0:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;7461:233:0:-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;8297:150:25:-;8367:4;8390:50;8395:3;:10;;8431:5;8415:23;;8407:32;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;:::o;634:212:1:-;719:4;757:42;742:57;;;:11;:57;;;;:97;;;;803:36;827:11;803:23;:36::i;:::-;742:97;735:104;;634:212;;;:::o;13466:133:6:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;1978:166;;:::o;3152:308:20:-;3205:7;3245:12;3228:29;;3236:4;3228:29;;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;3317:24;3310:31;;;;3224:230;3379:64;3401:10;3413:12;3427:15;3379:21;:64::i;:::-;3372:71;;3152:308;;:::o;2233:171:1:-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:34;2389:7;2363:12;:18;2376:4;2363:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2233:171;;:::o;1901:764:15:-;2001:7;2042:12;2028:11;:26;2020:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2101:10;2114:30;2132:11;2114:17;:30::i;:::-;2101:43;;2155:11;2169:4;:17;;:24;;;;2155:38;;2204:11;2229:12;2244:3;2229:18;;2268:1;2262:3;:7;2258:242;;;2285:11;2305:14;2315:3;2305:9;:14::i;:::-;2299:3;:20;;;;:::i;:::-;2285:34;;2343:37;2357:4;:17;;2376:3;2343:13;:37::i;:::-;:50;;;;;;;;;;;;2337:56;;:3;:56;;;2333:157;;;2420:3;2413:10;;2333:157;;;2474:1;2468:3;:7;;;;:::i;:::-;2462:13;;2333:157;2271:229;2258:242;2510:11;2524:53;2543:4;:17;;2562:3;2567;2572:4;2524:18;:53::i;:::-;2510:67;;2602:1;2595:3;:8;:63;;2610:41;2624:4;:17;;2649:1;2643:3;:7;;;;:::i;:::-;2610:13;:41::i;:::-;:48;;;;;;;;;;;;2595:63;;;2606:1;2595:63;2588:70;;;;;;;;;1901:764;;;;:::o;10337:762:6:-;10396:13;10412:23;10427:7;10412:14;:23::i;:::-;10396:39;;10446:51;10467:5;10482:1;10486:7;10495:1;10446:20;:51::i;:::-;10607:23;10622:7;10607:14;:23::i;:::-;10599:31;;10675:15;:24;10691:7;10675:24;;;;;;;;;;;;10668:31;;;;;;;;;;;10935:1;10915:9;:16;10925:5;10915:16;;;;;;;;;;;;;;;;:21;;;;;;;;;;;10963:7;:16;10971:7;10963:16;;;;;;;;;;;;10956:23;;;;;;;;;;;11023:7;11019:1;10995:36;;11004:5;10995:36;;;;;;;;;;;;11042:50;11062:5;11077:1;11081:7;11090:1;11042:19;:50::i;:::-;10386:713;10337:762;:::o;945:123:17:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;8131:108:6:-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;4991:313:5:-;5073:19;5095:18;5105:7;5095:9;:18::i;:::-;5073:40;;5146:9;5123:11;:20;5135:7;5123:20;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;5209:9;5171:48;;5196:11;5171:48;;5187:7;5171:48;;;;;;;;;;;;5229:68;5248:11;5261:9;5272:24;5288:7;5272:15;:24::i;:::-;5229:18;:68::i;:::-;5063:241;4991:313;;:::o;6838:115:6:-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;9555:156:25:-;9629:7;9679:22;9683:3;:10;;9695:5;9679:3;:22::i;:::-;9671:31;;9648:56;;9555:156;;;;:::o;3622:205:15:-;3683:7;3702:11;3716:4;:17;;:24;;;;3702:38;;3764:1;3757:3;:8;:63;;3772:41;3786:4;:17;;3811:1;3805:3;:7;;;;:::i;:::-;3772:13;:41::i;:::-;:48;;;;;;;;;;;;3757:63;;;3768:1;3757:63;3750:70;;;3622:205;;;:::o;13075:307:6:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;4348:165:20:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;4451:21;:55::i;:::-;4444:62;;4348:165;;;:::o;6696:270:19:-;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;6950:9;6943:16;;;;6696:270;;;;;;:::o;6942:203:5:-;7002:15;7029:30;7062:7;:14;7070:5;7062:14;;;;;;;;;;;;;;;7029:47;;7096:15;:5;:13;:15::i;:::-;7086:25;;7121:17;:5;:15;:17::i;:::-;7019:126;6942:203;;;:::o;9098:115:25:-;9161:7;9187:19;9195:3;:10;;9187:7;:19::i;:::-;9180:26;;9098:115;;;:::o;2206:404::-;2269:4;2290:21;2300:3;2305:5;2290:9;:21::i;:::-;2285:319;;2327:3;:11;;2344:5;2327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:3;:11;;:18;;;;2485:3;:12;;:19;2498:5;2485:19;;;;;;;;;;;:40;;;;2546:4;2539:11;;;;2285:319;2588:5;2581:12;;2206:404;;;;;:::o;2606:202:0:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;7256:126:6:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;2060:436:26:-;2296:1;2280:18;;:4;:18;;;:38;;;;2316:1;2302:16;;:2;:16;;;2280:38;2272:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2376:1;2362:16;;:2;:16;;;:38;;;;2399:1;2382:13;2392:2;2382:9;:13::i;:::-;:18;2362:38;2354:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2431:56;2458:4;2464:2;2468:7;2477:9;2431:26;:56::i;:::-;2060:436;;;;:::o;2666:309::-;2857:41;2878:4;2884:2;2888:9;2857:20;:41::i;:::-;2908:60;2934:4;2940:2;2944:12;2958:9;2908:25;:60::i;:::-;2666:309;;;;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;3466:257:20:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;8615:156:25:-;8688:4;8711:53;8719:3;:10;;8755:5;8739:23;;8731:32;;8711:7;:53::i;:::-;8704:60;;8615:156;;;;:::o;15264:187:24:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;6280:1642:23:-;6328:7;6356:1;6351;:6;6347:45;;;6380:1;6373:8;;;;6347:45;7071:14;7105:1;7094:7;7099:1;7094:4;:7::i;:::-;:12;;7088:1;:19;;7071:36;;7566:1;7555:6;7551:1;:10;;;;;:::i;:::-;;;7542:6;:19;7541:26;;7532:35;;7615:1;7604:6;7600:1;:10;;;;;:::i;:::-;;;7591:6;:19;7590:26;;7581:35;;7664:1;7653:6;7649:1;:10;;;;;:::i;:::-;;;7640:6;:19;7639:26;;7630:35;;7713:1;7702:6;7698:1;:10;;;;;:::i;:::-;;;7689:6;:19;7688:26;;7679:35;;7762:1;7751:6;7747:1;:10;;;;;:::i;:::-;;;7738:6;:19;7737:26;;7728:35;;7811:1;7800:6;7796:1;:10;;;;;:::i;:::-;;;7787:6;:19;7786:26;;7777:35;;7860:1;7849:6;7845:1;:10;;;;;:::i;:::-;;;7836:6;:19;7835:26;;7826:35;;7882:23;7886:6;7898;7894:1;:10;;;;;:::i;:::-;;;7882:3;:23::i;:::-;7875:30;;;6280:1642;;;;:::o;7274:237:15:-;7359:25;7429:9;7426:1;7419:20;7491:3;7484:4;7481:1;7471:18;7467:28;7452:43;;7274:237;;;;:::o;6052:438::-;6206:7;6225:238;6238:4;6232:3;:10;6225:238;;;6258:11;6272:23;6285:3;6290:4;6272:12;:23::i;:::-;6258:37;;6353:3;6313:43;;:24;6327:4;6333:3;6313:13;:24::i;:::-;:37;;;;;;;;;;;;:43;;;6309:144;;;6383:3;6376:10;;6309:144;;;6437:1;6431:3;:7;;;;:::i;:::-;6425:13;;6309:144;6244:219;6225:238;;;6479:4;6472:11;;6052:438;;;;;;:::o;8460:309:6:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1317:133:11:-;1399:7;1425:18;1435:7;1425:9;:18::i;:::-;1418:25;;1317:133;;;:::o;6009:610:5:-;6139:2;6131:10;;:4;:10;;;;:24;;;;;6154:1;6145:6;:10;6131:24;6127:486;;;6191:1;6175:18;;:4;:18;;;6171:215;;6214:16;6232;6252:50;6284:9;6295:6;6252:20;:26;6273:4;6252:26;;;;;;;;;;;;;;;:31;;:50;;;;;:::i;:::-;6213:89;;;;6346:4;6325:46;;;6352:8;6362;6325:46;;;;;;;:::i;:::-;;;;;;;;6195:191;;6171:215;6417:1;6403:16;;:2;:16;;;6399:204;;6440:16;6458;6478:43;6508:4;6514:6;6478:20;:24;6499:2;6478:24;;;;;;;;;;;;;;;:29;;:43;;;;;:::i;:::-;6439:82;;;;6565:2;6544:44;;;6569:8;6579;6544:44;;;;;;;:::i;:::-;;;;;;;;6421:182;;6399:204;6127:486;6009:610;;;:::o;4904:118:25:-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;;4990:25;;4904:118;;;;:::o;14151:831:6:-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8341:194:19:-;8434:7;8499:15;8516:10;8470:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;:::o;5069:1494::-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;;;683:7;;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;4455:107:25:-;4511:7;4537:3;:11;;:18;;;;4530:25;;4455:107;;;:::o;4247:127::-;4320:4;4366:1;4343:3;:12;;:19;4356:5;4343:19;;;;;;;;;;;;:24;;4336:31;;4247:127;;;;:::o;1005:222:10:-;1107:4;1145:35;1130:50;;;:11;:50;;;;:90;;;;1184:36;1208:11;1184:23;:36::i;:::-;1130:90;1123:97;;1005:222;;;:::o;2112:890::-;2283:61;2310:4;2316:2;2320:12;2334:9;2283:26;:61::i;:::-;2371:1;2359:9;:13;2355:219;;;2500:63;;;;;;;;;;:::i;:::-;;;;;;;;2355:219;2584:15;2602:12;2584:30;;2645:1;2629:18;;:4;:18;;;2625:183;;;2663:40;2695:7;2663:31;:40::i;:::-;2625:183;;;2732:2;2724:10;;:4;:10;;;2720:88;;2750:47;2783:4;2789:7;2750:32;:47::i;:::-;2720:88;2625:183;2835:1;2821:16;;:2;:16;;;2817:179;;;2853:45;2890:7;2853:36;:45::i;:::-;2817:179;;;2925:4;2919:10;;:2;:10;;;2915:81;;2945:40;2973:2;2977:7;2945:27;:40::i;:::-;2915:81;2817:179;2273:729;2112:890;;;;:::o;5538:385:5:-;5687:1;5671:18;;:4;:18;;;5667:85;;;5705:36;5728:4;5734:6;5705:17;:22;;:36;;;;;:::i;:::-;;;5667:85;5779:1;5765:16;;:2;:16;;;5761:88;;;5797:41;5820:9;5831:6;5797:17;:22;;:41;;;;;:::i;:::-;;;5761:88;5858:58;5877:15;5887:4;5877:9;:15::i;:::-;5894:13;5904:2;5894:9;:13::i;:::-;5909:6;5858:18;:58::i;:::-;5538:385;;;:::o;961:288:11:-;1131:41;1152:4;1158:2;1162:9;1131:20;:41::i;:::-;1182:60;1208:4;1214:2;1218:12;1232:9;1182:25;:60::i;:::-;961:288;;;;:::o;2102:149:18:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;2778:1388:25:-;2844:4;2960:18;2981:3;:12;;:19;2994:5;2981:19;;;;;;;;;;;;2960:40;;3029:1;3015:10;:15;3011:1149;;3384:21;3421:1;3408:10;:14;;;;:::i;:::-;3384:38;;3436:17;3477:1;3456:3;:11;;:18;;;;:22;;;;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3823:10;3797:3;:12;;:23;3810:9;3797:23;;;;;;;;;;;:36;;;;3525:366;3493:398;3969:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;2778:1388;;;;;:::o;8383:983:23:-;8435:7;8454:14;8471:1;8454:18;;8525:1;8519:3;8510:5;:12;;:16;8506:99;;;8556:3;8546:13;;;;;8587:3;8577:13;;;;8506:99;8636:1;8631:2;8622:5;:11;;:15;8618:96;;;8667:2;8657:12;;;;;8697:2;8687:12;;;;8618:96;8745:1;8740:2;8731:5;:11;;:15;8727:96;;;8776:2;8766:12;;;;;8806:2;8796:12;;;;8727:96;8854:1;8849:2;8840:5;:11;;:15;8836:96;;;8885:2;8875:12;;;;;8915:2;8905:12;;;;8836:96;8962:1;8958;8949:5;:10;;:14;8945:93;;;8993:1;8983:11;;;;;9022:1;9012:11;;;;8945:93;9068:1;9064;9055:5;:10;;:14;9051:93;;;9099:1;9089:11;;;;;9128:1;9118:11;;;;9051:93;9174:1;9170;9161:5;:10;;:14;9157:93;;;9205:1;9195:11;;;;;9234:1;9224:11;;;;9157:93;9280:1;9276;9267:5;:10;;:14;9263:64;;;9311:1;9301:11;;;;9263:64;9353:6;9346:13;;;8383:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;805:153::-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;9091:920:6:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;6727:101:5:-;6790:7;6820:1;6816;:5;;;;:::i;:::-;6809:12;;6727:101;;;;:::o;3272:230:15:-;3425:7;3434;3460:35;3465:4;3471:23;3474:12;3481:4;3474:6;:12::i;:::-;3471:23;;3488:5;3471:2;:23;;:::i;:::-;3460:4;:35::i;:::-;3453:42;;;;3272:230;;;;;;:::o;6625:96:5:-;6683:7;6713:1;6709;:5;;;;:::i;:::-;6702:12;;6625:96;;;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;1570:300:6:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;3708:161:10:-;3811:10;:17;;;;3784:15;:24;3800:7;3784:24;;;;;;;;;;;:44;;;;3838:10;3854:7;3838:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3708:161;:::o;4486:970::-;4748:22;4798:1;4773:22;4790:4;4773:16;:22::i;:::-;:26;;;;:::i;:::-;4748:51;;4809:18;4830:17;:26;4848:7;4830:26;;;;;;;;;;;;4809:47;;4974:14;4960:10;:28;4956:323;;5004:19;5026:12;:18;5039:4;5026:18;;;;;;;;;;;;;;;:34;5045:14;5026:34;;;;;;;;;;;;5004:56;;5108:11;5075:12;:18;5088:4;5075:18;;;;;;;;;;;;;;;:30;5094:10;5075:30;;;;;;;;;;;:44;;;;5224:10;5191:17;:30;5209:11;5191:30;;;;;;;;;;;:43;;;;4990:289;4956:323;5372:17;:26;5390:7;5372:26;;;;;;;;;;;5365:33;;;5415:12;:18;5428:4;5415:18;;;;;;;;;;;;;;;:34;5434:14;5415:34;;;;;;;;;;;5408:41;;;4567:889;;4486:970;;:::o;5744:1061::-;5993:22;6038:1;6018:10;:17;;;;:21;;;;:::i;:::-;5993:46;;6049:18;6070:15;:24;6086:7;6070:24;;;;;;;;;;;;6049:45;;6416:19;6438:10;6449:14;6438:26;;;;;;;;:::i;:::-;;;;;;;;;;6416:48;;6500:11;6475:10;6486;6475:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6610:10;6579:15;:28;6595:11;6579:28;;;;;;;;;;;:41;;;;6748:15;:24;6764:7;6748:24;;;;;;;;;;;6741:31;;;6782:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5815:990;;;5744:1061;:::o;3296:217::-;3380:14;3397:20;3414:2;3397:16;:20::i;:::-;3380:37;;3454:7;3427:12;:16;3440:2;3427:16;;;;;;;;;;;;;;;:24;3444:6;3427:24;;;;;;;;;;;:34;;;;3500:6;3471:17;:26;3489:7;3471:26;;;;;;;;;;;:35;;;;3370:143;3296:217;;:::o;16800:153:6:-;;;;;:::o;2843:197:15:-;2912:7;2921;2947:86;2955:4;:17;;2974:31;2992:12;2974:17;:31::i;:::-;3007:25;3026:5;3007:18;:25::i;:::-;2947:7;:86::i;:::-;2940:93;;;;;;;;;;;;;;2843:197;;;;;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2836:192:24:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;4842:879:15:-;4960:7;4969;4988:11;5002:4;:11;;;;4988:25;;5034:1;5028:3;:7;5024:691;;;5103:22;5128:28;5142:4;5154:1;5148:3;:7;;;;:::i;:::-;5128:13;:28::i;:::-;5103:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5252:3;5231:24;;:4;:17;;;:24;;;;5223:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5368:3;5347:24;;:4;:17;;;:24;;;5343:202;;;5429:5;5391:28;5405:4;5417:1;5411:3;:7;;;;:::i;:::-;5391:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;5343:202;;;5473:4;5483:46;;;;;;;;5509:3;5483:46;;;;;;5522:5;5483:46;;;;;5473:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5343:202;5566:4;:11;;;5579:5;5558:27;;;;;;;;5024:691;5616:4;5626:46;;;;;;;;5652:3;5626:46;;;;;;5665:5;5626:46;;;;;5616:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5695:1;5698:5;5687:17;;;;;4842:879;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:410:27:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;280:79;;:::i;:::-;249:2;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;;;;;;:::o;423:412::-;501:5;526:66;542:49;584:6;542:49;:::i;:::-;526:66;:::i;:::-;517:75;;615:6;608:5;601:21;653:4;646:5;642:16;691:3;682:6;677:3;673:16;670:25;667:2;;;698:79;;:::i;:::-;667:2;788:41;822:6;817:3;812;788:41;:::i;:::-;507:328;;;;;;:::o;841:139::-;887:5;925:6;912:20;903:29;;941:33;968:5;941:33;:::i;:::-;893:87;;;;:::o;986:133::-;1029:5;1067:6;1054:20;1045:29;;1083:30;1107:5;1083:30;:::i;:::-;1035:84;;;;:::o;1125:139::-;1171:5;1209:6;1196:20;1187:29;;1225:33;1252:5;1225:33;:::i;:::-;1177:87;;;;:::o;1270:137::-;1315:5;1353:6;1340:20;1331:29;;1369:32;1395:5;1369:32;:::i;:::-;1321:86;;;;:::o;1413:141::-;1469:5;1500:6;1494:13;1485:22;;1516:32;1542:5;1516:32;:::i;:::-;1475:79;;;;:::o;1573:338::-;1628:5;1677:3;1670:4;1662:6;1658:17;1654:27;1644:2;;1685:79;;:::i;:::-;1644:2;1802:6;1789:20;1827:78;1901:3;1893:6;1886:4;1878:6;1874:17;1827:78;:::i;:::-;1818:87;;1634:277;;;;;:::o;1931:340::-;1987:5;2036:3;2029:4;2021:6;2017:17;2013:27;2003:2;;2044:79;;:::i;:::-;2003:2;2161:6;2148:20;2186:79;2261:3;2253:6;2246:4;2238:6;2234:17;2186:79;:::i;:::-;2177:88;;1993:278;;;;;:::o;2277:139::-;2323:5;2361:6;2348:20;2339:29;;2377:33;2404:5;2377:33;:::i;:::-;2329:87;;;;:::o;2422:135::-;2466:5;2504:6;2491:20;2482:29;;2520:31;2545:5;2520:31;:::i;:::-;2472:85;;;;:::o;2563:329::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:2;;;2677:79;;:::i;:::-;2639:2;2797:1;2822:53;2867:7;2858:6;2847:9;2843:22;2822:53;:::i;:::-;2812:63;;2768:117;2629:263;;;;:::o;2898:474::-;2966:6;2974;3023:2;3011:9;3002:7;2998:23;2994:32;2991:2;;;3029:79;;:::i;:::-;2991:2;3149:1;3174:53;3219:7;3210:6;3199:9;3195:22;3174:53;:::i;:::-;3164:63;;3120:117;3276:2;3302:53;3347:7;3338:6;3327:9;3323:22;3302:53;:::i;:::-;3292:63;;3247:118;2981:391;;;;;:::o;3378:619::-;3455:6;3463;3471;3520:2;3508:9;3499:7;3495:23;3491:32;3488:2;;;3526:79;;:::i;:::-;3488:2;3646:1;3671:53;3716:7;3707:6;3696:9;3692:22;3671:53;:::i;:::-;3661:63;;3617:117;3773:2;3799:53;3844:7;3835:6;3824:9;3820:22;3799:53;:::i;:::-;3789:63;;3744:118;3901:2;3927:53;3972:7;3963:6;3952:9;3948:22;3927:53;:::i;:::-;3917:63;;3872:118;3478:519;;;;;:::o;4003:943::-;4098:6;4106;4114;4122;4171:3;4159:9;4150:7;4146:23;4142:33;4139:2;;;4178:79;;:::i;:::-;4139:2;4298:1;4323:53;4368:7;4359:6;4348:9;4344:22;4323:53;:::i;:::-;4313:63;;4269:117;4425:2;4451:53;4496:7;4487:6;4476:9;4472:22;4451:53;:::i;:::-;4441:63;;4396:118;4553:2;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4524:118;4709:2;4698:9;4694:18;4681:32;4740:18;4732:6;4729:30;4726:2;;;4762:79;;:::i;:::-;4726:2;4867:62;4921:7;4912:6;4901:9;4897:22;4867:62;:::i;:::-;4857:72;;4652:287;4129:817;;;;;;;:::o;4952:468::-;5017:6;5025;5074:2;5062:9;5053:7;5049:23;5045:32;5042:2;;;5080:79;;:::i;:::-;5042:2;5200:1;5225:53;5270:7;5261:6;5250:9;5246:22;5225:53;:::i;:::-;5215:63;;5171:117;5327:2;5353:50;5395:7;5386:6;5375:9;5371:22;5353:50;:::i;:::-;5343:60;;5298:115;5032:388;;;;;:::o;5426:474::-;5494:6;5502;5551:2;5539:9;5530:7;5526:23;5522:32;5519:2;;;5557:79;;:::i;:::-;5519:2;5677:1;5702:53;5747:7;5738:6;5727:9;5723:22;5702:53;:::i;:::-;5692:63;;5648:117;5804:2;5830:53;5875:7;5866:6;5855:9;5851:22;5830:53;:::i;:::-;5820:63;;5775:118;5509:391;;;;;:::o;5906:1053::-;6008:6;6016;6024;6032;6040;6048;6097:3;6085:9;6076:7;6072:23;6068:33;6065:2;;;6104:79;;:::i;:::-;6065:2;6224:1;6249:53;6294:7;6285:6;6274:9;6270:22;6249:53;:::i;:::-;6239:63;;6195:117;6351:2;6377:53;6422:7;6413:6;6402:9;6398:22;6377:53;:::i;:::-;6367:63;;6322:118;6479:2;6505:53;6550:7;6541:6;6530:9;6526:22;6505:53;:::i;:::-;6495:63;;6450:118;6607:2;6633:51;6676:7;6667:6;6656:9;6652:22;6633:51;:::i;:::-;6623:61;;6578:116;6733:3;6760:53;6805:7;6796:6;6785:9;6781:22;6760:53;:::i;:::-;6750:63;;6704:119;6862:3;6889:53;6934:7;6925:6;6914:9;6910:22;6889:53;:::i;:::-;6879:63;;6833:119;6055:904;;;;;;;;:::o;6965:329::-;7024:6;7073:2;7061:9;7052:7;7048:23;7044:32;7041:2;;;7079:79;;:::i;:::-;7041:2;7199:1;7224:53;7269:7;7260:6;7249:9;7245:22;7224:53;:::i;:::-;7214:63;;7170:117;7031:263;;;;:::o;7300:474::-;7368:6;7376;7425:2;7413:9;7404:7;7400:23;7396:32;7393:2;;;7431:79;;:::i;:::-;7393:2;7551:1;7576:53;7621:7;7612:6;7601:9;7597:22;7576:53;:::i;:::-;7566:63;;7522:117;7678:2;7704:53;7749:7;7740:6;7729:9;7725:22;7704:53;:::i;:::-;7694:63;;7649:118;7383:391;;;;;:::o;7780:474::-;7848:6;7856;7905:2;7893:9;7884:7;7880:23;7876:32;7873:2;;;7911:79;;:::i;:::-;7873:2;8031:1;8056:53;8101:7;8092:6;8081:9;8077:22;8056:53;:::i;:::-;8046:63;;8002:117;8158:2;8184:53;8229:7;8220:6;8209:9;8205:22;8184:53;:::i;:::-;8174:63;;8129:118;7863:391;;;;;:::o;8260:327::-;8318:6;8367:2;8355:9;8346:7;8342:23;8338:32;8335:2;;;8373:79;;:::i;:::-;8335:2;8493:1;8518:52;8562:7;8553:6;8542:9;8538:22;8518:52;:::i;:::-;8508:62;;8464:116;8325:262;;;;:::o;8593:349::-;8662:6;8711:2;8699:9;8690:7;8686:23;8682:32;8679:2;;;8717:79;;:::i;:::-;8679:2;8837:1;8862:63;8917:7;8908:6;8897:9;8893:22;8862:63;:::i;:::-;8852:73;;8808:127;8669:273;;;;:::o;8948:509::-;9017:6;9066:2;9054:9;9045:7;9041:23;9037:32;9034:2;;;9072:79;;:::i;:::-;9034:2;9220:1;9209:9;9205:17;9192:31;9250:18;9242:6;9239:30;9236:2;;;9272:79;;:::i;:::-;9236:2;9377:63;9432:7;9423:6;9412:9;9408:22;9377:63;:::i;:::-;9367:73;;9163:287;9024:433;;;;:::o;9463:329::-;9522:6;9571:2;9559:9;9550:7;9546:23;9542:32;9539:2;;;9577:79;;:::i;:::-;9539:2;9697:1;9722:53;9767:7;9758:6;9747:9;9743:22;9722:53;:::i;:::-;9712:63;;9668:117;9529:263;;;;:::o;9798:118::-;9885:24;9903:5;9885:24;:::i;:::-;9880:3;9873:37;9863:53;;:::o;9922:109::-;10003:21;10018:5;10003:21;:::i;:::-;9998:3;9991:34;9981:50;;:::o;10037:118::-;10124:24;10142:5;10124:24;:::i;:::-;10119:3;10112:37;10102:53;;:::o;10161:157::-;10266:45;10286:24;10304:5;10286:24;:::i;:::-;10266:45;:::i;:::-;10261:3;10254:58;10244:74;;:::o;10324:360::-;10410:3;10438:38;10470:5;10438:38;:::i;:::-;10492:70;10555:6;10550:3;10492:70;:::i;:::-;10485:77;;10571:52;10616:6;10611:3;10604:4;10597:5;10593:16;10571:52;:::i;:::-;10648:29;10670:6;10648:29;:::i;:::-;10643:3;10639:39;10632:46;;10414:270;;;;;:::o;10690:364::-;10778:3;10806:39;10839:5;10806:39;:::i;:::-;10861:71;10925:6;10920:3;10861:71;:::i;:::-;10854:78;;10941:52;10986:6;10981:3;10974:4;10967:5;10963:16;10941:52;:::i;:::-;11018:29;11040:6;11018:29;:::i;:::-;11013:3;11009:39;11002:46;;10782:272;;;;;:::o;11060:377::-;11166:3;11194:39;11227:5;11194:39;:::i;:::-;11249:89;11331:6;11326:3;11249:89;:::i;:::-;11242:96;;11347:52;11392:6;11387:3;11380:4;11373:5;11369:16;11347:52;:::i;:::-;11424:6;11419:3;11415:16;11408:23;;11170:267;;;;;:::o;11443:366::-;11585:3;11606:67;11670:2;11665:3;11606:67;:::i;:::-;11599:74;;11682:93;11771:3;11682:93;:::i;:::-;11800:2;11795:3;11791:12;11784:19;;11589:220;;;:::o;11815:366::-;11957:3;11978:67;12042:2;12037:3;11978:67;:::i;:::-;11971:74;;12054:93;12143:3;12054:93;:::i;:::-;12172:2;12167:3;12163:12;12156:19;;11961:220;;;:::o;12187:366::-;12329:3;12350:67;12414:2;12409:3;12350:67;:::i;:::-;12343:74;;12426:93;12515:3;12426:93;:::i;:::-;12544:2;12539:3;12535:12;12528:19;;12333:220;;;:::o;12559:366::-;12701:3;12722:67;12786:2;12781:3;12722:67;:::i;:::-;12715:74;;12798:93;12887:3;12798:93;:::i;:::-;12916:2;12911:3;12907:12;12900:19;;12705:220;;;:::o;12931:366::-;13073:3;13094:67;13158:2;13153:3;13094:67;:::i;:::-;13087:74;;13170:93;13259:3;13170:93;:::i;:::-;13288:2;13283:3;13279:12;13272:19;;13077:220;;;:::o;13303:366::-;13445:3;13466:67;13530:2;13525:3;13466:67;:::i;:::-;13459:74;;13542:93;13631:3;13542:93;:::i;:::-;13660:2;13655:3;13651:12;13644:19;;13449:220;;;:::o;13675:366::-;13817:3;13838:67;13902:2;13897:3;13838:67;:::i;:::-;13831:74;;13914:93;14003:3;13914:93;:::i;:::-;14032:2;14027:3;14023:12;14016:19;;13821:220;;;:::o;14047:366::-;14189:3;14210:67;14274:2;14269:3;14210:67;:::i;:::-;14203:74;;14286:93;14375:3;14286:93;:::i;:::-;14404:2;14399:3;14395:12;14388:19;;14193:220;;;:::o;14419:366::-;14561:3;14582:67;14646:2;14641:3;14582:67;:::i;:::-;14575:74;;14658:93;14747:3;14658:93;:::i;:::-;14776:2;14771:3;14767:12;14760:19;;14565:220;;;:::o;14791:366::-;14933:3;14954:67;15018:2;15013:3;14954:67;:::i;:::-;14947:74;;15030:93;15119:3;15030:93;:::i;:::-;15148:2;15143:3;15139:12;15132:19;;14937:220;;;:::o;15163:400::-;15323:3;15344:84;15426:1;15421:3;15344:84;:::i;:::-;15337:91;;15437:93;15526:3;15437:93;:::i;:::-;15555:1;15550:3;15546:11;15539:18;;15327:236;;;:::o;15569:366::-;15711:3;15732:67;15796:2;15791:3;15732:67;:::i;:::-;15725:74;;15808:93;15897:3;15808:93;:::i;:::-;15926:2;15921:3;15917:12;15910:19;;15715:220;;;:::o;15941:366::-;16083:3;16104:67;16168:2;16163:3;16104:67;:::i;:::-;16097:74;;16180:93;16269:3;16180:93;:::i;:::-;16298:2;16293:3;16289:12;16282:19;;16087:220;;;:::o;16313:366::-;16455:3;16476:67;16540:2;16535:3;16476:67;:::i;:::-;16469:74;;16552:93;16641:3;16552:93;:::i;:::-;16670:2;16665:3;16661:12;16654:19;;16459:220;;;:::o;16685:366::-;16827:3;16848:67;16912:2;16907:3;16848:67;:::i;:::-;16841:74;;16924:93;17013:3;16924:93;:::i;:::-;17042:2;17037:3;17033:12;17026:19;;16831:220;;;:::o;17057:366::-;17199:3;17220:67;17284:2;17279:3;17220:67;:::i;:::-;17213:74;;17296:93;17385:3;17296:93;:::i;:::-;17414:2;17409:3;17405:12;17398:19;;17203:220;;;:::o;17429:366::-;17571:3;17592:67;17656:2;17651:3;17592:67;:::i;:::-;17585:74;;17668:93;17757:3;17668:93;:::i;:::-;17786:2;17781:3;17777:12;17770:19;;17575:220;;;:::o;17801:366::-;17943:3;17964:67;18028:2;18023:3;17964:67;:::i;:::-;17957:74;;18040:93;18129:3;18040:93;:::i;:::-;18158:2;18153:3;18149:12;18142:19;;17947:220;;;:::o;18173:366::-;18315:3;18336:67;18400:2;18395:3;18336:67;:::i;:::-;18329:74;;18412:93;18501:3;18412:93;:::i;:::-;18530:2;18525:3;18521:12;18514:19;;18319:220;;;:::o;18545:366::-;18687:3;18708:67;18772:2;18767:3;18708:67;:::i;:::-;18701:74;;18784:93;18873:3;18784:93;:::i;:::-;18902:2;18897:3;18893:12;18886:19;;18691:220;;;:::o;18917:366::-;19059:3;19080:67;19144:2;19139:3;19080:67;:::i;:::-;19073:74;;19156:93;19245:3;19156:93;:::i;:::-;19274:2;19269:3;19265:12;19258:19;;19063:220;;;:::o;19289:366::-;19431:3;19452:67;19516:2;19511:3;19452:67;:::i;:::-;19445:74;;19528:93;19617:3;19528:93;:::i;:::-;19646:2;19641:3;19637:12;19630:19;;19435:220;;;:::o;19661:366::-;19803:3;19824:67;19888:2;19883:3;19824:67;:::i;:::-;19817:74;;19900:93;19989:3;19900:93;:::i;:::-;20018:2;20013:3;20009:12;20002:19;;19807:220;;;:::o;20033:366::-;20175:3;20196:67;20260:2;20255:3;20196:67;:::i;:::-;20189:74;;20272:93;20361:3;20272:93;:::i;:::-;20390:2;20385:3;20381:12;20374:19;;20179:220;;;:::o;20405:366::-;20547:3;20568:67;20632:2;20627:3;20568:67;:::i;:::-;20561:74;;20644:93;20733:3;20644:93;:::i;:::-;20762:2;20757:3;20753:12;20746:19;;20551:220;;;:::o;20777:366::-;20919:3;20940:67;21004:2;20999:3;20940:67;:::i;:::-;20933:74;;21016:93;21105:3;21016:93;:::i;:::-;21134:2;21129:3;21125:12;21118:19;;20923:220;;;:::o;21149:366::-;21291:3;21312:67;21376:2;21371:3;21312:67;:::i;:::-;21305:74;;21388:93;21477:3;21388:93;:::i;:::-;21506:2;21501:3;21497:12;21490:19;;21295:220;;;:::o;21521:366::-;21663:3;21684:67;21748:2;21743:3;21684:67;:::i;:::-;21677:74;;21760:93;21849:3;21760:93;:::i;:::-;21878:2;21873:3;21869:12;21862:19;;21667:220;;;:::o;21893:402::-;22053:3;22074:85;22156:2;22151:3;22074:85;:::i;:::-;22067:92;;22168:93;22257:3;22168:93;:::i;:::-;22286:2;22281:3;22277:12;22270:19;;22057:238;;;:::o;22301:366::-;22443:3;22464:67;22528:2;22523:3;22464:67;:::i;:::-;22457:74;;22540:93;22629:3;22540:93;:::i;:::-;22658:2;22653:3;22649:12;22642:19;;22447:220;;;:::o;22673:402::-;22833:3;22854:85;22936:2;22931:3;22854:85;:::i;:::-;22847:92;;22948:93;23037:3;22948:93;:::i;:::-;23066:2;23061:3;23057:12;23050:19;;22837:238;;;:::o;23081:366::-;23223:3;23244:67;23308:2;23303:3;23244:67;:::i;:::-;23237:74;;23320:93;23409:3;23320:93;:::i;:::-;23438:2;23433:3;23429:12;23422:19;;23227:220;;;:::o;23453:118::-;23540:24;23558:5;23540:24;:::i;:::-;23535:3;23528:37;23518:53;;:::o;23577:112::-;23660:22;23676:5;23660:22;:::i;:::-;23655:3;23648:35;23638:51;;:::o;23695:663::-;23936:3;23958:148;24102:3;23958:148;:::i;:::-;23951:155;;24116:75;24187:3;24178:6;24116:75;:::i;:::-;24216:2;24211:3;24207:12;24200:19;;24229:75;24300:3;24291:6;24229:75;:::i;:::-;24329:2;24324:3;24320:12;24313:19;;24349:3;24342:10;;23940:418;;;;;:::o;24364:967::-;24746:3;24768:148;24912:3;24768:148;:::i;:::-;24761:155;;24933:95;25024:3;25015:6;24933:95;:::i;:::-;24926:102;;25045:148;25189:3;25045:148;:::i;:::-;25038:155;;25210:95;25301:3;25292:6;25210:95;:::i;:::-;25203:102;;25322:3;25315:10;;24750:581;;;;;:::o;25337:222::-;25430:4;25468:2;25457:9;25453:18;25445:26;;25481:71;25549:1;25538:9;25534:17;25525:6;25481:71;:::i;:::-;25435:124;;;;:::o;25565:640::-;25760:4;25798:3;25787:9;25783:19;25775:27;;25812:71;25880:1;25869:9;25865:17;25856:6;25812:71;:::i;:::-;25893:72;25961:2;25950:9;25946:18;25937:6;25893:72;:::i;:::-;25975;26043:2;26032:9;26028:18;26019:6;25975:72;:::i;:::-;26094:9;26088:4;26084:20;26079:2;26068:9;26064:18;26057:48;26122:76;26193:4;26184:6;26122:76;:::i;:::-;26114:84;;25765:440;;;;;;;:::o;26211:210::-;26298:4;26336:2;26325:9;26321:18;26313:26;;26349:65;26411:1;26400:9;26396:17;26387:6;26349:65;:::i;:::-;26303:118;;;;:::o;26427:222::-;26520:4;26558:2;26547:9;26543:18;26535:26;;26571:71;26639:1;26628:9;26624:17;26615:6;26571:71;:::i;:::-;26525:124;;;;:::o;26655:553::-;26832:4;26870:3;26859:9;26855:19;26847:27;;26884:71;26952:1;26941:9;26937:17;26928:6;26884:71;:::i;:::-;26965:72;27033:2;27022:9;27018:18;27009:6;26965:72;:::i;:::-;27047;27115:2;27104:9;27100:18;27091:6;27047:72;:::i;:::-;27129;27197:2;27186:9;27182:18;27173:6;27129:72;:::i;:::-;26837:371;;;;;;;:::o;27214:664::-;27419:4;27457:3;27446:9;27442:19;27434:27;;27471:71;27539:1;27528:9;27524:17;27515:6;27471:71;:::i;:::-;27552:72;27620:2;27609:9;27605:18;27596:6;27552:72;:::i;:::-;27634;27702:2;27691:9;27687:18;27678:6;27634:72;:::i;:::-;27716;27784:2;27773:9;27769:18;27760:6;27716:72;:::i;:::-;27798:73;27866:3;27855:9;27851:19;27842:6;27798:73;:::i;:::-;27424:454;;;;;;;;:::o;27884:545::-;28057:4;28095:3;28084:9;28080:19;28072:27;;28109:71;28177:1;28166:9;28162:17;28153:6;28109:71;:::i;:::-;28190:68;28254:2;28243:9;28239:18;28230:6;28190:68;:::i;:::-;28268:72;28336:2;28325:9;28321:18;28312:6;28268:72;:::i;:::-;28350;28418:2;28407:9;28403:18;28394:6;28350:72;:::i;:::-;28062:367;;;;;;;:::o;28435:313::-;28548:4;28586:2;28575:9;28571:18;28563:26;;28635:9;28629:4;28625:20;28621:1;28610:9;28606:17;28599:47;28663:78;28736:4;28727:6;28663:78;:::i;:::-;28655:86;;28553:195;;;;:::o;28754:419::-;28920:4;28958:2;28947:9;28943:18;28935:26;;29007:9;29001:4;28997:20;28993:1;28982:9;28978:17;28971:47;29035:131;29161:4;29035:131;:::i;:::-;29027:139;;28925:248;;;:::o;29179:419::-;29345:4;29383:2;29372:9;29368:18;29360:26;;29432:9;29426:4;29422:20;29418:1;29407:9;29403:17;29396:47;29460:131;29586:4;29460:131;:::i;:::-;29452:139;;29350:248;;;:::o;29604:419::-;29770:4;29808:2;29797:9;29793:18;29785:26;;29857:9;29851:4;29847:20;29843:1;29832:9;29828:17;29821:47;29885:131;30011:4;29885:131;:::i;:::-;29877:139;;29775:248;;;:::o;30029:419::-;30195:4;30233:2;30222:9;30218:18;30210:26;;30282:9;30276:4;30272:20;30268:1;30257:9;30253:17;30246:47;30310:131;30436:4;30310:131;:::i;:::-;30302:139;;30200:248;;;:::o;30454:419::-;30620:4;30658:2;30647:9;30643:18;30635:26;;30707:9;30701:4;30697:20;30693:1;30682:9;30678:17;30671:47;30735:131;30861:4;30735:131;:::i;:::-;30727:139;;30625:248;;;:::o;30879:419::-;31045:4;31083:2;31072:9;31068:18;31060:26;;31132:9;31126:4;31122:20;31118:1;31107:9;31103:17;31096:47;31160:131;31286:4;31160:131;:::i;:::-;31152:139;;31050:248;;;:::o;31304:419::-;31470:4;31508:2;31497:9;31493:18;31485:26;;31557:9;31551:4;31547:20;31543:1;31532:9;31528:17;31521:47;31585:131;31711:4;31585:131;:::i;:::-;31577:139;;31475:248;;;:::o;31729:419::-;31895:4;31933:2;31922:9;31918:18;31910:26;;31982:9;31976:4;31972:20;31968:1;31957:9;31953:17;31946:47;32010:131;32136:4;32010:131;:::i;:::-;32002:139;;31900:248;;;:::o;32154:419::-;32320:4;32358:2;32347:9;32343:18;32335:26;;32407:9;32401:4;32397:20;32393:1;32382:9;32378:17;32371:47;32435:131;32561:4;32435:131;:::i;:::-;32427:139;;32325:248;;;:::o;32579:419::-;32745:4;32783:2;32772:9;32768:18;32760:26;;32832:9;32826:4;32822:20;32818:1;32807:9;32803:17;32796:47;32860:131;32986:4;32860:131;:::i;:::-;32852:139;;32750:248;;;:::o;33004:419::-;33170:4;33208:2;33197:9;33193:18;33185:26;;33257:9;33251:4;33247:20;33243:1;33232:9;33228:17;33221:47;33285:131;33411:4;33285:131;:::i;:::-;33277:139;;33175:248;;;:::o;33429:419::-;33595:4;33633:2;33622:9;33618:18;33610:26;;33682:9;33676:4;33672:20;33668:1;33657:9;33653:17;33646:47;33710:131;33836:4;33710:131;:::i;:::-;33702:139;;33600:248;;;:::o;33854:419::-;34020:4;34058:2;34047:9;34043:18;34035:26;;34107:9;34101:4;34097:20;34093:1;34082:9;34078:17;34071:47;34135:131;34261:4;34135:131;:::i;:::-;34127:139;;34025:248;;;:::o;34279:419::-;34445:4;34483:2;34472:9;34468:18;34460:26;;34532:9;34526:4;34522:20;34518:1;34507:9;34503:17;34496:47;34560:131;34686:4;34560:131;:::i;:::-;34552:139;;34450:248;;;:::o;34704:419::-;34870:4;34908:2;34897:9;34893:18;34885:26;;34957:9;34951:4;34947:20;34943:1;34932:9;34928:17;34921:47;34985:131;35111:4;34985:131;:::i;:::-;34977:139;;34875:248;;;:::o;35129:419::-;35295:4;35333:2;35322:9;35318:18;35310:26;;35382:9;35376:4;35372:20;35368:1;35357:9;35353:17;35346:47;35410:131;35536:4;35410:131;:::i;:::-;35402:139;;35300:248;;;:::o;35554:419::-;35720:4;35758:2;35747:9;35743:18;35735:26;;35807:9;35801:4;35797:20;35793:1;35782:9;35778:17;35771:47;35835:131;35961:4;35835:131;:::i;:::-;35827:139;;35725:248;;;:::o;35979:419::-;36145:4;36183:2;36172:9;36168:18;36160:26;;36232:9;36226:4;36222:20;36218:1;36207:9;36203:17;36196:47;36260:131;36386:4;36260:131;:::i;:::-;36252:139;;36150:248;;;:::o;36404:419::-;36570:4;36608:2;36597:9;36593:18;36585:26;;36657:9;36651:4;36647:20;36643:1;36632:9;36628:17;36621:47;36685:131;36811:4;36685:131;:::i;:::-;36677:139;;36575:248;;;:::o;36829:419::-;36995:4;37033:2;37022:9;37018:18;37010:26;;37082:9;37076:4;37072:20;37068:1;37057:9;37053:17;37046:47;37110:131;37236:4;37110:131;:::i;:::-;37102:139;;37000:248;;;:::o;37254:419::-;37420:4;37458:2;37447:9;37443:18;37435:26;;37507:9;37501:4;37497:20;37493:1;37482:9;37478:17;37471:47;37535:131;37661:4;37535:131;:::i;:::-;37527:139;;37425:248;;;:::o;37679:419::-;37845:4;37883:2;37872:9;37868:18;37860:26;;37932:9;37926:4;37922:20;37918:1;37907:9;37903:17;37896:47;37960:131;38086:4;37960:131;:::i;:::-;37952:139;;37850:248;;;:::o;38104:419::-;38270:4;38308:2;38297:9;38293:18;38285:26;;38357:9;38351:4;38347:20;38343:1;38332:9;38328:17;38321:47;38385:131;38511:4;38385:131;:::i;:::-;38377:139;;38275:248;;;:::o;38529:419::-;38695:4;38733:2;38722:9;38718:18;38710:26;;38782:9;38776:4;38772:20;38768:1;38757:9;38753:17;38746:47;38810:131;38936:4;38810:131;:::i;:::-;38802:139;;38700:248;;;:::o;38954:419::-;39120:4;39158:2;39147:9;39143:18;39135:26;;39207:9;39201:4;39197:20;39193:1;39182:9;39178:17;39171:47;39235:131;39361:4;39235:131;:::i;:::-;39227:139;;39125:248;;;:::o;39379:419::-;39545:4;39583:2;39572:9;39568:18;39560:26;;39632:9;39626:4;39622:20;39618:1;39607:9;39603:17;39596:47;39660:131;39786:4;39660:131;:::i;:::-;39652:139;;39550:248;;;:::o;39804:419::-;39970:4;40008:2;39997:9;39993:18;39985:26;;40057:9;40051:4;40047:20;40043:1;40032:9;40028:17;40021:47;40085:131;40211:4;40085:131;:::i;:::-;40077:139;;39975:248;;;:::o;40229:419::-;40395:4;40433:2;40422:9;40418:18;40410:26;;40482:9;40476:4;40472:20;40468:1;40457:9;40453:17;40446:47;40510:131;40636:4;40510:131;:::i;:::-;40502:139;;40400:248;;;:::o;40654:419::-;40820:4;40858:2;40847:9;40843:18;40835:26;;40907:9;40901:4;40897:20;40893:1;40882:9;40878:17;40871:47;40935:131;41061:4;40935:131;:::i;:::-;40927:139;;40825:248;;;:::o;41079:222::-;41172:4;41210:2;41199:9;41195:18;41187:26;;41223:71;41291:1;41280:9;41276:17;41267:6;41223:71;:::i;:::-;41177:124;;;;:::o;41307:332::-;41428:4;41466:2;41455:9;41451:18;41443:26;;41479:71;41547:1;41536:9;41532:17;41523:6;41479:71;:::i;:::-;41560:72;41628:2;41617:9;41613:18;41604:6;41560:72;:::i;:::-;41433:206;;;;;:::o;41645:129::-;41679:6;41706:20;;:::i;:::-;41696:30;;41735:33;41763:4;41755:6;41735:33;:::i;:::-;41686:88;;;:::o;41780:75::-;41813:6;41846:2;41840:9;41830:19;;41820:35;:::o;41861:307::-;41922:4;42012:18;42004:6;42001:30;41998:2;;;42034:18;;:::i;:::-;41998:2;42072:29;42094:6;42072:29;:::i;:::-;42064:37;;42156:4;42150;42146:15;42138:23;;41927:241;;;:::o;42174:308::-;42236:4;42326:18;42318:6;42315:30;42312:2;;;42348:18;;:::i;:::-;42312:2;42386:29;42408:6;42386:29;:::i;:::-;42378:37;;42470:4;42464;42460:15;42452:23;;42241:241;;;:::o;42488:98::-;42539:6;42573:5;42567:12;42557:22;;42546:40;;;:::o;42592:99::-;42644:6;42678:5;42672:12;42662:22;;42651:40;;;:::o;42697:168::-;42780:11;42814:6;42809:3;42802:19;42854:4;42849:3;42845:14;42830:29;;42792:73;;;;:::o;42871:169::-;42955:11;42989:6;42984:3;42977:19;43029:4;43024:3;43020:14;43005:29;;42967:73;;;;:::o;43046:148::-;43148:11;43185:3;43170:18;;43160:34;;;;:::o;43200:305::-;43240:3;43259:20;43277:1;43259:20;:::i;:::-;43254:25;;43293:20;43311:1;43293:20;:::i;:::-;43288:25;;43447:1;43379:66;43375:74;43372:1;43369:81;43366:2;;;43453:18;;:::i;:::-;43366:2;43497:1;43494;43490:9;43483:16;;43244:261;;;;:::o;43511:185::-;43551:1;43568:20;43586:1;43568:20;:::i;:::-;43563:25;;43602:20;43620:1;43602:20;:::i;:::-;43597:25;;43641:1;43631:2;;43646:18;;:::i;:::-;43631:2;43688:1;43685;43681:9;43676:14;;43553:143;;;;:::o;43702:348::-;43742:7;43765:20;43783:1;43765:20;:::i;:::-;43760:25;;43799:20;43817:1;43799:20;:::i;:::-;43794:25;;43987:1;43919:66;43915:74;43912:1;43909:81;43904:1;43897:9;43890:17;43886:105;43883:2;;;43994:18;;:::i;:::-;43883:2;44042:1;44039;44035:9;44024:20;;43750:300;;;;:::o;44056:191::-;44096:4;44116:20;44134:1;44116:20;:::i;:::-;44111:25;;44150:20;44168:1;44150:20;:::i;:::-;44145:25;;44189:1;44186;44183:8;44180:2;;;44194:18;;:::i;:::-;44180:2;44239:1;44236;44232:9;44224:17;;44101:146;;;;:::o;44253:96::-;44290:7;44319:24;44337:5;44319:24;:::i;:::-;44308:35;;44298:51;;;:::o;44355:90::-;44389:7;44432:5;44425:13;44418:21;44407:32;;44397:48;;;:::o;44451:77::-;44488:7;44517:5;44506:16;;44496:32;;;:::o;44534:149::-;44570:7;44610:66;44603:5;44599:78;44588:89;;44578:105;;;:::o;44689:126::-;44726:7;44766:42;44759:5;44755:54;44744:65;;44734:81;;;:::o;44821:77::-;44858:7;44887:5;44876:16;;44866:32;;;:::o;44904:86::-;44939:7;44979:4;44972:5;44968:16;44957:27;;44947:43;;;:::o;44996:154::-;45080:6;45075:3;45070;45057:30;45142:1;45133:6;45128:3;45124:16;45117:27;45047:103;;;:::o;45156:307::-;45224:1;45234:113;45248:6;45245:1;45242:13;45234:113;;;45333:1;45328:3;45324:11;45318:18;45314:1;45309:3;45305:11;45298:39;45270:2;45267:1;45263:10;45258:15;;45234:113;;;45365:6;45362:1;45359:13;45356:2;;;45445:1;45436:6;45431:3;45427:16;45420:27;45356:2;45205:258;;;;:::o;45469:171::-;45508:3;45531:24;45549:5;45531:24;:::i;:::-;45522:33;;45577:4;45570:5;45567:15;45564:2;;;45585:18;;:::i;:::-;45564:2;45632:1;45625:5;45621:13;45614:20;;45512:128;;;:::o;45646:320::-;45690:6;45727:1;45721:4;45717:12;45707:22;;45774:1;45768:4;45764:12;45795:18;45785:2;;45851:4;45843:6;45839:17;45829:27;;45785:2;45913;45905:6;45902:14;45882:18;45879:38;45876:2;;;45932:18;;:::i;:::-;45876:2;45697:269;;;;:::o;45972:281::-;46055:27;46077:4;46055:27;:::i;:::-;46047:6;46043:40;46185:6;46173:10;46170:22;46149:18;46137:10;46134:34;46131:62;46128:2;;;46196:18;;:::i;:::-;46128:2;46236:10;46232:2;46225:22;46015:238;;;:::o;46259:79::-;46298:7;46327:5;46316:16;;46306:32;;;:::o;46344:180::-;46392:77;46389:1;46382:88;46489:4;46486:1;46479:15;46513:4;46510:1;46503:15;46530:180;46578:77;46575:1;46568:88;46675:4;46672:1;46665:15;46699:4;46696:1;46689:15;46716:180;46764:77;46761:1;46754:88;46861:4;46858:1;46851:15;46885:4;46882:1;46875:15;46902:180;46950:77;46947:1;46940:88;47047:4;47044:1;47037:15;47071:4;47068:1;47061:15;47088:180;47136:77;47133:1;47126:88;47233:4;47230:1;47223:15;47257:4;47254:1;47247:15;47274:180;47322:77;47319:1;47312:88;47419:4;47416:1;47409:15;47443:4;47440:1;47433:15;47460:180;47508:77;47505:1;47498:88;47605:4;47602:1;47595:15;47629:4;47626:1;47619:15;47646:117;47755:1;47752;47745:12;47769:117;47878:1;47875;47868:12;47892:117;48001:1;47998;47991:12;48015:117;48124:1;48121;48114:12;48138:102;48179:6;48230:2;48226:7;48221:2;48214:5;48210:14;48206:28;48196:38;;48186:54;;;:::o;48246:174::-;48386:26;48382:1;48374:6;48370:14;48363:50;48352:68;:::o;48426:182::-;48566:34;48562:1;48554:6;48550:14;48543:58;48532:76;:::o;48614:232::-;48754:34;48750:1;48742:6;48738:14;48731:58;48823:15;48818:2;48810:6;48806:15;48799:40;48720:126;:::o;48852:170::-;48992:22;48988:1;48980:6;48976:14;48969:46;48958:64;:::o;49028:181::-;49168:33;49164:1;49156:6;49152:14;49145:57;49134:75;:::o;49215:230::-;49355:34;49351:1;49343:6;49339:14;49332:58;49424:13;49419:2;49411:6;49407:15;49400:38;49321:124;:::o;49451:237::-;49591:34;49587:1;49579:6;49575:14;49568:58;49660:20;49655:2;49647:6;49643:15;49636:45;49557:131;:::o;49694:168::-;49834:20;49830:1;49822:6;49818:14;49811:44;49800:62;:::o;49868:224::-;50008:34;50004:1;49996:6;49992:14;49985:58;50077:7;50072:2;50064:6;50060:15;50053:32;49974:118;:::o;50098:178::-;50238:30;50234:1;50226:6;50222:14;50215:54;50204:72;:::o;50282:214::-;50422:66;50418:1;50410:6;50406:14;50399:90;50388:108;:::o;50502:223::-;50642:34;50638:1;50630:6;50626:14;50619:58;50711:6;50706:2;50698:6;50694:15;50687:31;50608:117;:::o;50731:175::-;50871:27;50867:1;50859:6;50855:14;50848:51;50837:69;:::o;50912:221::-;51052:34;51048:1;51040:6;51036:14;51029:58;51121:4;51116:2;51108:6;51104:15;51097:29;51018:115;:::o;51139:182::-;51279:34;51275:1;51267:6;51263:14;51256:58;51245:76;:::o;51327:228::-;51467:34;51463:1;51455:6;51451:14;51444:58;51536:11;51531:2;51523:6;51519:15;51512:36;51433:122;:::o;51561:174::-;51701:26;51697:1;51689:6;51685:14;51678:50;51667:68;:::o;51741:165::-;51881:17;51877:1;51869:6;51865:14;51858:41;51847:59;:::o;51912:176::-;52052:28;52048:1;52040:6;52036:14;52029:52;52018:70;:::o;52094:182::-;52234:34;52230:1;52222:6;52218:14;52211:58;52200:76;:::o;52282:226::-;52422:34;52418:1;52410:6;52406:14;52399:58;52491:9;52486:2;52478:6;52474:15;52467:34;52388:120;:::o;52514:174::-;52654:26;52650:1;52642:6;52638:14;52631:50;52620:68;:::o;52694:220::-;52834:34;52830:1;52822:6;52818:14;52811:58;52903:3;52898:2;52890:6;52886:15;52879:28;52800:114;:::o;52920:173::-;53060:25;53056:1;53048:6;53044:14;53037:49;53026:67;:::o;53099:169::-;53239:21;53235:1;53227:6;53223:14;53216:45;53205:63;:::o;53274:248::-;53414:34;53410:1;53402:6;53398:14;53391:58;53483:31;53478:2;53470:6;53466:15;53459:56;53380:142;:::o;53528:225::-;53668:34;53664:1;53656:6;53652:14;53645:58;53737:8;53732:2;53724:6;53720:15;53713:33;53634:119;:::o;53759:231::-;53899:34;53895:1;53887:6;53883:14;53876:58;53968:14;53963:2;53955:6;53951:15;53944:39;53865:125;:::o;53996:173::-;54136:25;54132:1;54124:6;54120:14;54113:49;54102:67;:::o;54175:240::-;54315:34;54311:1;54303:6;54299:14;54292:58;54384:23;54379:2;54371:6;54367:15;54360:48;54281:134;:::o;54421:167::-;54561:19;54557:1;54549:6;54545:14;54538:43;54527:61;:::o;54594:234::-;54734:34;54730:1;54722:6;54718:14;54711:58;54803:17;54798:2;54790:6;54786:15;54779:42;54700:128;:::o;54834:122::-;54907:24;54925:5;54907:24;:::i;:::-;54900:5;54897:35;54887:2;;54946:1;54943;54936:12;54887:2;54877:79;:::o;54962:116::-;55032:21;55047:5;55032:21;:::i;:::-;55025:5;55022:32;55012:2;;55068:1;55065;55058:12;55012:2;55002:76;:::o;55084:122::-;55157:24;55175:5;55157:24;:::i;:::-;55150:5;55147:35;55137:2;;55196:1;55193;55186:12;55137:2;55127:79;:::o;55212:120::-;55284:23;55301:5;55284:23;:::i;:::-;55277:5;55274:34;55264:2;;55322:1;55319;55312:12;55264:2;55254:78;:::o;55338:122::-;55411:24;55429:5;55411:24;:::i;:::-;55404:5;55401:35;55391:2;;55450:1;55447;55440:12;55391:2;55381:79;:::o;55466:118::-;55537:22;55553:5;55537:22;:::i;:::-;55530:5;55527:33;55517:2;;55574:1;55571;55564:12;55517:2;55507:77;:::o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","_setTokenURI(string)":"87f350b8","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getApproved(uint256)":"081812fc","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address)":"54ba0f27","name()":"06fdde03","nonces(address)":"7ecebe00","ownerOf(uint256)":"6352211e","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseTokenUri\",\"type\":\"string\"}],\"name\":\"_setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0x3pehemeralsoul\",\"details\":\"Soubound token. Only burner and owner can burn token. Only 1 token allowed per address. Uri role can update tokenURI. Only minter can mint.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"_setTokenURI(string)\":{\"details\":\"setter for the NFT token URI.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Override to include BURNER_ROLE, the _beforeTokenTransfer function is overriden to comply also with BURNER_ROLE. These 2 functions go hand in hand.\",\"params\":{\"tokenId\":\"tokenID to be burned\"}},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintNFT(address)\":{\"details\":\"Reverts if receipient owns already 1 token\",\"params\":{\"recipient\":\"token holder\"},\"returns\":{\"_0\":\"uint256  tokenId assigned to holder\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}. the baseTokenURI is the same for all tokens.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"DAO Soulbound NFT contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Owner can burn token in order to enforce the right to be forgotten. Also BURNER_ROLE can burn in order to kick out a member from a DAO.\"},\"mintNFT(address)\":{\"notice\":\"Mints only 1 token to recipient. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFT.sol\":\"NFT\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":{\"keccak256\":\"0x19cf96045e935b99fe8fc15018af1d74203ad6ae1b301b950da4e90ddec05f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6233da69d82699c102aa28e6f63ff2935655918ce8f44ae555185be73a1a3fbd\",\"dweb:/ipfs/QmPc2QL2xWY3UsbmAKV3KWREXU4omp3dodW6hSpzdMiqFC\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x676d65383d5311b6c1fe9c6b580a32abd0a5582d1d5d2b67f388153578a9bbc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ee8207d98ba4aae20941a8d48673e60c89b8aaf4e91eb99c6d7fc2d57ce2e\",\"dweb:/ipfs/QmTCZisUyrBMkVMDY7nQ8jCaV87yZhsQ5dG7QNbbD6ViJe\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/NFT.sol\":{\"keccak256\":\"0xc76db0f6c28e06e20bb81040a5d8f315368be78513279a1f337da74d33931a86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973b2e4708dc7233cb2d84f035a54e26969c7308dae6eff38135b9210ef703d0\",\"dweb:/ipfs/Qmc9od83XmNNB7jSok8tpUjt5or7FxFgKKNyjYXnwxpSzp\"]}},\"version\":1}"}}}}}